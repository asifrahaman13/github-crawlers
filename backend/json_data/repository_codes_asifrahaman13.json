{
    "api-endpoints": {
        "README.md": {
            "code": "This is an express application that deals with user authentication management. The workflow of the application can be described as follows:\n\nSignup endpoints:\n\nThe signup endpoint is built on post request. Users have to enter the following for the signup process:\nname, mobile number, email, and password.\nThe data should be in the form of a JSON object.\n\nAfter the successful signup process, A JSON toke will be sent along with data whether the signup is successful.\n\nTest case:\n{ \"name\":\"anand kumar\",\n\"email\":\"anandk@gmail.com\",\n\"mobile\":\"4785123654\",\n\"password\":\"abcd123@#\",\n}\n\nOutput:\n\n{\n\"success\": true,\n\"jwt_data\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNjYzBjOTA2ZjgyZTMyNjEwZjMyNjhlIiwibW9iaWxlIjoiNDc4NTEyMzY1NCIsImVtYWlsIjoiYW5hbmRrQGdtYWlsLmNvbSJ9LCJpYXQiOjE2NzQzMTY5NDR9.lDYTBlpHUoaZHKTKEWNODtpJfzvlSU2RJE_JlVH6DTg\"\n}\n\nHowever, if the user already exists then the return value will be an error message which says that the user already exists.\n\nOn hitting the endpoint a second time, we will get the following message:\n\n{\n\"success\": false,\n\"error\": \"Sorry the user already exists\"\n}\n\nLogin endpoint:\nThis endpoint also uses the post request.\nThe endpoint accepts the email and the user's password as the parameters. They should be in JSON format.\nIf the user enters the correct password corresponding to the email, then a auth token will be sent containing the details such as id, mobile, email, etc.\n\nTest case.\n\n{\n\"email\":\"anandk@gmail.com\",\n\"password\":\"abcd123@#\",\n}\n\nOutput:\n\n{\n\"success\": true,\n\"authtoken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNjYzBjOTA2ZjgyZTMyNjEwZjMyNjhlIiwiZW1haWwiOiJhbmFuZGtAZ21haWwuY29tIiwibW9iaWxlIjoiNDc4NTEyMzY1NCJ9LCJpYXQiOjE2NzQzMTc0MTN9.5Q1UE2KWIUYumn9ryZXJQLK4PzX0crIjacZrUduHqbA\"\n}\n\nHowever, an error message will be displayed on entering the incorrect password.\n\n{\n\"success\": false,\n\"errors\": []\n}\n\nReset password:\n\nThe reset password also uses post request. The endpoint accepts the email, old password, and new password as the parameters. On entering the correct old password, the user can update the password, and a message containing the new password will be displayed in an encrypted format.\n\nTest case:\n{  \n \"email\":\"anandk@gmail.com\",,\n\"oldPassword\":\"abcd123@#\",\n\"newPassword\":\"abcd123@#\",\n}\n\nOutput:\n\n{\n\"message\": \"Password reset successfully and new password in hashed forrm is:$2a$10$.SRE6mklo6sjaT8ixnwfp.kP9YpiEQ4pzmQj3RDOr8wmiFJZ15vja\"\n}\n\nHowever, if you enter an incorrect old password, then the following message will be shown:\n\n{\n\"message\": \"Old password is incorrect.\"\n}\n\nupdate endpoint:\n\nThis endpoint uses the update request. The endpoint accepts name, email, mobile, etc. as the parameters. One can update the data. The data should be in the form of a JSON object.\n\nTest case:\n\n{ \"name\":\"anand kumar\",\n\"email\":\"anandk@gmail.com\",\n\"mobile\":\"4785123657\",\n\"password\":\"abcd12f3@#\",\n}\n\nOutput:\n\n{\n\"message\": \"Data update successfully.\"\n}\n\nAll the data are encrypted. The private and public keys are auto-generated and can be obtained by running the following commands:\n\nvar publicKey=key.exportKey('public');\nvar privateKey=key.exportKey('private');\n\n"
        },
        "db.js": {
            "code": "const mongoose=require('mongoose');\nrequire('dotenv').config();\nconst mongoURI=process.env.CONNECTION_URL\n\nconst connectToMongoose=async ()=>{\n    mongoose.connect(mongoURI, async()=>{\n        console.log('Connected to mongoose successfully.');\n    })\n}\n\nmodule.exports = connectToMongoose"
        },
        "index.js": {
            "code": "const connectToMongoose=require('./db');\nconst express=require('express');\nconst app = express();\nvar cors=require('cors');\n\nconst port=process.env.PORT || 5000;\n\napp.use(cors())\napp.use(express.json());\napp.use('/api/auth',require('./routes/auth'));\n\napp.get(\"/\",(req,res)=>{\n    res.send(\"Hello world and nice to meet you\");\n})\n\napp.listen(port,()=>{\n    console.log(`Example app is listening in the port: ${port}`);\n})\n\nconnectToMongoose();"
        },
        "fetchuser.js": {
            "code": "const jwt=require('jsonwebtoken');\nconst jwt_token = \"Hello world\";\n\nconst fetchuser=async (req,res,next)=>{\n    const token=await req.header('auth-token');\n    if(!token){\n        // res.status(401).send({error:\"Please authenticate using a valid token\"});\n        console.log(\"ok\");\n    }\n    try{\n        const data=jwt.verify(token,jwt_token);\n        req.user=await data.user;\n        next();\n    }\n    catch(err){\n        res.status(401).send({error:\"Please authenticate using a valid token\"});\n    }\n}\nmodule.exports = fetchuser"
        },
        "User.js": {
            "code": "const mongoose=require('mongoose');\nconst {Schema}=mongoose;\n\nconst UserSchema=new Schema({\n    name:{\n        type:String,\n        required:true\n    },\n    mobile:{\n        type:String,\n        required:true\n    },\n    email:{\n        type:String,\n        required:true\n    },\n    password:{\n        type:String,\n        required:true\n    },\n    date:{\n        type:Date,\n        default:Date.now\n    }\n});\n\nconst User=mongoose.model('user-assignemnt',UserSchema);\nmodule.exports =User;\n"
        }
    },
    "asifrahamanportfolio": {
        "README.md": {
            "code": "# Welcome to React Ecommerce Webstie Series \n\n## Follow the 3 Steps and your good to go. \n\n1: Clone the Project \n\n2: simply run the command \n   ### `npm install` \n   First to install all the packages\n   \n3: run the project using \n   ### `npm start`\n   \n   ---\n\n# Getting Started with Create React App \n\nThis project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n\n## Available Scripts\n\nIn the project directory, you can run:\n\n### `npm start`\n\nRuns the app in the development mode.\\\nOpen [http://localhost:3000](http://localhost:3000) to view it in your browser.\n\nThe page will reload when you make changes.\\\nYou may also see any lint errors in the console.\n\n### `npm test`\n\nLaunches the test runner in the interactive watch mode.\\\nSee the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\n\n### `npm run build`\n\nBuilds the app for production to the `build` folder.\\\nIt correctly bundles React in production mode and optimizes the build for the best performance.\n\nThe build is minified and the filenames include the hashes.\\\nYour app is ready to be deployed!\n\nSee the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n\n### `npm run eject`\n\n**Note: this is a one-way operation. Once you `eject`, you can't go back!**\n\nIf you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\n\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.\n\nYou don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.\n\n## Learn More\n\nYou can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\n\nTo learn React, check out the [React documentation](https://reactjs.org/).\n\n### Code Splitting\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)\n\n### Analyzing the Bundle Size\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)\n\n### Making a Progressive Web App\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)\n\n### Advanced Configuration\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)\n\n### Deployment\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)\n\n### `npm run build` fails to minify\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)\n\n\n\nL1QW5efWQIwxsaBqtsSng7o5Cj9gmAaT5zSR2aFa0z2C9ocV\n"
        },
        "index.html": {
            "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    -->\n    <title>Asif Rahaman Portfolio</title>\n \n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <script src=\"https://kit.fontawesome.com/3d050caad7.js\" crossorigin=\"anonymous\"></script>\n    <!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    -->\n\n  </body>\n</html>\n"
        },
        "robots.txt": {
            "code": "# https://www.robotstxt.org/robotstxt.html\nUser-agent: *\nDisallow:\n"
        },
        "App.css": {
            "code": "body {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow-x: hidden;\n  scroll-behavior: smooth !important;\n}\n\nhtml {\n  overflow-x: hidden;\n  overflow-y: hidden;\n\n}\n\n*{\n  margin: 0px;\n}\n"
        },
        "App.js": {
            "code": "import React from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport About from \"./components/About/About\";\nimport Contact from \"./components/Contact/Contact\";\nimport Home from \"./components/Home/Home\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.css\"\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nconst url=\"https://portfoliodummy.adaptable.app/\"\n\nconst App = () => {\n  return (\n    <>\n      <>\n        <body>\n          <BrowserRouter>\n            <Navbar />\n            <Routes>\n              <Route path=\"/asifrahamanportfolio\" element={<Home />} />\n              <Route path=\"/about\" element={<About />} />\n              <Route path=\"/contact\" element={<Contact />} />\n              <Route path=\"*\" element={<Home/>} />\n            </Routes>\n            <Footer />\n          </BrowserRouter>\n        </body>\n      </>\n\n    </>\n  );\n};\n\nexport default App;\n"
        },
        "About.css": {
            "code": ".about-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  padding: 5% 5% 5% 5%;\n  margin: 10vh 0vw 0vw 0vw;\n}\n\n.about {\n  text-align: justify;\n  box-shadow: 0px 5px 20px rgb(153, 135, 212);\n  padding: 3% 5% 5% 5%;\n  border-radius: 20px;\n  width:70%;\n  \n}\n\naboutme {\n  font-size: 32px;\n  font-weight: bold;\n  color: rgb(74, 7, 151);\n}\n@media (max-width: 800px) {\n  .about-container {\n    margin: 30vh 0vw 10vh 0vh;\n  }\n  .about{\n    width:95%;\n  }\n}\n"
        },
        "About.jsx": {
            "code": "import React from \"react\";\nimport \"./About.css\";\n\nconst About = () => {\n  return (\n    <>\n      <div className=\"about-container\">\n        <div className=\"about\">\n          <center>\n            <aboutme>About Me</aboutme>\n          </center>\n          <br />\n          Hello visitor! Thanks for visiting my website. My name is Asif\n          Rahaman, and I am a second-year student at IIT Bhilai. I am pursuing\n          Electrical Engineering. Currently, I am in my second year. I am a\n          coding geek who likes to spend most of my time coding. I code for fun\n          and to learn the latest amazing technologies. I passed class 10 from\n          LMET International School and class 12 from Prabharani Public School.\n          Both of them are in Berhmapore, and both of them come under CBSE.\n          <p />\n          <br />\n          I spend a good amount of my time reading books. I read books from\n          almost all kinds of domains. Among all horror, my favorites are\n          science fiction, psychological thrillers, and adventures. I never miss\n          the stories of Sunday suspense, and I frequently listen to the stories\n          by radio 98.4 Mirchi Bangle.(I am from West Bengal). I read spiritual\n          books, too, like Quran, Mahabharat, the bible, etc. This gives me\n          inner satisfaction and boosts my confidence. I am an agonist, and I\n          sincerely thank GOD for all his creation.:)\n          <p />\n          <br />I love playing sports. I occasionally play football, cricket,\n          tennis, etc. Among all, football is my favorite. However, due to my\n          busy schedule, I am not able to play them:(\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default About;\n"
        },
        "Banner.css": {
            "code": ".banner-img{\n    background-image: url(\"../assests/19362653.jpg\");\n    background-size: 100% 100%;\n    width:100vw;\n    height: 120vh;\n}\n\n.banner{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n}\n\n@media (max-width:500px){\n    .banner-img{\n        background-size: 100% 100%;\n        width:100vw;\n        margin:25vh 0px 0px 0px;\n        height: 50vh;\n       \n    }\n    .banner{\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n\n    }\n}"
        },
        "Banner.jsx": {
            "code": "import React from 'react'\nimport \"./Banner.css\"\n\nconst Banner = () => {\n  return (\n    <>\n    <div className=\"banner\">\n        <div className=\"banner-img\"></div>\n    </div>\n    </>\n  )\n}\n\nexport default Banner"
        },
        "Bouncing.css": {
            "code": "bouncing {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 20vh;\n}\n\n.bouncing-ul {\n  display: flex;\n  flex-direction: row;\n}\n\n.bouncing-ul li {\n  width: 40px;\n  height: 40px;\n  list-style: none;\n  background-color: rgb(212, 163, 224);\n  margin: auto 2vw;\n  border-radius: 50px;\n  animation: bouncing 1s linear infinite alternate-reverse;\n}\n\n@keyframes bouncing {\n  0% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(-15vh);\n  }\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.bouncing-ul li:nth-child(2) {\n  animation-delay: 0.2s;\n}\n.bouncing-ul li:nth-child(3) {\n  animation-delay: 0.4s;\n}\n.bouncing-ul li:nth-child(4) {\n  animation-delay: 0.8s;\n}\n.bouncing-ul li:nth-child(5) {\n  animation-delay: 0.2s;\n}\n\n"
        },
        "Bouncing.jsx": {
            "code": "import React from 'react'\nimport \"./Bouncing.css\"\n\nconst Bouncing = () => {\n  return (\n    <>\n     <div className=\"ball\">\n        <bouncing>\n          <ul className=\"bouncing-ul\">\n            <li className=\"bouncing-li\"></li>\n            <li className=\"bouncing-li\"></li>\n            <li className=\"bouncing-li\"></li>\n            <li className=\"bouncing-li\"></li>\n            <li className=\"bouncing-li\"></li>\n          </ul>\n        </bouncing>\n      </div>\n    </>\n  )\n}\n\nexport default Bouncing"
        },
        "Contact.css": {
            "code": ".contact-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin: 10vh;\n}\n\n.form-input {\n  border-color: white;\n  margin: 1%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 70vw;\n  height: 7vh;\n  padding: 4%;\n  border-radius: 30px;\n  box-shadow: 0px 5px 20px rgb(197, 191, 220);\n}\n\n.textarea-contact {\n  margin: 1%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 4%;\n  width: 70vw;\n  height: 30vh;\n  border-radius: 30px;\n  box-shadow: 0px 5px 20px rgb(197, 191, 220);\n}\n\n.contact-me {\n  font-size: 32px;\n  font-weight: 700;\n  color: rgb(26, 1, 55) !important;\n}\n\n.btn-submit {\n  background-color: rgb(74, 7, 151);\n  color: white;\n  font-size: 2rem;\n  font-weight: bold;\n  width: 20vw;\n  height: 10vh;\n  border-radius: 30px;\n}\n\n@media (max-width: 500px) {\n  .btn-submit {\n    background-color: rgb(74, 7, 151);\n    color: white;\n    font-size: 80%;\n    font-weight: bold;\n    width: 35vw;\n    border-radius: 30px;\n  }\n  .contact-me {\n    font-size: 130%;\n    font-weight: 700;\n    color: rgb(47, 5, 94) !important;\n  }\n  .contact-container {\n    margin: 20vh 0vw 10vw 0vw;\n  }\n}\n\n#contact-me {\n  font-size: 50px;\n}\n\n.contact-label {\n  color: rgb(124, 38, 161);\n}\n.status{\n  font-size: 1rem;\n  color:green;\n}"
        },
        "Contact.jsx": {
            "code": "import React from \"react\";\nimport \"./Contact.css\";\nimport { useState } from \"react\";\n\nconst Contact = () => {\n  const [msg, setMsg] = useState(false);\n\n  const [credential, setCredential] = useState({\n    email: \"\",\n    name: \"\",\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\n      \"https://backendportfolio.adaptable.app//contacts\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: credential.email,\n          name: credential.name,\n        }),\n      }\n    );\n    const json = await response.json();\n    console.log(json);\n  };\n\n  const onChange = (e) => {\n    setCredential({ ...credential, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <>\n\n      <center>\n        <contact className=\"contact-header\" id=\"contact-me\">\n          CONTACT ME\n        </contact>\n\n        <div className=\"contact-container\">\n          <div className=\"contact-me\">\n            <form onSubmit={handleSubmit}>\n              <label htmlFor=\"\" className=\"contact-label\">\n                Enter the name\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-input\"\n                placeholder=\"Enter your name e.g Captain Price\"\n                name=\"name\"\n                value={credential.name}\n                onChange={onChange}\n              />\n              <label htmlFor=\"\" className=\"contact-label\">\n                Enter your email address\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-input\"\n                placeholder=\"Enter your e-mail address\"\n                name=\"email\"\n                value={credential.email}\n                onChange={onChange}\n              />\n              <label htmlFor=\"\" className=\"contact-label\">\n                Enter your profession\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-input\"\n                placeholder=\"Enter your profession e.g student\"\n              />\n              <label htmlFor=\"\" className=\"contact-label\">\n                Enter your age\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-input\"\n                placeholder=\"Enter your age\"\n              />\n              <label htmlFor=\"\" className=\"contact-label\">\n                Enter your concern\n              </label>\n              <textarea\n                name=\"textarea-contact\"\n                cols=\"80\"\n                rows=\"10\"\n                className=\"textarea-contact\"\n                id=\"textarea-contact\"\n                placeholder=\"Enter your concern e.g Hello can you please.... \"\n              ></textarea>\n              <center>\n                <button\n                  className=\"btn-submit\"\n                  onClick={(e) => {\n                    setMsg(true);\n                  }}\n                >\n                  Submit\n                </button>\n              </center>\n              <submission className=\"status\">\n                {msg == false ? <></> : <>Your message is submitted</>}\n              </submission>\n            </form>\n          </div>\n        </div>\n      </center>\n    </>\n  );\n};\n\nexport default Contact;\n"
        },
        "Credits.css": {
            "code": ".credit-serv ul {\n    display: flex;\n    flex-wrap: wrap;\n    padding-left: 0;\n    flex-direction: row;\n    justify-content: center;\n  }\n  \n  .credit-serv ul li {\n    list-style: none;\n    flex: 5 2 5%;\n    margin: 1px;\n    border-radius: 20px;\n    padding: 1vw 2vw 1vw 2vw;\n    text-align: center;\n    box-shadow: 0px 5px 20px rgb(200, 190, 232);\n    background-color: yellow;\n  }\n  \n  .credit-container {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    margin:10vh;\n  }\n\n  .skill{\n    margin: 10vh 0vh 0vh 0vh;\n  }"
        },
        "Credits.jsx": {
            "code": "import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./Credits.css\";\nimport { v4 } from 'uuid'\n\nconst Credits = () => {\n  const data = require(\"./credits.json\");\n  useEffect(() => {\n    main();\n  }, []);\n\n  const [creditdata, setCreditdata] = useState([]);\n\n  const main = async () => {\n    setCreditdata(await contract.getCredits());\n    return;\n  };\n  const provider = new ethers.providers.JsonRpcProvider(\n    `https://goerli.infura.io/v3/5f1919e74ef0420ca8348dfab3af6bdc`\n  );\n  const contractAddress = \"0x8B7D297a15844415AC7F51fe90C659006F18de2b\";\n  const ABI = data;\n  const contract = new ethers.Contract(contractAddress, ABI, provider);\n\n  return (\n    <>\n      <center>\n        <h2 className=\"skill\" id=\"credits\">\n          <a href=\"#scroll\">CREDITS</a>\n        </h2>\n      </center>\n      <div className=\"credit-container\">\n        <div className=\"credit-serv\">\n          <ul>\n            {creditdata.map((item, idx) => {\n              return (\n                <>\n                  <li key={v4()}> {item}</li>\n                </>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Credits;\n"
        },
        "Footer.css": {
            "code": "/* .footer-components {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n@media (max-width: 500px) {\n  .footer-components {\n    flex-wrap: wrap;\n  }\n}\n.footer {\n  background-color: rgb(249, 247, 255);\n  height: 1200px !important;\n  margin-top: auto;\n}\n.footer-components * {\n  width: 4vw;\n}\n\n.github {\n  background-image: url(\"../assests/github.png\");\n  background-size: 100% 100%;\n}\n.facebook {\n  background-image: url(\"../assests/facebook.png\");\n  background-size: 100% 100%;\n}\n.instagram {\n  background-image: url(\"../assests/instagram.png\");\n  background-size: 100% 100%;\n}\n.linkedin {\n  background-image: url(\"../assests/linkedin.png\");\n  background-size: 100% 100%;\n}\n.telegram {\n  background-image: url(\"../assests/telegram.png\");\n  background-size: 100% 100%;\n}\n.gmail {\n  background-image: url(\"../assests/gmail.png\");\n  background-size: 100% 100%;\n}\n\n.skills {\n  color: rgb(39, 3, 80);\n}\n\na {\n  text-decoration: none;\n}\n\n@media (max-width: 500px) {\n  .footer-components * {\n    display: flex !important;\n    flex-direction: row !important;\n    flex-wrap: wrap !important;\n  }\n}\n\n@media ((max-width: 800px) and (min-width:400px)) {\n  .footer * {\n    width: 25vw;\n    height: 15vh;\n    margin: 1vh;\n  }\n  .footer {\n    display: flex;\n    flex-direction: column;\n\n    align-items: center;\n    height: 1000px;\n  }\n  .footer-components {\n    display: flex;\n    flex-direction: row !important;\n    flex-wrap: wrap;\n    margin: 1px;\n    height: 100vh;\n  }\n  .footer-components * {\n    display: flex;\n    flex-direction: row !important;\n    flex-wrap: wrap;\n    margin: 0.1px;\n  }\n} */\n.footer-container{\n  display:flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(219, 199, 250);\n  height:1000px !important;\n}\n\n.footer-ul-second{\n  display:flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  height:40vh !important;\n}\n\n.footer-ul-first{\n  margin:2vh;\n  font-size: 2rem;\n  font-weight: bold;\n  color: rgb(78, 30, 136);\n}\n\n.footer-ul-second li{\n  padding:2vw;\n  margin:3vw;\n  height:2vh;\n  width:2vh;\n}\n\n@media (max-width:800px){\n  .footer-ul-second li{\n    padding:2vw;\n    margin:3vw;\n    height:5vh;\n    width:5vh;\n  }\n}\n\n"
        },
        "Footer.jsx": {
            "code": "import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  const images = [\n    {\n      handle: \"images/linkedin.png\",\n      link: \"https://www.linkedin.com/in/asif-rahaman-110099229/\",\n    },\n    {\n      handle: \"images/telegram.png\",\n      link: \"https://telegram.me/asifrahaman_13\",\n    },\n    {\n      handle: \"images/discord.png\",\n      link: \"http://discordapp.com/users/1025373541056647248\",\n    },\n    {\n      handle: \"images/gmail.png\",\n      link: \"https://mail.google.com/mail/?view=cm&fs=1&to=asifrahaman162@gmail.com\",\n    },\n    {\n      handle: \"images/github.png\",\n      link: \"https://github.com/asifrahaman13\",\n    },\n  ];\n\n  const footerstyle1 = {\n    backgroundSize: \"100% 100%\",\n  };\n\n  return (\n    <>\n      <div className=\"footer-container\">\n        <ul className=\"footer-ul-first\">CONTACT ME</ul>\n        <ul className=\"footer-ul-second\">\n          {images.map((item, idx) => {\n            return (\n              <>\n                <a href={item.link}>\n                  <li\n                    style={{ backgroundImage: `url(${item.handle})`, ...footerstyle1 }}\n                  >\n                    {\" \"}\n                  </li>\n                </a>\n              </>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Footer;\n"
        },
        "Header.css": {
            "code": "@media (max-width: 500px) {\n  .imageclass * {\n    width: 30vw;\n    height: 15vw;\n    margin: 0.1vh;\n  }\n  .images {\n    margin: 5vw 0vw 20vw 0vw;\n    height: 30vw;\n  }\n  aboutme {\n    margin: 15vw 0vw 0vw 0vw;\n  }\n}\n\n.scroll-view {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin: 4vw;\n}\n\n@media (max-width: 500px) {\n  .scroll-view * {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    padding: 2vw;\n    font-size: 2vh;\n  }\n}\n\n.scroll-view * {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding: 2vw;\n  font-size: 2vh;\n  border-color: black;\n}\n\n.scroll-child li * {\n  padding-bottom: 1vh;\n  border-bottom-style: solid;\n  border-bottom-width: 0.3vh;\n  width: max-content;\n  border-color: rgb(94, 44, 144);\n  animation: header 5s linear;\n}\n\n@keyframes header {\n  0% {\n    margin: 100px;\n  }\n  20% {\n    margin: 80px;\n  }\n  40% {\n    margin: 60px;\n  }\n  60% {\n    margin: 40px;\n  }\n}\n\n.hobbies {\n  font-size: 1rem !important;\n}\n\n.hobbies-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center !important;\n  justify-content: center !important;\n  width: 60vw !important;\n  background-color: red;\n}\n\n.txt {\n  font-size: 1rem !important;\n}\n"
        },
        "Header.jsx": {
            "code": "import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <>\n      <br />\n      <br />\n      <div className=\"scroll-view\" id=\"scroll\">\n        <div className=\"scroll-child\">\n      <li>\n        <a href=\"#participations\">Participations</a>\n      </li>\n      <li>\n        <a href=\"#projects\">Projects</a>\n      </li>\n      <li>\n        <a href=\"#skills\">My Skills</a>\n      </li>\n      <li>\n        <a href=\"#proficiency\">Proficiency</a>\n      </li>\n      <li>\n        <a href=\"#credits\">Credits</a>\n      </li>\n      </div>\n      </div>\n      <aboutme>\n        <center>\n          <h2 className=\"skill\" id=\"about\">\n            <a href=\"#nav\">MY HOBBIES</a>\n          </h2>\n          <br />\n          <br />\n          <center>\n\n            <h3 className=\"txt\">\n              I am a coding geek and a keen learner. I love exploring about new technologies. Apart from that I also spend my time in reading books every day.Ocassionally I listen to sunday suspense....\n            </h3></center>\n        </center>\n        <div className=\"images\">\n          <div className=\"imageclass\">\n            <div className=\"first-image\"></div>\n            <div className=\"second-image\"></div>\n            <div className=\"third-image\"></div>\n          </div>\n        </div>\n      </aboutme>\n    </>\n  );\n};\n\nexport default Header;\n"
        },
        "Home.css": {
            "code": ".serv ul {\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 0;\n  flex-direction: row;\n  justify-content: center;\n}\n\n.serv ul li {\n  list-style: none;\n  flex: 0 0 30.333333%;\n  margin: 1px;\n  border-radius: 20px;\n  padding: 2%;\n  box-shadow: 0px 5px 20px rgb(200, 190, 232);\n}\n\n.home-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n* {\n  margin: 0;\n  box-sizing: border-box;\n  padding: 0px;\n}\nhtml {\n  scroll-behavior: smooth;\n}\n.ul {\n  display: flex;\n  flex-direction: row-reverse;\n  list-style: none;\n}\n\n.list {\n  padding: 30px;\n  color: rgb(81, 31, 180);\n  font-size: 16px;\n}\n.nav {\n  background-color: rgb(249, 247, 255);\n  height: 700px;\n}\n\n.img {\n  width: 100vw;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n\n.body-ul {\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  width: 70%;\n  padding: 50px;\n}\n\n.body-li {\n  padding: 50px;\n  margin: 20px;\n  border-radius: 15px;\n  box-shadow: 0px 5px 20px rgb(200, 190, 232);\n}\n.body {\n  display: flex;\n  justify-content: center;\n  padding: 50px;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.font {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 50vh;\n}\n.first {\n  padding: 50px;\n}\n#first {\n  background-color: rgb(249, 247, 255);\n  height: 30vh;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n#second {\n  background-color: rgb(249, 247, 255);\n  width: 50vw;\n  height: 55vh;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-image: url(\"../assests/img.png\");\n  background-size: 100% 100%;\n}\n.btn {\n  height: 50px;\n  width: 150px;\n  border-radius: 30px;\n  background-color: blueviolet;\n  box-shadow: 0px 5px 20px rgb(31, 69, 146);\n  color: white;\n  font-weight: bold;\n  font-size: 14px;\n  justify-content: center;\n  align-items: center;\n}\n.flex-box {\n  display: flex;\n  flex-direction: row;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  height: 50vh;\n  margin: 20px;\n}\n.display {\n  align-items: center;\n  padding: 50px;\n}\n.flex-box * {\n  border-radius: 10%;\n  display: flex;\n  justify-content: justify;\n  align-items: center;\n}\n.flex-box1 {\n  background-color: red;\n  width: 45%;\n  height: 50vh;\n  margin: 2%;\n}\n.flex-box2 {\n  background-color: green;\n  width: 45%;\n  height: 50vh;\n  margin: 2%;\n}\n.flex-box3 {\n  background-color: blue;\n  width: 50%;\n  height: 50vh;\n  margin: 2%;\n}\n#flex1 {\n  background-color: rgb(249, 247, 255);\n}\n#flex2 {\n  background-color: rgb(249, 247, 255);\n  background-image: url(\"https://dlcdnrog.asus.com/rog/media/1640906694290.webp\");\n  background-size: 100% 100%;\n}\n#flex3 {\n  background-color: green !important;\n  background-image: url(\"https://www.hardsoftcomputers.co.uk/wp-content/uploads/2022/02/How-long-do-gaming-laptops-last.jpg\");\n  background-size: 100% 100%;\n}\n#flex4 {\n  background-color: rgb(249, 247, 255);\n}\n#flex5 {\n  background-color: rgb(249, 247, 255);\n}\n#flex6 {\n  background-color: orange !important;\n  background-image: url(\"https://imgnew.outlookindia.com/uploadimage/library/16_9/16_9_5/IMAGE_1651057728.webp\");\n  background-size: 100% 100%;\n}\n\n.container2 {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 5px 5px 5px 5px;\n  padding: 4%;\n}\n.container2 * {\n  width: 90%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 30vh;\n  margin: 10px 10px 10px 10px;\n  border-radius: 20px;\n}\n\n.flexbox1 {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.flexbox2 {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n.flexbox1 * {\n  padding: 50px;\n  width: 80vw;\n  box-shadow: 0px 5px 20px rgb(200, 190, 232);\n}\n.flexbox2 * {\n  padding: 50px;\n  box-shadow: 0px 5px 20px rgb(200, 190, 232);\n}\n\n.second-img {\n  border-radius: 300px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5%;\n}\n.second-img * {\n  border-radius: 15px;\n}\n\n.images {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.imageclass {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.imageclass * {\n  width: 30vw;\n  height: 30vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 8%;\n  padding: 5%;\n}\n\n.first-image {\n  background-image: url(\"../assests/py.png\");\n  background-size: 100% 100%;\n}\n.second-image {\n  background-image: url(\"../assests/v.jpg\");\n  background-size: 100% 100%;\n}\n.third-image {\n  background-image: url(\"../assests/pro.jpg\");\n  background-size: 100% 100%;\n}\n\n.assests {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n\n.footer-components {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.footer-components * {\n  padding: 40px;\n  margin: 4vw;\n  width: 4vw;\n}\n\n.github {\n  background-image: url(\"../assests/github.png\");\n  background-size: 100% 100%;\n}\n.facebook {\n  background-image: url(\"../assests/facebook.png\");\n  background-size: 100% 100%;\n}\n.instagram {\n  background-image: url(\"../assests/instagram.png\");\n  background-size: 100% 100%;\n}\n.linkedin {\n  background-image: url(\"../assests/linkedin.png\");\n  background-size: 100% 100%;\n}\n.telegram {\n  background-image: url(\"../assests/telegram.png\");\n  background-size: 100% 100%;\n}\n.gmail {\n  background-image: url(\"../assests/gmail.png\");\n  background-size: 100% 100%;\n}\n\n.skills {\n  padding: 0%;\n}\n\na {\n  text-decoration: none;\n}\n"
        },
        "Home.jsx": {
            "code": "import React from \"react\";\nimport \"./Home.css\";\nimport Header from \"../Header/Header\";\nimport Participations from \"../Participations/Participations\";\nimport Skills from \"../Skills/Skills\";\nimport Proficiency from \"../Proficiency/Proficiency\";\nimport Projects from \"../Projects/Projects\";\nimport Banner from \"../Banner/Banner\";\nimport Bouncing from \"../Bouncing/Bouncing\";\nimport Credits from \"../Credits/Credits\";\n\nconst Home = () => {\n  return (\n    <>\n      <Banner />\n      <Header />\n      <Bouncing />\n      <center>\n        <h2 className=\"skill\" id=\"about\">\n          <a href=\"#scroll\" id=\"participations\">\n            PARTICIPATIONS\n          </a>\n        </h2>\n        <br />\n        <br />\n        <br />\n      </center>\n      <Participations />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n\n      <center>\n        <h2 className=\"skill\" id=\"projects\">\n          <a href=\"#scroll\">PROJECTS</a>\n        </h2>\n      </center>\n      <br />\n      <br />\n      <br />\n      <Projects />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <center>\n        <h2 className=\"skill\" id=\"skills\">\n          <a href=\"#scroll\">MY SKILLS</a>\n        </h2>\n      </center>\n\n      <Skills />\n      <Proficiency />\n      <Credits/>\n    </>\n  );\n};\n\nexport default Home;\n"
        },
        "index.js": {
            "code": "import React from 'react';\nimport createRoot from 'react-dom'\nimport App from './App'\n\ncreateRoot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"
        }
    },
    "backend-internship-task": {
        "README.md": {
            "code": "# Calorie Tracker Application\n\n## Description\nThe Calorie Tracker is a web application that allows users to track their daily calorie intake by creating and managing entries.\n\n## Setup\n1. Clone the repository: \n    git clone https://github.com/DiveHQ-Octernships/dive-backend-engineering-octernship-asifrahaman13.git\n2. Navigate to the project directory: \n    \n3. Create a virtual environment:\n    python -m venv venv\n4. Activate the virtual environment:\n    - For Windows:\n    ```\n    venv\\Scripts\\activate\n    ```\n    - For macOS/Linux:\n    ```\n    source venv/bin/activate\n    ```\n5. Install the required dependencies:\n    pip install -r requirements.txt\n6. Set up the database:\n    - Modify the database connection settings in `main.py` according to your database configuration.\n\n## Usage\n1. Start the application server:\n    uvicorn main:app --reload\n2. Access the application in your web browser at `http://localhost:8000`.\n\n## API Testing with pytest\n1. Make sure the application server is running.\n2. Activate the virtual environment if not already activated.\n3. Run the pytest cases:\n    pytest\n\n\n\n## Example usage through Postman or Thunder Client\n\nGetting started:\n\nURL: http://0.0.0.0:8000/\n\nREQUEST TYPE:\n\nGET\n\nRESPONSE:\n\nHello, world!\n************************************************************************************************\nNow first, you need to register before being able to use the app.\n\nURL: http://0.0.0.0:8000/api/register\n\nRequest Type: POST\n\nJSON PALOAD:\n\n{ \n  \"username\":\"asifxy\",\n  \"password\":\"pass\",\n  \"role\":\"admin\",\n  \"daily_calorie_goal\":120\n}\n\nResponse:\n\n{\n  \"status_code\": 202,\n  \"message\": \"User registered successfully\"\n}\n\n************************************************************************************************\n\nNext, you need to log in\n\nURL: http://0.0.0.0:8000/api/login\n\nRequest Type: POST\n\nJASON PAYLOAD:\n\n{ \n  \"username\":\"asifxyz\",\n  \"password\":\"pass\"\n}\n\n\nResponse:\n\n{\n  \"message\": \"Login successful\"\n}\n\n************************************************************************************************\n\nNext, you can enter the entries.\n\nURL: http://0.0.0.0:8000/api/entries\n\nRequest Type:  POST\n\nJSON:\n\n{ \"date\": \"2023-06-18\",\n  \"time\": \"12:00\",\n  \"text\": \"I Love Apples Oranges\",\n  \"calories\": 300,\n  \"username\":\"asifxyz\",\n  \"password\":\"pass\",\n  \"role\":\"admin\",\n  \"daily_calorie_goal\":120\n}\n\nResponse:\n\n{\n  \"message\": \"Entry created successfully\"\n}\n\n************************************************************************************************\n\nNext you can get all the entries:\n\nURL: http://0.0.0.0:8000/api/entries\n\nREQUEST TYPE: GET\n\nJSON PAYLOAD:\n\n{ \"date\": \"2023-06-18\",\n  \"time\": \"12:00\",\n  \"text\": \"I Love Apples Oranges\",\n  \"calories\": 300,\n  \"username\":\"asifxyz\",\n  \"password\":\"pass\",\n  \"role\":\"admin\",\n  \"daily_calorie_goal\":120\n}\n\nResponse:\n\n[\n  {\n    \"time\": \"12:00:00\",\n    \"id\": 6,\n    \"calories\": 500,\n    \"date\": \"2023-06-18\",\n    \"user_id\": 2,\n    \"text\": \"Test entry\",\n    \"is_below_goal\": true\n  },\n  {\n    \"time\": \"12:00:00\",\n    \"id\": 7,\n    \"calories\": 500,\n    \"date\": \"2023-06-18\",\n    \"user_id\": 2,\n    \"text\": \"Test entry\",\n    \"is_below_goal\": true\n  },\n  {\n    \"time\": \"12:00:00\",\n    \"id\": 8,\n    \"calories\": 300,\n    \"date\": \"2023-06-18\",\n    \"user_id\": 6,\n    \"text\": \"I Love Apples Oranges\",\n    \"is_below_goal\": false\n  }\n]\n\n\n************************************************************************************************\n\nTo update the details, you need to pass the id of the entry as a slug\n\nURL: http://0.0.0.0:8000/api/entries/8\n\nREQUEST TYPE: PUT\n\nJSON PAYLOAD:\n\n{ \"date\": \"2023-06-18\",\n  \"time\": \"12:00\",\n  \"text\": \"I Love Apples only\",\n  \"calories\": 300,\n  \"username\":\"asifxy\",\n  \"password\":\"pass\",\n  \"role\":\"admin\",\n  \"daily_calorie_goal\":120\n}\n\nRESPONSE:\n\n{\n  \"message\": \"Entry updated successfully\"\n}\n\nTo delete, we also need to pass the id in the form of a slug\n\n************************************************************************************************\n\nURL: http://0.0.0.0:8000/api/entries/8\n\nREQUEST TYPE: DELETE]\n\nRESPONSE:\n\n{\n  \"message\": \"Entry deleted successfully\"\n}\n\nWe can test similar functionalities for other access rights like amin, users etc. \n"
        },
        "main.py": {
            "code": "\"\"\"_summary_\nReferences:\nNutritionix API Documentation =  https://gist.github.com/mattsilv/6d19997bbdd02cf5337e9d4806b4f464\n    \n\"\"\"\n\n# Import all the libraries and packages in the code\nfrom fastapi.staticfiles import StaticFiles\nfrom fastapi import FastAPI, HTTPException, Depends, status\nfrom fastapi import FastAPI\nimport logging\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker,Session\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom fastapi.middleware.cors import CORSMiddleware\nfrom sqlalchemy import Column, Integer, String, Date, Time, Boolean, ForeignKey, func\nfrom sqlalchemy.orm import relationship\nfrom fastapi.security import HTTPBasic,HTTPBasicCredentials\nfrom enum import Enum\nfrom passlib.context import CryptContext\nfrom starlette.responses import Response\nfrom pydantic import BaseModel\nimport datetime\nfrom typing import Optional\nimport requests\n\n# Setting  the debugging mode on\nlogging.basicConfig(level=logging.DEBUG)\n\n# Setting the FastAPI \napp = FastAPI()\n\n# Mount the static files which would contains the HTML files for testing the APIs\n# app.mount(\"/static\", StaticFiles(directory=\"static\"), name=\"static\")\n\n\nheaders = {\n    'Accept-Language': 'en-US,en;q=0.9',\n    'Connection': 'keep-alive',\n    'Referer': 'https://trackapi.nutritionix.com/docs/',\n    'Sec-Fetch-Dest': 'empty',\n    'Sec-Fetch-Mode': 'cors',\n    'Sec-Fetch-Site': 'same-origin',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36',\n    'accept': 'application/json',\n    'sec-ch-ua': '\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n}\n\n# Added multiple origins to remove the cors errors which we may encounter later\n\norigins = [\n    \"http://localhost\",\n    \"http://127.0.0.1\",\n    \"http://127.0.0.1:8000\",\n    \"http://localhost:8000\",\n    \"http://localhost:8000/api\",\n]\n\n# Setting up the parth for the SQLite\nSQLALCHEMY_DATABASE_URL = \"sqlite:///calories.db\"\nengine = create_engine(SQLALCHEMY_DATABASE_URL)\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\nBase = declarative_base()\n\n# Middleware to pass on the cors error and to check the credentials\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n# Function to interact with the database\n\ndef get_db():\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n\n\n# Define three roles for user, manager and an admin\nclass Role(str, Enum):\n    USER = \"user\"\n    USER_MANAGER = \"user_manager\"\n    ADMIN = \"admin\"\n\n# Defining the schema for the users.\n''' It will contain the username, password, role, daily calorie goad, and the entries. The id will be genrated automatically'''\nclass User(Base):\n    __tablename__ = 'users'\n\n    id = Column(Integer, primary_key=True)\n    username = Column(String(50), unique=True, nullable=False)\n    password = Column(String(100), nullable=False)\n    role = Column(String(20), nullable=False)\n    daily_calorie_goal = Column(Integer, nullable=False)\n    entries = relationship('Entry', back_populates='user')\n\n# Defining the schema for the entries.\n\n''' The entries should contain the user id, date , time , the text whixh contains the food, calories, whether it is below the goal and the user.'''\n\nclass Entry(Base):\n    __tablename__ = 'entries'\n\n    id = Column(Integer, primary_key=True)\n    user_id = Column(Integer, ForeignKey('users.id'), nullable=False)\n    date = Column(Date, nullable=False)\n    time = Column(Time, nullable=False)\n    text = Column(String(100), nullable=False)\n    calories = Column(Integer)\n    is_below_goal = Column(Boolean)\n    user = relationship('User', back_populates='entries')\n\n# The following code is used for database schema creation  and configuration. It will handle authentication as well as password hasing.\nBase.metadata.create_all(bind=engine)\nsecurity = HTTPBasic()\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\n\ndef verify_password(plain_password, hashed_password):\n    return pwd_context.verify(plain_password, hashed_password)\n\n\n# Function to genrerate the hash function\ndef get_password_hash(password):\n    return pwd_context.hash(password)\n\ndef get_password_hash(password):\n    return pwd_context.hash(password)\n\ndef authenticate_user(credentials: HTTPBasicCredentials = Depends(security)):\n    db = SessionLocal()\n    user = db.query(User).filter_by(username=credentials.username).first()\n    if not user or not verify_password(credentials.password, user.password):\n        raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED, detail=\"Invalid username or password\")\n    return user\n\n# Creating the model for the user\nclass UserLogin(BaseModel):\n    username: str\n    password: str\n\nclass EntryUpdate(BaseModel):\n    date: datetime.date\n    time: datetime.time\n    text: str\n    calories: int\n\nclass EntryCreate(BaseModel):\n    date: datetime.date\n    time: datetime.time\n    text: str\n    calories: Optional[int] = None\n\nclass UserCreate(BaseModel):\n    username: str\n    password: str\n    role: Role\n    daily_calorie_goal: int\n\n# API to access the index page of the web application\n@app.get(\"/\")\nasync def index():\n    response = Response(content=\"Hello, World!\", media_type=\"text/plain\")\n    return response\n\n# API to register the user\n@app.post(\"/api/register\")\nasync def register(user: UserCreate, db: Session = Depends(get_db)):\n    hashed_password = get_password_hash(user.password)\n    db_user = User(\n        username=user.username,\n        password=hashed_password,\n        role=user.role.value,\n        daily_calorie_goal=user.daily_calorie_goal\n    )\n    db.add(db_user)\n    db.commit()\n    # Return the status code and the success message.\n    return {\"status_code\": 202, \"message\": \"User registered successfully\"}\n\n# API to login \n@app.post(\"/api/login\")\nasync def login(user: UserLogin, db: Session = Depends(get_db)):\n    db_user = db.query(User).filter_by(username=user.username).first()\n    if db_user is None or not verify_password(user.password, db_user.password):\n        raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED, detail=\"Invalid username or password\")\n    return {\"message\": \"Login successful\"}\n\n# API to get all the entries of the user\n@app.get(\"/api/entries\")\nasync def get_entries(user: User = Depends(authenticate_user), db: Session = Depends(get_db)):\n    if user.role == \"admin\":\n        entries = db.query(Entry).all()\n    elif user.role == \"user_manager\":\n        entries = db.query(Entry).join(User).all()\n    else:\n        entries = db.query(Entry).filter_by(user_id=user.id).all()\n    return entries\n\n# API to post entries \n@app.post(\"/api/entries\")\nasync def create_entry(entry: EntryCreate, user: User = Depends(authenticate_user), db: Session = Depends(get_db)):\n    if not entry.calories:\n        calories = fetch_calories_from_api(entry.text)\n        if calories is None:\n            raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=\"Unable to fetch calories for the entered meal\")\n        entry.calories = calories\n    total_calories = get_total_calories_for_day(user, entry.date)\n    if not total_calories:\n        total_calories = 0\n    is_below_goal = total_calories + entry.calories < user.daily_calorie_goal\n\n    db_entry = Entry(\n        user_id=user.id,\n        date=entry.date,\n        time=entry.time,\n        text=entry.text,\n        calories=entry.calories,\n        is_below_goal=is_below_goal\n    )\n    db.add(db_entry)\n    db.commit()\n    return {\"message\": \"Entry created successfully\"}\n\n# Fetch calories from the api available \ndef fetch_calories_from_api(meal_text):\n    data = {\"password\": \"Drive^&*\", \"email\": \"asifrahaman162@gmail.com\"}\n    response = requests.post('https://trackapi.nutritionix.com/v2/auth/signin', headers=headers, data=data)\n    user_jwt = response.json()[\"x-user-jwt\"]\n    app_id = \"effeff0e\"\n    app_key = \"a26584f64a498f2f641bb6034dded946\"\n    headers.update( {\n        \"x-app-id\": app_id, \"x-app-key\": app_key, \"x-user-jwt\":  user_jwt, \n    })\n    params = {\n        'query': meal_text,\n        'self': 'true',\n        'branded': 'true',\n        'branded_food_name_only': 'false',\n        'common': 'true',\n        'common_general': 'true',\n        'common_grocery': 'true',\n        'common_restaurant': 'true',\n        'detailed': 'false',\n        'claims': 'false',\n        'taxonomy': 'false',\n    }\n    response = requests.get('https://trackapi.nutritionix.com/v2/search/instant', params=params, headers=headers)\n    if response.status_code == 200:\n        \n        response_json = response.json()\n        if \"branded\" not in response_json or not response_json[\"branded\"]:\n            return \n        return int(response.json()[\"branded\"][-1].get('nf_calories'))\n\n# Get the details of the entry through the ID\n@app.get(\"/api/entries/{entry_id}\")\nasync def get_entry(entry_id: int, user: User = Depends(authenticate_user), db: Session = Depends(get_db)):\n    # Check if the entry exists\n    db_entry = db.query(Entry).filter_by(id=entry_id, user_id=user.id).first()\n    if not db_entry:\n        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=\"Entry not found\")\n\n    # Return the entry\n    return {\n        \"id\": db_entry.id,\n        \"user_id\": db_entry.user_id,\n        \"date\": db_entry.date,\n        \"time\": db_entry.time,\n        \"text\": db_entry.text,\n        \"calories\": db_entry.calories,\n        \"is_below_goal\": db_entry.is_below_goal\n    }\n\n# API to update the entry by ID\n@app.put(\"/api/entries/{entry_id}\")\nasync def update_entry(entry_id: int, entry: EntryUpdate, user: User = Depends(authenticate_user), db: Session = Depends(get_db)):\n    # Check if the entry exists\n    db_entry = db.query(Entry).filter_by(id=entry_id, user_id=user.id).first()\n    if not db_entry:\n        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=\"Entry not found\")\n\n    # Update the entry with the provided data\n    db_entry.date = entry.date\n    db_entry.time = entry.time\n    db_entry.text = entry.text\n    db_entry.calories = entry.calories\n\n    # Recalculate is_below_goal\n    total_calories = get_total_calories_for_day(user, db_entry.date)\n    is_below_goal = total_calories + entry.calories < user.daily_calorie_goal\n    db_entry.is_below_goal = is_below_goal\n\n    db.commit()\n\n    return {\"message\": \"Entry updated successfully\"}\n\n# Function to calcualate the total calories of the user per day\ndef get_total_calories_for_day(user, date):\n    db = SessionLocal()\n    total_calories = db.query(func.sum(Entry.calories)).filter_by(user_id=user.id, date=date).scalar()\n    return total_calories\n\n# Update the entries of of the food\n@app.put(\"/api/entries/{entry_id}\")\nasync def update_entry(\n    entry_id: int,\n    entry: EntryUpdate,\n    user: User = Depends(authenticate_user),\n    db: Session = Depends(get_db),\n):\n    db_entry = db.query(Entry).get(entry_id)\n    if not db_entry:\n        raise HTTPException(\n            status_code=status.HTTP_404_NOT_FOUND,\n            detail=\"Entry not found\",\n        )\n\n    if user.role != \"admin\" and db_entry.user_id != user.id:\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail=\"You don't have permission to update this entry\",\n        )\n\n    db_entry.date = entry.date\n    db_entry.time = entry.time\n    db_entry.text = entry.text\n\n    db.commit()\n    return {\"message\": \"Entry updated successfully\"}\n\n\n# API to delete the entries completely\n@app.delete(\"/api/entries/{entry_id}\")\nasync def delete_entry(\n    entry_id: int,\n    user: User = Depends(authenticate_user),\n    db: Session = Depends(get_db),\n):\n    db_entry = db.query(Entry).get(entry_id)\n    if not db_entry:\n        raise HTTPException(\n            status_code=status.HTTP_404_NOT_FOUND,\n            detail=\"Entry not found\",\n        )\n\n    if user.role != \"admin\" and db_entry.user_id != user.id:\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail=\"You don't have permission to delete this entry\",\n        )\n\n    db.delete(db_entry)\n    db.commit()\n    return {\"message\": \"Entry deleted successfully\"}\n\n# Driver code of the program\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)"
        },
        "requirements.txt": {
            "code": "anyio==3.7.0\nbcrypt==4.0.1\ncertifi==2023.5.7\ncharset-normalizer==3.1.0\nclick==8.1.3\ncolorama==0.4.6\ndnspython==2.3.0\nemail-validator==2.0.0.post2\nexceptiongroup==1.1.1\nfastapi==0.97.0\nFastAPI-SQLAlchemy==0.2.1\ngreenlet==2.0.2\nh11==0.14.0\nhttpcore==0.17.2\nhttptools==0.5.0\nhttpx==0.24.1\nidna==3.4\niniconfig==2.0.0\nitsdangerous==2.1.2\nJinja2==3.1.2\nMarkupSafe==2.1.3\norjson==3.9.1\npackaging==23.1\npasslib==1.7.4\npluggy==1.0.0\npydantic==1.10.9\npytest==7.3.2\npython-dotenv==1.0.0\npython-multipart==0.0.6\nPyYAML==6.0\nrequests==2.31.0\nsniffio==1.3.0\nSQLAlchemy==2.0.16\nstarlette==0.27.0\ntomli==2.0.1\ntyping_extensions==4.6.3\nujson==5.8.0\nurllib3==2.0.3\nuvicorn==0.22.0\nwatchfiles==0.19.0\nwebsockets==11.0.3\n"
        },
        "submission.md": {
            "code": "# Calorie Tracker Application\n\n## Description\nThe Calorie Tracker is a web application that allows users to track their daily calorie intake by creating and managing entries.\n\n## Setup\n1. Clone the repository: \n    git clone https://github.com/MaheswaranPalaniselvan/nutritionix_api_fast_api.git\n2. Navigate to the project directory: \n    \n3. Create a virtual environment:\n    python -m venv venv\n4. Activate the virtual environment:\n    - For Windows:\n    ```\n    venv\\Scripts\\activate\n    ```\n    - For macOS/Linux:\n    ```\n    source venv/bin/activate\n    ```\n5. Install the required dependencies:\n    pip install -r requirements.txt\n6. Set up the database:\n    - Modify the database connection settings in `main.py` according to your database configuration.\n\n## Usage\n1. Start the application server:\n    uvicorn main:app --reload\n2. Access the application in your web browser at `http://localhost:8000`.\n\n## API Testing with pytest\n1. Make sure the application server is running.\n2. Activate the virtual environment if not already activated.\n3. Run the pytest cases:\n    pytest\n"
        },
        "test_main.py": {
            "code": "import pytest\nfrom fastapi.testclient import TestClient\nfrom main import app\nfrom datetime import date, time\nfrom unittest.mock import Mock, patch\nfrom main import fetch_calories_from_api\nall_entries = []\nclient = TestClient(app)\n\ndef test_create_entry():\n    entry_data = {\n        \"date\": str(date.today()),\n        \"time\": str(time(12, 0)),\n        \"text\": \"Test entry\",\n        \"calories\": 500\n    }\n    response = client.post(\"/api/entries\", json=entry_data,auth=('asifxy', 'pass'))\n    assert response.status_code == 200\n    assert response.json() == {\"message\": \"Entry created successfully\"}\n\ndef test_get_entries():\n    global all_entries\n    response = client.get(\"/api/entries\",auth=('asifxy', 'pass'))\n    assert response.status_code == 200\n    assert isinstance(response.json(), list)\n    all_entries = [entry[\"id\"] for entry in response.json()]\n\ndef test_get_entry():\n    response = client.get(f\"/api/entries/{all_entries[0]}\",auth=('asifxy', 'pass'))\n    assert response.status_code == 200\n    assert isinstance(response.json(), dict)\n\ndef test_update_entry():\n    updated_entry_data = {\n        \"date\": str(date.today()),\n        \"time\": str(time(14, 0)),\n        \"text\": \"Updated entry\",\n        \"calories\": 600\n    }\n    response = client.put(f\"/api/entries/{all_entries[0]}\", json=updated_entry_data,auth=('asifxy', 'pass'))\n    assert response.status_code == 200\n    assert response.json() == {\"message\": \"Entry updated successfully\"}\n\ndef test_delete_entry():\n    response = client.delete(f\"/api/entries/{all_entries[0]}\",auth=('asifxy', 'pass'))\n    assert response.status_code == 200\n    assert response.json() == {\"message\": \"Entry deleted successfully\"}\n\ndef test_create_entry_missing_fields():\n    entry_data = {}\n    response = client.post(\"/api/entries\", json=entry_data,auth=('asifxy', 'pass'))\n    assert response.status_code == 422  \n\ndef test_get_entry_not_found():\n    response = client.get(\"/api/entries/999\",auth=('asifxy', 'pass'))\n    assert response.status_code == 404\n\ndef test_update_entry_not_found():\n    updated_entry_data = {\n        \"date\": str(date.today()),\n        \"time\": str(time(14, 0)),\n        \"text\": \"Updated entry\",\n        \"calories\": 600\n    }\n    response = client.put(\"/api/entries/999\", json=updated_entry_data,auth=('asifxy', 'pass'))\n    assert response.status_code == 404\n\ndef test_delete_entry_not_found():\n    response = client.delete(\"/api/entries/999\",auth=('asifxy', 'pass'))\n    assert response.status_code == 404 \n\n\ndef test_fetch_calories_from_api_successful():\n    mock_response = Mock()\n    mock_response.status_code = 200\n    mock_response.json.return_value = {\n        \"branded\": [\n            {\n                \"nf_calories\": 300\n            }\n        ]\n    }\n\n    with patch('requests.get', return_value=mock_response):\n        calories = fetch_calories_from_api(\"meal\")\n        assert calories == 300\n\ndef test_fetch_calories_from_api_no_branded_food():\n    mock_response = Mock()\n    mock_response.status_code = 200\n    mock_response.json.return_value = {\n        \"branded\": []\n    }\n\n    with patch('requests.get', return_value=mock_response):\n        calories = fetch_calories_from_api(\"meal\")\n        assert calories is None\n\ndef test_fetch_calories_from_api_error():\n    mock_response = Mock()\n    mock_response.status_code = 500\n\n    with patch('requests.get', return_value=mock_response):\n        calories = fetch_calories_from_api(\"meal\")\n        assert calories is None"
        }
    },
    "backend-repo": {
        "data.py": {
            "code": "import json\nimport os\nfrom github import Github\nfrom fpdf import FPDF\nfrom dotenv import load_dotenv\nimport time\n\n# Load environment variables from .env file\nload_dotenv()\n\n# This is the acess key of the person who will use this code. Note that this has usage limit and needs to be reset if the limit is reached.\n# Also I have set expiration date of 30 days.\ngithub_access_key = os.environ['GITHUB_ACCESS_TOKEN']\n\ndef fetch_github(username):\n    # Initialize an empty list to hold the user information.\n    userinfo=[]\n    # Replace 'YOUR_ACCESS_TOKEN' with your personal access token\n    access_token = github_access_key\n    # Create a Github instance with the access token\n    g = Github(access_token)\n    # Get a user by username\n    user = g.get_user(username)\n    userinfo.append(user.name)\n    userinfo.append(user.login)\n    userinfo.append(user.location)\n    userinfo.append(user.bio)\n    # List repositories of the user\n    repositories = user.get_repos()\n    count = 0\n    # Create an empty repsonse object where we will store the results\n    response = {}\n    print(\"Getting all the information online..................................................\")\n    # Start the timer\n    start_time = time.time()\n    for repo in repositories:\n        repository = g.get_repo(f'{username}/{repo.name}')\n        count += 1\n        if count >= 15:\n            break\n        try:\n            repo_data = {}\n            traverse_repository(repository, repo_data, 0)\n            if repo_data:\n                response[repo.name] = repo_data\n        except Exception as e:\n            print(e)\n    end_time = time.time()\n    # Check if the JSON file exists\n    json_file_path = f\"json_data/repository_codes_{username}.json\"\n    if not os.path.exists(json_file_path):\n        # Create the file if it doesn't exist\n        open(json_file_path, \"w\").close()\n\n    # Save response as JSON\n    with open(json_file_path, \"w\") as json_file:\n        json.dump(response, json_file, indent=4)\n    userinfo.append(end_time-start_time)\n    return userinfo\n\n        \n'''A helper function that traverse the repository. Even if there are folders and nested files the function would traverse each  of them recursively to find the code bases.'''\n# In this code I have kept the number of files to be traversed to be 5 only to keep it short and simple. Otherwise it will take good amount of time to traverse the entire repository.\ndef traverse_repository(repository, repo_data, count, path=\"\"):\n    IGNORED_FOLDERS=[\"node_modules\", \"vs\", \"venv\"]\n    contents = repository.get_contents(path)\n    files_traversed = 0  # Track the number of files traversed\n    should_exit = False  # Flag to determine when to exit the function\n    while contents:\n        # Condition to break the loop and eventually the function itself. If you want all the files then remove this line of codes.\n        if files_traversed >= 8 or count >= 8:\n            should_exit = True  # Set the flag to exit the function\n            break\n        file_content = contents.pop(0)\n        if file_content.type == \"dir\":\n            if file_content.name in IGNORED_FOLDERS:\n                continue  # Ignore the directory and continue to the next iteration\n            files_traversed += 1\n            traverse_repository(repository, repo_data,\n                                count+1, file_content.path)\n        else:\n            files_traversed += 1\n            file_extension = file_content.path.split(\".\")[-1]\n            if file_extension in [\"txt\", \"py\", \"ipynb\", \"md\", \"html\", \"htm\", \"css\", \"jsx\", \"js\", 'sol', 'cpp', \"kt\", \"tsx\", \"ts\", \"go\", \"php\", \"sol\",\"java\"]:\n                file_name = file_content.path.split(\"/\")[-1]\n                file_data = {\n                    \"code\": file_content.decoded_content.decode(\"utf-8\")\n                }\n                repo_data[file_name] = file_data\n                tt = file_content.decoded_content.decode(\"utf-8\")\n                print(f\"{file_name} *************************************\")\n                print(f\"{tt}\")\n                # Increment the count of files traversed\n    if should_exit:\n        return\n\n\ndef convert_to_pdf(username):\n    print(\"Converting into PDFs............................................\")\n    # Read the JSON data from the file\n    with open(f'json_data/repository_codes_{username}.json', 'r') as file:\n        data = json.load(file)\n    # Create a PDF document\n    pdf = FPDF()\n    # Set up the document\n    pdf.set_title('API Endpoints Documentation')\n    pdf.set_auto_page_break(auto=True, margin=15)\n    # Add a cover page\n    pdf.add_page()\n    pdf.set_font('Arial', 'B', 24)\n    pdf.cell(0, 20, 'API Endpoints Documentation', ln=True, align='C')\n    # Iterate over the JSON data and add repository name and files with code to the PDF\n    pdf.set_font('Arial', 'B', 16)\n    for repository, files in data.items():\n        pdf.add_page()\n        pdf.set_font('Arial', 'B', 14)\n        # Handle Unicode characters in repository name\n        repository = repository.encode('latin-1', 'replace').decode('latin-1')\n        pdf.cell(0, 10, f'Repository: {repository}', ln=True, align='L')\n        pdf.set_font('Arial', '', 12)\n        for filename, content in files.items():\n            pdf.multi_cell(0, 10, f'File: {filename}')\n            pdf.set_font('Courier', '', 10)\n            # Handle Unicode characters in code content\n            code = content['code'].encode(\n                'latin-1', 'replace').decode('latin-1')\n            pdf.multi_cell(0, 10, code)\n    # Save the PDF document with UTF-8 encoding\n    pdf.output(f'pdf_data/api_endpoints_{username}.pdf', 'F')\n\n\ndef convert_to_formatted_pdf(username):\n    print(\"Converting into PDFs............................................\")\n    # Read the JSON data from the file\n    with open(f'json_data/repository_codes_{username}.json', 'r') as file:\n        data = json.load(file)\n    # Create a PDF document\n    pdf = FPDF()\n    # Set up the document\n    pdf.set_title('API Endpoints Documentation')\n    pdf.set_auto_page_break(auto=True, margin=15)\n    # Add a cover page\n    pdf.add_page()\n    pdf.set_font('Arial', 'B', 24)\n    pdf.cell(0, 20, 'API Endpoints Documentation', ln=True, align='C')\n    # Iterate over the JSON data and add repository name and files with code to the PDF\n    pdf.set_font('Arial', 'B', 16)\n    for repository, files in data.items():\n        pdf.add_page()\n        pdf.set_font('Arial', 'B', 14)\n        # Handle Unicode characters in repository name\n        repository = repository.encode('latin-1', 'replace').decode('latin-1')\n        pdf.cell(0, 10, f'Repository: {repository}', ln=True, align='L')\n        pdf.set_font('Arial', '', 12)\n        for filename, content in files.items():\n            pdf.multi_cell(10, 10, '') \n            pdf.multi_cell(0, 10, f'File: {filename}', 'B')\n            pdf.set_font('Courier', '', 10)\n            # Handle Unicode characters in code content\n            code = content['code'].encode('latin-1', 'replace').decode('latin-1')\n            code_lines = code.split('\\n')\n            for line in code_lines:\n                line = line.strip()  # Remove unnecessary spaces from the beginning and end of the line\n                pdf.multi_cell(0, 5, line)  # Adjust the line spacing to make it more compact\n    # Save the PDF document with UTF-8 encoding\n    pdf.output(f'pdf_data/api_endpoints_{username}.pdf', 'F')\n\n\n"
        },
        "embeddings.py": {
            "code": "import os\nimport time\nimport pinecone\nfrom dotenv import load_dotenv\nfrom langchain.document_loaders import PyPDFLoader\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\nfrom langchain.llms import OpenAI\nfrom langchain.vectorstores import Chroma\nfrom langchain.embeddings.openai import OpenAIEmbeddings\nfrom langchain.chains import RetrievalQA\nfrom langchain.vectorstores import Chroma, Pinecone\nfrom langchain.chains.question_answering import load_qa_chain\n\n# Load environment variables from .env file\nload_dotenv()\napi_key = os.environ['OPEN_AI_KEY']\npinecone_key = os.environ['PINECONE_API_KEY']\npinecone_env = os.environ['PINECONE_API_ENV']\n\n\ndef embeddings(username, service):\n    responses=[]\n    if(service==\"chroma_service\"):\n        responses=chroma_embedding(username)\n    elif(service==\"pinecone_service\"):\n        responses=pinecone_embedding(username)\n    else:\n        pass\n    return responses\n\ndef chroma_embedding(username):\n    start_time = time.time()\n    OPENAI_API_KEY = os.environ.get(\n        'OPENAI_API_KEY', api_key)\n    embeddings = OpenAIEmbeddings(openai_api_key=OPENAI_API_KEY)\n    loader = PyPDFLoader(f\"pdf_data/api_endpoints_{username}.pdf\")\n    data = loader.load()\n    text_splitter = RecursiveCharacterTextSplitter(\n        chunk_size=2000, chunk_overlap=0)\n    texts = text_splitter.split_documents(data)\n    print(f'Now you have {len(texts)} documents')\n    # print(texts[:100])\n    print(\"Upserting the documents.............................................\")\n    docsearch = Chroma.from_documents(texts, embeddings)\n    chain = RetrievalQA.from_chain_type(\n        llm=OpenAI(temperature=0, openai_api_key=OPENAI_API_KEY,\n                   max_tokens=150),\n        chain_type=\"stuff\",\n        retriever=docsearch.as_retriever()\n    )\n    responses = []\n    print(\"Trying to load the query.......................................\")\n    # query = \"The document contains the repository along with the codes. Now you need to decide which Repository contains the most complex code. Tell the name of the repository. Also explain in 100 words why you think the repository is the most complex\"\n    query1 = '''Your task is to identify the repository that contains the most complex code. Provide your response in the following format:\n\n    'Name: [Name of the repository]'\n\n    For instance:\n\n    'Name: Blockdemon'\n\n    Please analyze the document and determine the repository with the most complex code.'''\n\n    # Run the first query.\n    response1 = chain.run(query1)\n    # Pass the previous response to the second prompt through string formatting for better response and avoiding any conflicts between the answers.\n    query2 = f'''Why do you think the repository {response1[7:]} is complex'''\n\n    # Run the second query\n    response2 = chain.run(query2)\n    end_time = time.time()\n    print(response2)\n    print(response1)\n    responses.append(response1)\n    responses.append(response2)\n    responses.append(end_time-start_time)\n    return responses\n\n\ndef pinecone_embedding(username):\n    # Start the timer\n    start_time = time.time()\n    OPENAI_API_KEY = os.environ.get('OPENAI_API_KEY', api_key)\n    PINECONE_API_KEY = os.environ.get('PINECONE_API_KEY', pinecone_key)\n    PINECONE_API_ENV = os.environ.get('PINECONE_API_ENV', pinecone_env)\n    embeddings = OpenAIEmbeddings(openai_api_key=OPENAI_API_KEY)\n    # initialize pinecone\n    pinecone.init(\n        api_key=PINECONE_API_KEY,  # find at app.pinecone.io\n        environment=PINECONE_API_ENV  # next to api key in console\n    )\n    index_name = \"testing\"\n    print(\"Deleting the previous vectors.........................\")\n    index = pinecone.Index(index_name)\n    index.delete(deleteAll=True)\n     # put in the name of your pinecone index here\n\n    loader = PyPDFLoader(f\"pdf_data/api_endpoints_{username}.pdf\")\n    data = loader.load()\n\n\n    text_splitter = RecursiveCharacterTextSplitter(chunk_size=2000, chunk_overlap=0)\n    texts = text_splitter.split_documents(data)\n\n    print (f'Now you have {len(texts)} documents')\n    # print(texts[:100])\n    \n    print(\"Upserting the documents.............................................\")\n    docsearch = Pinecone.from_texts([t.page_content for t in texts], embeddings, index_name=index_name)\n    llm = OpenAI(temperature=0, openai_api_key=OPENAI_API_KEY, max_tokens=150)\n    chain = load_qa_chain(llm, chain_type=\"stuff\")\n    responses = []\n    print(\"Trying to load the query.......................................\")\n    # query = \"The document contains the repository along with the codes. Now you need to decide which Repository contains the most complex code. Tell the name of the repository. Also explain in 100 words why you think the repository is the most complex\"\n    query1 = '''Your task is to identify the repository that contains the most complex code. Provide your response in the following format:\n\n    'Name: [Name of the repository]'\n\n    For instance:\n\n    'Name: Blockdemon'\n\n    Please analyze the document and determine the repository with the most complex code.'''\n\n    # Run the first query.\n    # response1 = chain.run(query1)\n    docs = docsearch.similarity_search(query1)\n    response1=chain.run(input_documents=docs, question=query1)\n    print(response1)\n    # Pass the previous response to the second prompt through string formatting for better response and avoiding any conflicts between the answers.\n    query2 = f'''Desribe the repository {response1[7:]} in few lines'''\n\n    # Run the second query\n    # response2 = chain.run(query2)\n    docs = docsearch.similarity_search(query2)\n    response2=chain.run(input_documents=docs, question=query2)\n    print(response2)\n    print(response1)\n    responses.append(response1)\n    responses.append(response2)\n    index.delete(deleteAll=True)\n    end_time = time.time()\n    responses.append(end_time-start_time)\n    return responses"
        },
        "main.py": {
            "code": "\nimport uvicorn\nfrom fastapi import FastAPI\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom starlette.responses import Response\nfrom fastapi.middleware.cors import CORSMiddleware\nfrom data import fetch_github, convert_to_pdf\nfrom embeddings import embeddings\nfrom msgsend import send_email\n\n# Initialize the fast API\napp = FastAPI()\n\n\nheaders = {\n    'Accept-Language': 'en-US,en;q=0.9',\n    'Connection': 'keep-alive',\n    'Referer': 'https://trackapi.nutritionix.com/docs/',\n    'Sec-Fetch-Dest': 'empty',\n    'Sec-Fetch-Mode': 'cors',\n    'Sec-Fetch-Site': 'same-origin',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36',\n    'accept': 'application/json',\n    'sec-ch-ua': '\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n}\n\n# Added multiple origins to remove the cors errors which we may encounter later\n\n# origins = [\n#     \"http://localhost\",\n#     \"http://127.0.0.1\",\n#     \"http://127.0.0.1:8000\",\n#     \"http://localhost:8000\",\n#     \"http://localhost:3000\",\n#     \"http://localhost:8000/api\",\n#     \"https://frontend-repo-uwdc-2x0unaogp-asifrahaman13.vercel.app/\"\n#     \"http://localhost:3000/frontend-repo\"\n#     \"https://frontend-repo-uwdc-2x0unaogp-asifrahaman13.vercel.app/front-end\"\n# ]\n\norigins = [\n    \"http://localhost\",\n    \"http://127.0.0.1\",\n    \"http://127.0.0.1:8000\",\n    \"http://localhost:8000\",\n    \"http://localhost:3000\",\n    \"http://localhost:8000/api\",\n    \"http://192.168.140.47:3001/frontend-repo\",\n    \"http://192.168.140.47:3001/frontend-repo/\",\n    \"http://192.168.140.47:3001\",\n    \"http://192.168.140.47:3001/\",\n    \"https://frontend-repo-uwdc-2x0unaogp-asifrahaman13.vercel.app/\",\n    \"http://localhost:3000/frontend-repo\",\n    \"http://localhost:3000/frontend-repo/\",\n    \"https://64a1395b4d75163333233c5c--cheerful-sprinkles-c3bc19.netlify.app/\",\n    \"https://64a1395b4d75163333233c5c--cheerful-sprinkles-c3bc19.netlify.app\",\n    \"https://frontend-repo-uwdc-2x0unaogp-asifrahaman13.vercel.app/front-end\"\n    \"https://frontend-repo-uwdc-2x0unaogp-asifrahaman13.vercel.app/front-end/\"\n]\n\n\n\n# Middleware to pass on the cors error and to check the credentials\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n# Create the data model to define the data types of the json data we will accept.\nclass YourDataModel(BaseModel):\n    username: str\n    email_id: str\n    service: str\n\n# Function to fetch all the codes of the repositories of the person\n\ndef fetching(username,email_id,service):\n    fetching_info=fetch_github(username)\n    convert_to_pdf(username)\n    responses = embeddings(username, service)\n    if(len(email_id))!=0:\n        send_email(username,email_id, responses,fetching_info, responses)\n    return responses\n\n@app.post(\"/postdata\")\nasync def your_endpoint(your_data: YourDataModel):\n    # Access the JSON data within the endpoint\n    username = your_data.username\n    email_id = your_data.email_id\n    service = your_data.service\n    # Process the data as needed\n    # Example: Return a response message with the received data\n    msg = fetching(username,email_id,service)\n    return {\"response1\": f\"{msg[0]}\", \"response2\": f\"{msg[1]}\"}\n\n\n# API to access the index page of the web application\n@app.get(\"/hello\")\nasync def index():\n    response = Response(content=\"Hello, World!\", media_type=\"text/plain\")\n    return response\n\n# Driving code of the file.\nif __name__ == \"__main__\":\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n\n\n# Lalit2005\n# VanRoy\n# priyanshu9588\n# abir-taheer"
        },
        "msgsend.py": {
            "code": "import smtplib\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\nfrom email.mime.application import MIMEApplication\nimport datetime\nfrom data import convert_to_formatted_pdf\n\ndef send_email(username,receiver_email, responses, fetching_info, embedding_info, sender_email='asifrahaman162@gmail.com', sender_password='lcpfzddrihzynspf'):\n    body = \"<html><body>\"\n    body += \"<h1><p>Here is the feedback of the repository:</p></h1>\"\n    name = responses[0]\n    reasons = responses[1]\n    body += f\"<p><b>Name of the most complex repository:</b> {name}</p>\"\n    body += f\"<p><b>Reasons (BY AI):</b></p>\"\n    body += f\"{reasons}\"\n    body += \"<p><b>Here are some user details:</b></p>\"\n    if(fetching_info[0] != None and len(fetching_info[0]) > 0):\n        body += f\"<b>Name:</b>\"\n        body += f\"<p>{fetching_info[0]}</p>\"\n    if(fetching_info[1] != None and len(fetching_info[1]) > 0):\n        body += f\"<b>Username:</b>\"\n        body += f\"<p>{fetching_info[1]}</p>\"\n    if(fetching_info[2] != None and len(fetching_info[2]) > 0):\n        body += f\"<b>Location:</b>\"\n        body += f\"<p>{fetching_info[2]}</p>\"\n    if(fetching_info[3] != None and len(fetching_info[3]) > 0):\n        body += f\"<b>Bio:</b>\"\n        body += f\"<p>{fetching_info[3]}</p>\"\n    body += f\"<p><b>Total time taken to fetch all the codes:</b> {int(fetching_info[-1])} seconds / {int((fetching_info[-1])/60)} min</p>\"\n    body += f\"<p><b>Total time taken to decide the most complex repository by AI:</b> {int(embedding_info[-1])} seconds/ {int((embedding_info[-1])/60)} min</p>\"\n    body += \"<br><br>\"\n    body += \"<p>Thanks,</p>\"\n    body += \"<p>Team GitCrawler</p>\"\n    body += \"</body></html>\"\n\n    # Set up the SMTP server\n    # Change this if you're using a different email provider\n    smtp_server = \"smtp.gmail.com\"\n    smtp_port = 587  # Change this if required\n    smtp_username = sender_email\n    subject = \"Github Repository Feedback\"\n\n    # Create a multipart message and set the headers\n    message = MIMEMultipart()\n    # Attach the PDF file\n    convert_to_formatted_pdf(username)\n    with open(f\"pdf_data/api_endpoints_{username}.pdf\", \"rb\") as file:\n        attachment = MIMEApplication(file.read(), _subtype=\"pdf\")\n    attachment.add_header(\n        \"Content-Disposition\", \"attachment\", filename=(f\"{username}_repositories.pdf\")\n    )\n    message.attach(attachment)\n    message[\"From\"] = sender_email\n    message[\"To\"] = receiver_email\n    message[\"Subject\"] = subject + \" \" + \\\n        str(datetime.date.today()) + \" \" + \\\n        str(datetime.datetime.now().strftime(\"%H:%M\"))\n\n    # Add body to the email as HTML content\n    message.attach(MIMEText(body, \"html\"))\n\n    try:\n        # Login to the SMTP server\n        server = smtplib.SMTP(smtp_server, smtp_port)\n        server.starttls()\n        server.login(smtp_username, sender_password)\n\n        # Send the email\n        server.sendmail(sender_email, receiver_email, message.as_string())\n\n        # Cleanup\n        server.quit()\n\n        print(f\"Email sent successfully to {receiver_email}\")\n    except Exception as e:\n        print(\"An error occurred while sending the email:\", str(e))\n\n\n# send_email(\"asifrahaman13\",\"asifr@iitbhilai.ac.in\", [\"neon\", \"There are lots of reason as to why this is the most comples.\", 45.14], [\n#            \"nil\", \"Hello I am nil\", \"Australia\",\"sdfsdf\" ,41], [14], sender_email='asifrahaman162@gmail.com', sender_password='lcpfzddrihzynspf')\n"
        }
    },
    "backendportfolio": {
        "connection.js": {
            "code": "require('dotenv').config();\n\nconst mongoose=require('mongoose');\n\nmongoose.connect(process.env.CONNECTION_URL,{ useNewUrlParser: true, useUnifiedTopology: true },async()=>{\n    console.log(\"Connected successfully to mongoose.\")\n});\n\n"
        },
        "index.js": {
            "code": "require('dotenv').config();\nrequire('./db/connection')\nvar cors=require('cors')\nconst Contact=require('./models/contacts')\nconst Student=require('./models/students')\nconst Skills=require('./models/skills')\nconst Participation=require('./models/participations')\nconst Hackathon=require('./models/hackathons')\nconst express = require(\"express\");\nconst app = express();\n\nconst PORT=8000;\n\nconst port=process.env.PORT || PORT;\n\napp.use(cors());\napp.use(express.json());\n\napp.get(\"/\",async(req,res)=>{\n   const user= await Student.find();\n   res.send(user)\n})\n\napp.get(\"/participations\",async(req,res)=>{\n    const participation= await Participation.find();\n    res.send(participation)\n})\n\napp.post(\"/participations\",async(req,res)=>{\n    const result=await Participation({participation:req.body.participation,name:req.body.participation})\n    await result.save();\n    res.send(result)\n})\n\n\napp.post(\"/contacts\",async (req,res)=>{\n    const result=await Contact({name:req.body.name,email:req.body.email});\n    await result.save();\n    res.send(result)\n})\n\n\napp.get(\"/skills\",async (req,res)=>{\n    const result=await Skills.find();\n    res.send(result)\n})\n\n\napp.get(\"/hackathon\",async (req,res)=>{\n    const result=await Hackathon.find();\n    res.send(result)\n})\n\napp.listen(port,()=>{\n    console.log(`Listening on port: ${PORT}`)\n})\n\n"
        },
        "contacts.js": {
            "code": "const mongoose = require('mongoose')\n\nconst ContactSchema=new mongoose.Schema({\n    name:{\n        type:String\n    },\n    email:{\n        type:String\n    },\n    profession:{\n        type:String\n    },\n    age:{\n        type:Number\n    },\n    concern:{\n        type:String\n    }\n})\n\nconst contact=mongoose.model('contact',ContactSchema)\n\nmodule.exports =contact"
        },
        "hackathons.js": {
            "code": "const mongoose = require('mongoose')\n\nconst HackathonSchema=new mongoose.Schema({\n    title:{\n        type:String\n    },\n    name:{\n        type:String\n    },\n    image:{\n        type:String\n    }\n})\n\nconst Hackathon=mongoose.model('hackathon', HackathonSchema)\nmodule.exports= Hackathon"
        },
        "participations.js": {
            "code": "const mongoose=require('mongoose');\n\nconst ParticipationSchema=new mongoose.Schema({\n    participation:{\n        type:String\n    },\n    name:{\n        type:String\n    }\n})\n\nconst participation=mongoose.model('participation',ParticipationSchema)\nmodule.exports=participation"
        },
        "skills.js": {
            "code": "const mongoose = require('mongoose');\n\nconst SkillsSchema=new mongoose.Schema({\n    skill:{\n        type:String\n    },\n    proficiency:{\n        type:String\n    }\n})\n\nconst skills=mongoose.model('Skills',SkillsSchema)\nmodule.exports =skills"
        },
        "students.js": {
            "code": "const mongoose=require('mongoose');\n\nconst StudentSchema=new mongoose.Schema({\n    name:{\n        type:String\n    },\n    email:{\n        type:String\n    },\n    phone:{\n        type:Number\n    }\n})\n\nconst Student=new mongoose.model(\"studentcollection\",StudentSchema);\n\nmodule.exports = Student\n"
        }
    },
    "blog-api-endpoints": {
        "blogTest.test.js": {
            "code": "const request = require(\"supertest\");\r\nconst baseURL = \"http://localhost:5000\";\r\n\r\n// Given user already exist in the data base\r\n\r\nlet authToken = \"\";\r\nlet success = false;\r\nlet blogId = \"\";\r\n\r\nbeforeAll(async () => {\r\n  const response = await request(baseURL).post(\"/api/auth/login\").send({\r\n    email: \"rex@test.com\",\r\n    password: \"@Atest98\",\r\n  });\r\n  authToken = response.body.authtoken;\r\n  success = response.body.success;\r\n});\r\n\r\nafterAll(async () => {\r\n  // const response = await request(baseURL).post(\"/api/auth/login\").send({\r\n  //     email:\"rex@test.com\",\r\n  //     password:\"@Atest98\",\r\n\r\n  //   })\r\n  authToken = \"\"; //reset access token\r\n});\r\n\r\ndescribe(\"POST /addblog\", () => {\r\n  it(\"should return 200\", async () => {\r\n    const response = await request(baseURL)\r\n      .post(\"/api/blogs/addblog\")\r\n      .set(\"auth-token\", authToken)\r\n\r\n      .send({\r\n        title: \"Dummy title 2\",\r\n        description: \"dummy description 2\",\r\n      });\r\n    blogId = response.body._id;\r\n\r\n    expect(response.statusCode).toBe(200);\r\n    expect(response.body.createdby).toBe(\"General\");\r\n  });\r\n});\r\n\r\ndescribe(\"POST /updateblog\", () => {\r\n  it(\"should return 200\", async () => {\r\n    const response = await request(baseURL)\r\n      .put(`/api/blogs/updateblog/${blogId}`)\r\n      .set(\"auth-token\", authToken)\r\n      .send({\r\n        title: \"update Dummy title 2\",\r\n        description: \"dummy description 2\",\r\n      });\r\n\r\n    expect(response.statusCode).toBe(200);\r\n    expect(response.body.blog.title).toBe(\"update Dummy title 2\");\r\n  });\r\n});\r\n\r\ndescribe(\"POST /deleteblog\", () => {\r\n  it(\"should return 200\", async () => {\r\n    const response = await request(baseURL)\r\n      .delete(`/api/blogs/deleteblog/${blogId}`)\r\n      .set(\"auth-token\", authToken);\r\n\r\n    expect(response.statusCode).toBe(200);\r\n    expect(response.body.Success).toBe(\"Blog has been deleted\");\r\n  });\r\n});\r\n"
        },
        "db.js": {
            "code": "const mongoose = require('mongoose');\n\n// Mongodb atlas connection URL\nconst mongoURI = \"mongodb+srv://asifr:asifrahaman@cluster0.nelr8ne.mongodb.net/?retryWrites=true&w=majority\"\n\n// Function to connect to mongodb atlas\nconst connectToMongo =  ()=>{\n     mongoose.connect(mongoURI, ()=>{\n        console.log(\"Connected to Mongo Successfully\");\n    })\n}\n\nmodule.exports = connectToMongo;"
        },
        "index.js": {
            "code": "const connectToMongo = require('./db');\nconst express = require('express')\nvar cors = require('cors') \n\n// Connect to MongoDB database\nconnectToMongo();\n// Use express module in Node JS\nconst app = express()\n\n// Define the port where you need to run the server\nconst port = 5000\n\n// Use cors to avoid cors error\napp.use(cors())\n\n// Use json to let the application know how to use json object\napp.use(express.json())\n\n// Available Routes\napp.use('/api/auth', require('./routes/auth'))\napp.use('/api/blogs', require('./routes/blogs'))\n\n// Listen to the ports\napp.listen(port, () => {\n  console.log(`iblogbook backend listening at http://localhost:${port}`)\n})\n\nmodule.exports=app"
        },
        "fetchuser.js": {
            "code": "var jwt = require('jsonwebtoken');\nconst JWT_SECRET = 'Hello world';\n\nconst fetchuser = (req, res, next) => {\n    // Get the user from the jwt token and add id to req object\n    const token = req.header('auth-token');\n    if (!token) {\n        res.status(401).send({ error: \"Please authenticate using a valid token\" })\n    }\n    try {\n        // Verify the token\n        const data = jwt.verify(token, JWT_SECRET);\n        req.user = data.user;\n        // If token is valid then let the user to make further requests\n        next();\n    } catch (error) {\n        res.status(401).send({ error: \"Please authenticate using a valid token\" })\n    }\n\n}\n\n\nmodule.exports = fetchuser;"
        },
        "Blog.js": {
            "code": "const mongoose = require('mongoose');\nconst { Schema } = mongoose;\n\n// Make a schema object for the blog\nconst BlogSchema = new Schema({\n    user:{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'user'\n    },\n    title:{\n        type: String,\n        required: true\n    },\n    description:{\n        type: String,\n        required: true, \n    },\n    createdby:{\n        type: String,\n        default: \"General\"\n    },\n    date:{\n        type: Date,\n        default: Date.now\n    },\n  });\n\n  // Create a blogs model\n  module.exports = mongoose.model('blogs', BlogSchema);"
        },
        "User.js": {
            "code": "const mongoose = require(\"mongoose\");\nconst { Schema } = mongoose;\n\n// Create a user schema\nconst UserSchema = new Schema({\n  name: {\n    type: String,\n    required: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  date: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\n// Create a user schema\nconst User = mongoose.model(\"user\", UserSchema);\nmodule.exports = User;\n"
        },
        "auth.js": {
            "code": "const express = require('express');\nconst User = require('../models/User');\nconst router = express.Router();\nconst { body, validationResult } = require('express-validator');\nconst bcrypt = require('bcryptjs');\nvar jwt = require('jsonwebtoken');\n// Use middleware for authentication purpose\nvar fetchuser = require('../middleware/fetchuser');\n\n// Use any text for secret key\nconst JWT_SECRET = 'Hello world';\n\n// ROUTE 1: Create a User using: POST \"/api/auth/createuser\". No login required\nrouter.post('/createuser', [\n  body('name', 'Enter a valid name').isLength({ min: 3 }),\n  body('email', 'Enter a valid email').isEmail(),\n  body('password', 'Password must be atleast 5 characters').isLength({ min: 5 }),\n], async (req, res) => {\n  // If there are errors, return Bad request and the errors\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n  try {\n    // Check whether the user with this email exists already\n    let user = await User.findOne({ email: req.body.email });\n    if (user) {\n      return res.status(400).json({ error: \"Sorry a user with this email already exists\" })\n    }\n    // Add salt as per the prefernce\n    const salt = await bcrypt.genSalt(10);\n    // Hashing the password to add security \n    const secPass = await bcrypt.hash(req.body.password, salt);\n\n    // Create a new user\n    user = await User.create({\n      name: req.body.name,\n      password: secPass,\n      email: req.body.email,\n    });\n    // Define the data to exist in the auth token\n    const data = {\n      user: {\n        id: user.id\n      }\n    }\n    const authtoken = jwt.sign(data, JWT_SECRET);\n    // res.json(user)\n    res.json({ authtoken })\n\n  } catch (error) {\n    console.error(error.message);\n    res.status(500).send(\"Internal Server Error\");\n  }\n})\n\n\n// ROUTE 2: Authenticate a User using: POST \"/api/auth/login\". No login required\nrouter.post('/login', [\n  body('email', 'Enter a valid email').isEmail(),\n  body('password', 'Password cannot be blank').exists(),\n], async (req, res) => {\n  let success = false;\n  // If there are errors, return Bad request and the errors\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n\n  const { email, password } = req.body;\n  try {\n    let user = await User.findOne({ email });\n    if (!user) {\n      success = false\n      return res.status(400).json({ error: \"Please try to login with correct credentials\" });\n    }\n    // Compare the password entered with the password set using bcrypt\n    const passwordCompare = await bcrypt.compare(password, user.password);\n    if (!passwordCompare) {\n      // If password does not match then make success to false\n      success = false\n      // Send error message\n      return res.status(400).json({ success, error: \"Please try to login with correct credentials\" });\n    }\n    // Define the data that you want to store in auth token\n    const data = {\n      user: {\n        id: user.id\n      }\n    }\n    const authtoken = jwt.sign(data, JWT_SECRET);\n    // If everything is allright then make the value of success true.\n    success = true;\n    // Send a sucess message and a auth token\n    res.json({ success, authtoken })\n\n  } catch (error) {\n    // Send error message if anything is wrong\n    console.error(error.message);\n    res.status(500).send(\"Internal Server Error\");\n  }\n\n\n});\n\n\n// ROUTE 3: Get loggedin User Details using: POST \"/api/auth/getuser\". Login required\nrouter.post('/getuser', fetchuser,  async (req, res) => {\n\n  try {\n    userId = req.user.id;\n    const user = await User.findById(userId).select(\"-password\")\n    res.send(user)\n  } catch (error) {\n    console.error(error.message);\n    res.status(500).send(\"Internal Server Error\");\n  }\n})\nmodule.exports = router"
        },
        "blogs.js": {
            "code": "const express = require('express');\nconst router = express.Router();\nconst fetchuser = require('../middleware/fetchuser');\nconst Blog = require('../models/Blog');\nconst { body, validationResult } = require('express-validator');\n\n// ROUTE 1: Get All the Blogs using: GET \"/api/blogs/getuser\". Login required\nrouter.get('/fetchallblogs', fetchuser, async (req, res) => {\n    try {\n        const blogs = await Blog.find({ user: req.user.id });\n        res.json(blogs)\n    } catch (error) {\n        console.error(error.message);\n        res.status(500).send(\"Internal Server Error\");\n    }\n})\n\n// ROUTE 2: Add a new Blog using: POST \"/api/blogs/addblog\". Login required\nrouter.post('/addblog', fetchuser, [\n    body('title', 'Enter a valid title').isLength({ min: 3 }),\n    body('description', 'Description must be atleast 5 characters').isLength({ min: 5 }),], async (req, res) => {\n        try {\n            // Destructure the body to get the values of the blog parameters\n            const { title, description, createdby } = req.body;\n\n            // If there are errors, return Bad request and the errors\n            const errors = validationResult(req);\n            // If there is any error then return an error message\n            if (!errors.isEmpty()) {\n                return res.status(400).json({ errors: errors.array() });\n            }\n            const blog = new Blog({\n                title, description, createdby, user: req.user.id\n            })\n            const savedBlog = await blog.save()\n\n            res.json(savedBlog)\n\n        } catch (error) {\n            console.error(error.message);\n            res.status(500).send(\"Internal Server Error\");\n        }\n    })\n\n// ROUTE 3: Update an existing Blog using: PUT \"/api/blogs/updateblog\". Login required\nrouter.put('/updateblog/:id', fetchuser, async (req, res) => {\n    const { title, description, createdby } = req.body;\n    try {\n        // Create a newBlog object\n        const newBlog = {};\n        if (title) { newBlog.title = title };\n        if (description) { newBlog.description = description };\n        if (createdby) { newBlog.createdby = createdby };\n\n        // Find the blog to be updated and update it\n        let blog = await Blog.findById(req.params.id);\n        if (!blog) { return res.status(404).send(\"Not Found\") }\n\n        if (blog.user.toString() !== req.user.id) {\n            return res.status(401).send(\"Not Allowed\");\n        }\n        blog = await Blog.findByIdAndUpdate(req.params.id, { $set: newBlog }, { new: true })\n        res.json({ blog });\n    } catch (error) {\n        console.error(error.message);\n        res.status(500).send(\"Internal Server Error\");\n    }\n})\n\n// ROUTE 4: Delete an existing Blog using: DELETE \"/api/blogs/deleteblog\". Login required\nrouter.delete('/deleteblog/:id', fetchuser, async (req, res) => {\n    try {\n        // Find the blog to be delete and delete it\n        let blog = await Blog.findById(req.params.id);\n        if (!blog) { return res.status(404).send(\"Not Found\") }\n\n        // Allow deletion only if user owns this Blog\n        if (blog.user.toString() !== req.user.id) {\n            return res.status(401).send(\"Not Allowed\");\n        }\n\n        blog = await Blog.findByIdAndDelete(req.params.id)\n        res.json({ \"Success\": \"Blog has been deleted\", blog: blog });\n    } catch (error) {\n        console.error(error.message);\n        res.status(500).send(\"Internal Server Error\");\n    }\n})\nmodule.exports = router"
        }
    },
    "blog-endpoints": {
        "db.js": {
            "code": "const mongoose = require('mongoose');\n\nconst mongoURI = \"mongodb+srv://asifr:asifrahaman@cluster0.nelr8ne.mongodb.net/?retryWrites=true&w=majority\"\n\nconst connectToMongo = ()=>{\n    mongoose.connect(mongoURI, ()=>{\n        console.log(\"Connected to Mongo Successfully\");\n    })\n}\n\nmodule.exports = connectToMongo;"
        },
        "index.js": {
            "code": "const connectToMongo = require('./db');\nconst express = require('express')\nvar cors = require('cors') \n\nconnectToMongo();\nconst app = express()\nconst port = 5000\n\napp.use(cors())\napp.use(express.json())\n\n// Available Routes\napp.use('/api/auth', require('./routes/auth'))\napp.use('/api/blogs', require('./routes/blogs'))\n\n\napp.listen(port, () => {\n  console.log(`iblogbook backend listening at http://localhost:${port}`)\n})"
        },
        "fetchuser.js": {
            "code": "var jwt = require('jsonwebtoken');\nconst JWT_SECRET = 'Hello world';\n\nconst fetchuser = (req, res, next) => {\n    // Get the user from the jwt token and add id to req object\n    const token = req.header('auth-token');\n    if (!token) {\n        res.status(401).send({ error: \"Please authenticate using a valid token\" })\n    }\n    try {\n        const data = jwt.verify(token, JWT_SECRET);\n        req.user = data.user;\n        next();\n    } catch (error) {\n        res.status(401).send({ error: \"Please authenticate using a valid token\" })\n    }\n\n}\n\n\nmodule.exports = fetchuser;"
        },
        "Blog.js": {
            "code": "const mongoose = require('mongoose');\nconst { Schema } = mongoose;\n\nconst NotesSchema = new Schema({\n    user:{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'user'\n    },\n    title:{\n        type: String,\n        required: true\n    },\n    description:{\n        type: String,\n        required: true, \n    },\n    createdby:{\n        type: String,\n        default: \"General\"\n    },\n    date:{\n        type: Date,\n        default: Date.now\n    },\n  });\n\n  module.exports = mongoose.model('blogs', NotesSchema);"
        },
        "User.js": {
            "code": "const mongoose = require('mongoose');\nconst { Schema } = mongoose;\n\nconst UserSchema = new Schema({\n    name:{\n        type: String,\n        required: true\n    },\n    email:{\n        type: String,\n        required: true,\n        unique: true\n    },\n    password:{\n        type: String,\n        required: true\n    },\n    date:{\n        type: Date,\n        default: Date.now\n    },\n  });\n  const User = mongoose.model('user', UserSchema);\n  module.exports = User;"
        },
        "auth.js": {
            "code": "const express = require('express');\nconst User = require('../models/User');\nconst router = express.Router();\nconst { body, validationResult } = require('express-validator');\nconst bcrypt = require('bcryptjs');\nvar jwt = require('jsonwebtoken');\nvar fetchuser = require('../middleware/fetchuser');\n\nconst JWT_SECRET = 'Hello world';\n\n// ROUTE 1: Create a User using: POST \"/api/auth/createuser\". No login required\nrouter.post('/createuser', [\n  body('name', 'Enter a valid name').isLength({ min: 3 }),\n  body('email', 'Enter a valid email').isEmail(),\n  body('password', 'Password must be atleast 5 characters').isLength({ min: 5 }),\n], async (req, res) => {\n  // If there are errors, return Bad request and the errors\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n  try {\n    // Check whether the user with this email exists already\n    let user = await User.findOne({ email: req.body.email });\n    if (user) {\n      return res.status(400).json({ error: \"Sorry a user with this email already exists\" })\n    }\n    const salt = await bcrypt.genSalt(10);\n    const secPass = await bcrypt.hash(req.body.password, salt);\n\n    // Create a new user\n    user = await User.create({\n      name: req.body.name,\n      password: secPass,\n      email: req.body.email,\n    });\n    const data = {\n      user: {\n        id: user.id\n      }\n    }\n    const authtoken = jwt.sign(data, JWT_SECRET);\n    // res.json(user)\n    res.json({ authtoken })\n\n  } catch (error) {\n    console.error(error.message);\n    res.status(500).send(\"Internal Server Error\");\n  }\n})\n\n\n// ROUTE 2: Authenticate a User using: POST \"/api/auth/login\". No login required\nrouter.post('/login', [\n  body('email', 'Enter a valid email').isEmail(),\n  body('password', 'Password cannot be blank').exists(),\n], async (req, res) => {\n  let success = false;\n  // If there are errors, return Bad request and the errors\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n\n  const { email, password } = req.body;\n  try {\n    let user = await User.findOne({ email });\n    if (!user) {\n      success = false\n      return res.status(400).json({ error: \"Please try to login with correct credentials\" });\n    }\n\n    const passwordCompare = await bcrypt.compare(password, user.password);\n    if (!passwordCompare) {\n      success = false\n      return res.status(400).json({ success, error: \"Please try to login with correct credentials\" });\n    }\n\n    const data = {\n      user: {\n        id: user.id\n      }\n    }\n    const authtoken = jwt.sign(data, JWT_SECRET);\n    success = true;\n    res.json({ success, authtoken })\n\n  } catch (error) {\n    console.error(error.message);\n    res.status(500).send(\"Internal Server Error\");\n  }\n\n\n});\n\n\n// ROUTE 3: Get loggedin User Details using: POST \"/api/auth/getuser\". Login required\nrouter.post('/getuser', fetchuser,  async (req, res) => {\n\n  try {\n    userId = req.user.id;\n    const user = await User.findById(userId).select(\"-password\")\n    res.send(user)\n  } catch (error) {\n    console.error(error.message);\n    res.status(500).send(\"Internal Server Error\");\n  }\n})\nmodule.exports = router"
        },
        "blogs.js": {
            "code": "const express = require('express');\nconst router = express.Router();\nconst fetchuser = require('../middleware/fetchuser');\nconst Note = require('../models/Blog');\nconst { body, validationResult } = require('express-validator');\n\n// ROUTE 1: Get All the Notes using: GET \"/api/blogs/getuser\". Login required\nrouter.get('/fetchallblogs', fetchuser, async (req, res) => {\n    try {\n        const blogs = await Note.find({ user: req.user.id });\n        res.json(blogs)\n    } catch (error) {\n        console.error(error.message);\n        res.status(500).send(\"Internal Server Error\");\n    }\n})\n\n// ROUTE 2: Add a new Note using: POST \"/api/blogs/addblog\". Login required\nrouter.post('/addblog', fetchuser, [\n    body('title', 'Enter a valid title').isLength({ min: 3 }),\n    body('description', 'Description must be atleast 5 characters').isLength({ min: 5 }),], async (req, res) => {\n        try {\n            const { title, description, createdby } = req.body;\n\n            // If there are errors, return Bad request and the errors\n            const errors = validationResult(req);\n            if (!errors.isEmpty()) {\n                return res.status(400).json({ errors: errors.array() });\n            }\n            const blog = new Note({\n                title, description, createdby, user: req.user.id\n            })\n            const savedNote = await blog.save()\n\n            res.json(savedNote)\n\n        } catch (error) {\n            console.error(error.message);\n            res.status(500).send(\"Internal Server Error\");\n        }\n    })\n\n// ROUTE 3: Update an existing Note using: PUT \"/api/blogs/updateblog\". Login required\nrouter.put('/updateblog/:id', fetchuser, async (req, res) => {\n    const { title, description, createdby } = req.body;\n    try {\n        // Create a newNote object\n        const newNote = {};\n        if (title) { newNote.title = title };\n        if (description) { newNote.description = description };\n        if (createdby) { newNote.createdby = createdby };\n\n        // Find the blog to be updated and update it\n        let blog = await Note.findById(req.params.id);\n        if (!blog) { return res.status(404).send(\"Not Found\") }\n\n        if (blog.user.toString() !== req.user.id) {\n            return res.status(401).send(\"Not Allowed\");\n        }\n        blog = await Note.findByIdAndUpdate(req.params.id, { $set: newNote }, { new: true })\n        res.json({ blog });\n    } catch (error) {\n        console.error(error.message);\n        res.status(500).send(\"Internal Server Error\");\n    }\n})\n\n// ROUTE 4: Delete an existing Note using: DELETE \"/api/blogs/deleteblog\". Login required\nrouter.delete('/deleteblog/:id', fetchuser, async (req, res) => {\n    try {\n        // Find the blog to be delete and delete it\n        let blog = await Note.findById(req.params.id);\n        if (!blog) { return res.status(404).send(\"Not Found\") }\n\n        // Allow deletion only if user owns this Note\n        if (blog.user.toString() !== req.user.id) {\n            return res.status(401).send(\"Not Allowed\");\n        }\n\n        blog = await Note.findByIdAndDelete(req.params.id)\n        res.json({ \"Success\": \"Note has been deleted\", blog: blog });\n    } catch (error) {\n        console.error(error.message);\n        res.status(500).send(\"Internal Server Error\");\n    }\n})\nmodule.exports = router"
        }
    },
    "Blogging-website": {
        "__init__.py": {
            "code": ""
        },
        "admin.py": {
            "code": "from django.contrib import admin\nfrom .models import Contact\n\n# Register your models here.\nadmin.site.register(Contact)\n"
        },
        "apps.py": {
            "code": "from django.apps import AppConfig\n\n\nclass HomeConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'home'\n"
        },
        "0001_initial.py": {
            "code": "# Generated by Django 4.0.1 on 2022-03-04 19:02\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    initial = True\n\n    dependencies = [\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='Contact',\n            fields=[\n                ('sno', models.AutoField(primary_key=True, serialize=False)),\n                ('name', models.CharField(max_length=255)),\n                ('phone', models.CharField(max_length=13)),\n                ('email', models.CharField(max_length=100)),\n                ('content', models.TextField()),\n                ('timeStamp', models.DateTimeField(auto_now_add=True)),\n            ],\n        ),\n    ]\n"
        },
        "0002_alter_post_content.py": {
            "code": "# Generated by Django 4.0.1 on 2022-03-05 03:08\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('blog', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name='post',\n            name='content',\n            field=models.CharField(max_length=5000),\n        ),\n    ]\n"
        },
        "0003_post_slug.py": {
            "code": "# Generated by Django 4.0.3 on 2022-03-05 03:13\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('blog', '0002_alter_post_content'),\n    ]\n\n    operations = [\n        migrations.AddField(\n            model_name='post',\n            name='slug',\n            field=models.CharField(default='', max_length=100),\n        ),\n    ]\n"
        },
        "0004_remove_post_timestamp.py": {
            "code": "# Generated by Django 4.0.1 on 2022-03-05 09:47\n\nfrom django.db import migrations\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('blog', '0003_post_slug'),\n    ]\n\n    operations = [\n        migrations.RemoveField(\n            model_name='post',\n            name='timeStamp',\n        ),\n    ]\n"
        },
        "0005_post_timestamp.py": {
            "code": "# Generated by Django 4.0.1 on 2022-03-05 09:49\n\nfrom django.db import migrations, models\nimport django.utils.timezone\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('blog', '0004_remove_post_timestamp'),\n    ]\n\n    operations = [\n        migrations.AddField(\n            model_name='post',\n            name='timeStamp',\n            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),\n            preserve_default=False,\n        ),\n    ]\n"
        },
        "0006_alter_post_timestamp.py": {
            "code": "# Generated by Django 4.0.1 on 2022-03-06 13:43\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('blog', '0005_post_timestamp'),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name='post',\n            name='timeStamp',\n            field=models.DateField(),\n        ),\n    ]\n"
        },
        "0007_alter_post_timestamp.py": {
            "code": "# Generated by Django 4.0.1 on 2022-03-06 13:45\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('blog', '0006_alter_post_timestamp'),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name='post',\n            name='timeStamp',\n            field=models.DateTimeField(auto_now_add=True),\n        ),\n    ]\n"
        },
        "0008_alter_post_author_alter_post_content_alter_post_slug_and_more.py": {
            "code": "# Generated by Django 4.0.1 on 2022-03-06 13:51\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('blog', '0007_alter_post_timestamp'),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name='post',\n            name='author',\n            field=models.CharField(max_length=14),\n        ),\n        migrations.AlterField(\n            model_name='post',\n            name='content',\n            field=models.TextField(),\n        ),\n        migrations.AlterField(\n            model_name='post',\n            name='slug',\n            field=models.CharField(max_length=130),\n        ),\n        migrations.AlterField(\n            model_name='post',\n            name='timeStamp',\n            field=models.DateTimeField(blank=True),\n        ),\n    ]\n"
        },
        "models.py": {
            "code": "from django.db import models\nclass Contact(models.Model):\n     sno= models.AutoField(primary_key=True)\n     name= models.CharField(max_length=255)\n     phone= models.CharField(max_length=13)\n     email= models.CharField(max_length=100)\n     content= models.TextField()\n     timeStamp=models.DateTimeField(auto_now_add=True, blank=True)\n\n     def __str__(self):\n          return \"Message from \" + self.name + ' - ' + self.email\n     "
        },
        "tests.py": {
            "code": "from django.test import TestCase\n\n# Create your tests here.\n"
        },
        "urls.py": {
            "code": "\"\"\"icoder URL Configuration\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/4.0/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom django.urls import path,include\n\nadmin.site.site_header=\"Icon admins(Asif Rahaman)\"\nadmin.site.site_title=\"Icon admins\"\nadmin.site.site_title=\"Icon admins(Asif Rahaman)\"\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('home.urls')),\n    path('blog/', include('blog.urls')),\n]\n# If the path is included with the blog then the include will handle the rest of the work"
        },
        "asgi.py": {
            "code": "\"\"\"\nASGI config for icoder project.\n\nIt exposes the ASGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.0/howto/deployment/asgi/\n\"\"\"\n\nimport os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'icoder.settings')\n\napplication = get_asgi_application()\n"
        },
        "settings.py": {
            "code": "\"\"\"\nDjango settings for icoder project.\n\nGenerated by 'django-admin startproject' using Django 4.0.1.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.0/ref/settings/\n\"\"\"\n\nimport os\nfrom pathlib import Path\nfrom django.contrib import messages\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-yfg%db=pyy+ida3qp7dit!^t!g3!2%flg$@mcf4whubp=#nhoi'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'home.apps.HomeConfig',\n    'blog.apps.BlogConfig',\n    'django.contrib.humanize',\n    # 'django.contrib.extras'\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'icoder.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'icoder.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\n\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,  \"static\"),\n]\n\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\nMESSAGE_TAGS = {\n    messages.ERROR:'danger'\n}"
        },
        "views.py": {
            "code": "from django.shortcuts import render, HttpResponse\n\n# Create your views here.\ndef home(request):\n    return HttpResponse('This is home.')\n\ndef about(request):\n    return HttpResponse('This is about.')\n\ndef contact(request):\n    return HttpResponse('This is contact.')\n\n"
        },
        "wsgi.py": {
            "code": "\"\"\"\nWSGI config for icoder project.\n\nIt exposes the WSGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.0/howto/deployment/wsgi/\n\"\"\"\n\nimport os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'icoder.settings')\n\napplication = get_wsgi_application()\n"
        },
        "manage.py": {
            "code": "#!/usr/bin/env python\n\"\"\"Django's command-line utility for administrative tasks.\"\"\"\nimport os\nimport sys\n\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'icoder.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        "requirements.txt": {
            "code": "django==4.0.1\n"
        }
    },
    "bomb-dashboard-asif-rahaman": {
        "bug_report.md": {
            "code": "---\nname: Bug report\nabout: Create a report to help us improve\ntitle: ''\nlabels: ''\nassignees: ''\n---\n\n**Describe the bug**\n\nA clear and concise description of what the bug is.\n\n**To Reproduce**\n\nSteps to reproduce the behavior:\n\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n**Expected behavior**\n\nA clear and concise description of what you expected to happen.\n\n**Screenshots**\n\nIf applicable, add screenshots to help explain your problem.\n\n**Desktop (please complete the following information):**\n\n- OS: [e.g. iOS]\n- Browser [e.g. chrome, safari]\n- Version [e.g. 22]\n\n**Smartphone (please complete the following information):**\n\n- Device: [e.g. iPhone6]\n- OS: [e.g. iOS8.1]\n- Browser [e.g. stock browser, safari]\n- Version [e.g. 22]\n\n**Additional context**\n\nAdd any other context about the problem here.\n"
        },
        "custom.md": {
            "code": "---\nname: Custom issue template\nabout: Describe this issue template's purpose here.\ntitle: ''\nlabels: ''\nassignees: ''\n---\n"
        },
        "feature_request.md": {
            "code": "---\nname: Feature request\nabout: Suggest an idea for this project\ntitle: ''\nlabels: ''\nassignees: ''\n---\n\n**Is your feature request related to a problem? Please describe.**\n\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n\n**Describe the solution you'd like**\n\nA clear and concise description of what you want to happen.\n\n**Describe alternatives you've considered**\n\nA clear and concise description of any alternative solutions or features you've considered.\n\n**Additional context**\n\nAdd any other context or screenshots about the feature request here.\n"
        },
        "PULL_REQUEST_TEMPLATE.md": {
            "code": ""
        },
        "CODE_OF_CONDUCT.md": {
            "code": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open\nand welcoming community, we pledge to respect all people who contribute through reporting\nissues, posting feature requests, updating documentation, submitting pull requests or\npatches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for\neveryone, regardless of level of experience, gender, gender identity and expression,\nsexual orientation, disability, personal appearance, body size, race, ethnicity, age,\nreligion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery\n- Personal attacks\n- Trolling or insulting/derogatory comments\n- Public or private harassment\n- Publishing other's private information, such as physical or electronic addresses,\n  without explicit permission\n- Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments,\ncommits, code, issues, and other contributions that are not aligned to this\nCode of Conduct, or to ban temporarily or permanently any contributor for other behaviors\nthat they deem inappropriate, threatening, offensive, or harmful.\n\nBy adopting this Code of Conduct, project maintainers commit themselves to fairly and\nconsistently applying these principles to every aspect of managing this project. Project\nmaintainers who do not follow or enforce the Code of Conduct may be permanently removed\nfrom the project team.\n\nThis Code of Conduct applies both within project spaces and in public spaces when an\nindividual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by\ncontacting the team in our [discord server](https://discord.gg/tombfinance) . All complaints will\nbe reviewed and investigated and will result in a response that is deemed necessary and\nappropriate to the circumstances. Maintainers are obligated to maintain confidentiality\nwith regard to the reporter of an incident.\n"
        }
    },
    "branding-front-end": {
        "README.md": {
            "code": "# Getting Started with Create React App\n\nThis project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n\n## Available Scripts\n\nIn the project directory, you can run:\n\n### `yarn start`\n\nRuns the app in the development mode.\\\nOpen [http://localhost:3000](http://localhost:3000) to view it in your browser.\n\nThe page will reload when you make changes.\\\nYou may also see any lint errors in the console.\n\n### `yarn test`\n\nLaunches the test runner in the interactive watch mode.\\\nSee the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\n\n### `yarn build`\n\nBuilds the app for production to the `build` folder.\\\nIt correctly bundles React in production mode and optimizes the build for the best performance.\n\nThe build is minified and the filenames include the hashes.\\\nYour app is ready to be deployed!\n\nSee the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n\n### `yarn eject`\n\n**Note: this is a one-way operation. Once you `eject`, you can't go back!**\n\nIf you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\n\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.\n\nYou don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.\n\n## Learn More\n\nYou can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\n\nTo learn React, check out the [React documentation](https://reactjs.org/).\n\n### Code Splitting\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)\n\n### Analyzing the Bundle Size\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)\n\n### Making a Progressive Web App\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)\n\n### Advanced Configuration\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)\n\n### Deployment\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)\n\n### `yarn build` fails to minify\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)\n"
        },
        "index.html": {
            "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    -->\n    <title>React App</title>\n\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Rowdies:wght@300&family=Rubik&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300&family=Rowdies:wght@300&family=Rubik&display=swap\"\n      rel=\"stylesheet\"\n    />\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    -->\n  </body>\n</html>\n"
        },
        "robots.txt": {
            "code": "# https://www.robotstxt.org/robotstxt.html\nUser-agent: *\nDisallow:\n"
        },
        "App.css": {
            "code": "* {\n  margin: 0;\n  padding: 0;\n}\n\nhtml,body {\n  overflow-x: hidden;\n}"
        },
        "App.js": {
            "code": "import logo from './logo.svg';\nimport './App.css';\nimport Home from './Components/Home';\n\nfunction App() {\n  return (\n    <>\n    <Home/>\n    </>\n  );\n}\n\nexport default App;\n"
        },
        "App.test.js": {
            "code": "import { render, screen } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  render(<App />);\n  const linkElement = screen.getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n"
        },
        "Brands.jsx": {
            "code": "import React from \"react\";\n\nconst Brands = () => {\n  return (\n    <>\n      <div className=\"brands\">\n        <div className=\"brands-container\">\n          <div className=\"brand-headers\">\n            <div className=\"brand-heading\">We design brands</div>\n            <div className=\"brand-header-content\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia\n              veniam quasi molestias nesciunt consequatur necessitatibus eveniet\n              sapiente soluta quaerat ipsa.\n            </div>\n          </div>\n          <div className=\"brand-body\">\n            <li>lesarenics</li>\n            <li>avesamples</li>\n            <li>WHITESPACE</li>\n            <li>monolasm</li>\n            <li>barcelona</li>\n            <li>smoothVanilla</li>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Brands;\n"
        },
        "Experience.jsx": {
            "code": "import React from \"react\";\n\nconst Experience = () => {\n  return (\n    <>\n      <div className=\"experience\">\n        <div className=\"experience-child\">\n          <div className=\"experience-header\">\n            <h1>We build experience</h1>\n            <p>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. In, quas!\n              A adipisci in itaque voluptatibus!\n            </p>\n          </div>\n          <div className=\"experience-body\">\n            <div className=\"experience-cards\" id=\"design\">\n              <div className=\"experience-card-header\">DESIGN</div>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Labore\n                commodi error sed, odit facere quibusdam exercitationem atque\n                assumenda nihil laudantium ipsum enim voluptatem. Reiciendis,\n                mollitia?\n              </p>\n              <button className=\"learn-more\">LEARN MORE</button>\n            </div>\n            <div className=\"experience-cards\" id=\"content\">\n              <div className=\"experience-card-header\">CONTENT</div>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Labore\n                commodi error sed, odit facere quibusdam exercitationem atque\n                assumenda nihil laudantium ipsum enim voluptatem. Reiciendis,\n                mollitia?\n              </p>\n              <button className=\"learn-more\">LEARN MORE</button>\n            </div>\n            <div className=\"experience-cards\" id=\"strategy\">\n              <div className=\"experience-card-header\">STRATEGY</div>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Labore\n                commodi error sed, odit facere quibusdam exercitationem atque\n                assumenda nihil laudantium ipsum enim voluptatem. Reiciendis,\n                mollitia?\n              </p>\n              <button className=\"learn-more\">LEARN MORE</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Experience;\n"
        },
        "FirstFooter.jsx": {
            "code": "import React from \"react\";\n\nconst FirstFooter = () => {\n  return (\n    <>\n      <div className=\"first-footer\">\n        <div className=\"first-footer-container\">\n          <p>\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Officiis\n            facere distinctio odio ipsum sint architecto.\n          </p>\n          <button className=\"learn\">LEARN MORE</button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FirstFooter;\n"
        },
        "Header.jsx": {
            "code": "import React from \"react\";\n\nconst Header = () => {\n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"minimal-design\">\n          <h1 className=\"minimal-design-heading\">We crush minimam design</h1>\n          <p className=\"a\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit.\n            Reprehenderit delectus necessitatibus itaque fuga odio quidem\n            deserunt ullam cum magnam vero?\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n"
        },
        "Home.css": {
            "code": ".nav {\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  align-items: center;\n}\n.nav * {\n  padding: 1rem;\n}\n.push {\n  margin-right: auto;\n}\n\n@media only screen and (max-width: 550px) {\n  .nav {\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    align-items: center;\n  }\n  .push {\n    margin: auto;\n  }\n}\n\n.header {\n  background: linear-gradient(rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.9)),\n    url(\"house.jpg\");\n  height: 60vh;\n  display: flex;\n  align-items: center;\n  padding: 7vw;\n}\n\n.minimal-design * {\n  color: white;\n}\n\n.minimal-design {\n  width: 30%;\n}\n\n.push {\n}\n\n@media only screen and (max-width: 500px) {\n  .experience {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .experience-body {\n    display: flex;\n    flex-direction: column !important;\n    width: 100vw;\n  }\n\n  .experience-header {\n    padding-left: 5vh;\n  }\n\n  .experience-child {\n    padding: 4vh !important;\n  }\n\n  #design {\n    text-align: left;\n    padding-left: 2vw !important;\n  }\n\n  #strategy {\n    text-align: left;\n    padding-right: 2vw !important;\n  }\n\n  .experience-cards{\n    padding-bottom: 5vh !important;\n  }\n  \n}\n\n.experience {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.experience-body {\n  display: flex;\n  flex-direction: row;\n}\n\n.experience-header {\n  padding-bottom: 5vh;\n}\n\n.experience-header h1 {\n  font-family: \"Rowdies\", cursive;\n}\n\n.experience-cards {\n  padding: 2vw;\n}\n\n#design {\n  padding-left: 0px;\n}\n\n#strategy {\n  padding-right: 0;\n}\n\n.experience-child {\n  padding: 20vh;\n}\n.experience-card-header {\n  font-size: 1.2rem;\n  font-weight: 700;\n}\n\n.learn-more {\n  background-color: black;\n  color: white;\n  padding: 0.8vw;\n  border-style: none;\n}\n\n.learn {\n  color:black;\n  padding: 0.5vw 1.5vw 0.5vw 1.5vw!important;\n  border-style: none;\n}\n\n.brands {\n  height: 50vh;\n  background: linear-gradient(rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.9)),\n    url(\"house.jpg\");\n}\n\n.stories {\n  padding-bottom: 10vh;\n}\n.first-footer {\n  background-color: aqua;\n  padding: 4vh;\n}\n\n@media only screen and (min-width: 500px) {\n}\n\n.second-footer {\n  background-color: rgb(216, 178, 223);\n  height: 15vh;\n}\n.brand-heading {\n  font-size: 2rem;\n  font-weight: 700;\n}\n\n.brand-headers {\n  color: white;\n  margin-bottom: 8vh;\n}\n\n.brands {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.brands-container {\n  width: 80vw;\n}\n\n.brand-body {\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  justify-content: space-between;\n}\n\n.brand-body * {\n  color: white;\n}\n\n.stories {\n  display: flex;\n  justify-content: center;\n}\n\n.stories-container {\n  width: 75%;\n  padding: 10vh;\n}\n\n.stories-header {\n  margin-bottom: 10vh;\n}\n\n.stories-heading {\n  font-size: 700;\n  font-size: 2rem;\n  font-family: 'Rowdies', cursive;\n}\n\n.stories-body {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n\n@media only screen and (max-width: 768px) {\n  .stories-body {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n  .stories-body * {\n    width: 100% !important;\n  }\n\n  .stories-container {\n    width: 100%;\n    padding: 2vh;\n  }\n}\n\n.body-first {\n  width: 45%;\n}\n\n.body-second {\n  width: 45%;\n}\n\n.body-image {\n  background: no-repeat 100% url(\"house.jpg\");\n  height: 50vh;\n  background-size: 100% 100%;\n}\n\n.stories-body * .body-description-header {\n  padding-top: 3vh;\n}\n\n.stories-body * .body-description-date {\n  padding-top: 1vh;\n}\n\n.first-footer-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.first-footer {\n  background: linear-gradient(\n    to right,\n    rgb(24, 89, 143),\n    rgba(92, 143, 219, 0.9)\n  );\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.first-footer-container button {\n  border-style: none;\n  padding: 0.6vw;\n}\n\n.second-footer {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.9)),\n    url(\"house.jpg\");\n}\n\n.second-footer-container {\n  width: 30vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.footer-first {\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  justify-content: space-around;\n}\n\n.second-footer * {\n  padding: 0.2vh;\n  color: white;\n}\n\n@media only screen and (max-width: 600px) {\n  .brand-body {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    flex-wrap: wrap;\n  }\n}\n\n.minimal-design-heading {\n  font-family: \"Rowdies\", cursive;\n}\n\n.brand-heading {\n  font-family: \"Rowdies\", cursive;\n}\n"
        },
        "Home.jsx": {
            "code": "import React from \"react\";\nimport \"./Home.css\";\nimport Navigation from \"./Navigation/Navigation\";\nimport Header from \"./Header/Header\";\nimport Experience from \"./Experience/Experience\";\nimport Brands from \"./Brands/Brands\";\nimport Stories from \"./Stories/Stories\";\nimport FirstFooter from \"./FirstFooter/FirstFooter\";\nimport SecondFooter from \"./SecondFooter/SecondFooter\";\n\nconst Home = () => {\n  return (\n    <>\n      <div className=\"container\">\n        <Navigation />\n        <Header />\n        <Experience />\n        <Brands />\n        <Stories />\n        <FirstFooter />\n        <SecondFooter />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n"
        },
        "Navigation.jsx": {
            "code": "import React from 'react';\nimport { FiFacebook } from 'react-icons/fi';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nconst Navigation = () => {\n  return (\n    <>\n     <div className=\"nav\">\n            <li className='push'><FiFacebook /></li>\n            <li>Sample</li>\n            <li>House</li>\n            <li>product</li>\n            <li>About</li>\n            <li>Contact</li>\n            <li>\n            <AiOutlineSearch/>\n            </li>\n        </div>\n    </>\n  )\n}\n\nexport default Navigation"
        },
        "SecondFooter.jsx": {
            "code": "import React from \"react\";\nimport { FiFacebook } from 'react-icons/fi';\n\nconst SecondFooter = () => {\n  return (\n    <>\n      <div className=\"second-footer\">\n        <div className=\"second-footer-container\">\n          <FiFacebook className=\"second-footer-image\" />\n          <div className=\"footer-first\">\n            <li>HelpDesk</li>\n            <li>change</li>\n            <li>powerered</li>\n          </div>\n          <div className=\"footer-first\">\n            <li>lorem</li>\n            <li>change</li>\n            <li>contact</li>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SecondFooter;\n"
        },
        "index.css": {
            "code": ""
        },
        "index.js": {
            "code": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
        }
    },
    "calorie": {
        "README.md": {
            "code": "## ![Dive logo](https://user-images.githubusercontent.com/424487/219708981-f0416526-ba48-4b01-b5b3-c0eb73362718.png) Dive \n<!-- ![Company Logo](https://example.org) -->\n\n| Octernship info  | Timelines and Stipend |\n| ------------- | ------------- |\n| Assignment Deadline  | 19th June 2023  |\n| Octernship Duration  | 3rd July 2023 - 3rd October 2023 |\n| Monthly Stipend  | $500 USD  |\n\n## Assignment\n\n\n# Write a REST API for the input of calories in Python\n\n### Task Instructions\n- API Users must be able to create an account and log in.\n- All API calls must be authenticated.\n- Implement at least three roles with different permission levels: a regular user would only be able to CRUD on their owned records, a user manager would be able to CRUD only users, and an admin would be able to CRUD all records and users.\n- Each entry has a date, time, text, and number of calories.\n- If the number of calories is not provided, the API should connect to a Calories API provider (for example, https://www.nutritionix.com) and try to get the number of calories for the entered meal.\n- User setting \u2013 Expected number of calories per day.\n- Each entry should have an extra boolean field set to true if the total for that day is less than the expected number of calories per day, otherwise should be false.\n- The API must be able to return data in the JSON format.\n- The API should provide filter capabilities for all endpoints that return a list of elements, as well should be able to support pagination.\n- Write unit and e2e tests.\n- Use any *Python* web framework\n- Use *SQLite* as the database\n\n### Task Expectations\n- API Design Best Practices\n- Documentation of any assumptions or choices made and why\n- Links as citation to any article / code referred to or used\n- Unit tests covering the core calories logic\n- Appropriate exception handling and error messages\n- Code Quality - remove any unnecessary code, avoid large functions\n- Good commit history - we won\u2019t accept a repo with a single giant commit \ud83d\ude45\u200d\u2640\ufe0f\n\n### Task submission\nUsing the [GitHub Flow](https://docs.github.com/en/get-started/quickstart/github-flow#following-github-flow) for assignment submission\n1. Creating a new branch \n2. Raising a Pull Request for submission\n3. Using GitHub Discussions to ask any relevant questions regarding the project\n4. Final submission Checklist:\n- [ ] SUBMISSION.md in the repository / PR, with:\n  - [ ] commands to set up the repo (dependencies etc.)\n  - [ ] commands to run the test suite\n  - [ ] commands to run the API server\n"
        }
    },
    "cart-items": {
        "README.md": {
            "code": "# Getting Started with Create React App\n\nThis project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n\n## Available Scripts\n\nIn the project directory, you can run:\n\n### `npm start`\n\nRuns the app in the development mode.\\\nOpen [http://localhost:3000](http://localhost:3000) to view it in your browser.\n\nThe page will reload when you make changes.\\\nYou may also see any lint errors in the console.\n\n### `npm test`\n\nLaunches the test runner in the interactive watch mode.\\\nSee the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\n\n### `npm run build`\n\nBuilds the app for production to the `build` folder.\\\nIt correctly bundles React in production mode and optimizes the build for the best performance.\n\nThe build is minified and the filenames include the hashes.\\\nYour app is ready to be deployed!\n\nSee the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n\n### `npm run eject`\n\n**Note: this is a one-way operation. Once you `eject`, you can't go back!**\n\nIf you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\n\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.\n\nYou don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.\n\n## Learn More\n\nYou can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\n\nTo learn React, check out the [React documentation](https://reactjs.org/).\n\n### Code Splitting\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)\n\n### Analyzing the Bundle Size\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)\n\n### Making a Progressive Web App\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)\n\n### Advanced Configuration\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)\n\n### Deployment\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)\n\n### `npm run build` fails to minify\n\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)\n"
        },
        "index.html": {
            "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    -->\n    <title>React App</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    -->\n  </body>\n</html>\n"
        },
        "robots.txt": {
            "code": "# https://www.robotstxt.org/robotstxt.html\nUser-agent: *\nDisallow:\n"
        },
        "App.css": {
            "code": "table{\n  width: 90vw !important;\n  margin:20px 10px 10px 10px;\n  box-shadow: 0px 5px 20px rgb(160, 65, 95);\n  border-radius: 20px;\n}\n\n.red-color{\n  background-color: red;\n}\n.green-color{\n  background-color:green;\n}\n\ntd{\n  padding:1vw;\n  margin:1px;\n \n}\n\n.first{\n  background-color: red;\n}\n\n.second{\n  background-color: green;\n}\n\n\n* {\n  box-sizing: border-box;\n}\n\n\n\n.navbar {\n  overflow: hidden;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n.navbar a {\n  float: left;\n  font-size: 16px;\n  text-align: center;\n  /* padding: 14px 16px; */\n  text-decoration: none;\n}\n\n.dropdown {\n  float: left;\n  overflow: hidden;\n}\n\n.dropdown .dropbtn {\n \n  border: none;\n  outline: none;\n\n  padding: 5px 0px 0px 20px;\n  background-color: inherit;\n  font: inherit;\n  margin: 0;\n}\n\n\n\n.dropdown-content {\n  display: none;\n  position: absolute;\n  width: 100%;\n  left: 0;\n  z-index: 1;\n}\n\n.dropdown-content .header {\n  background: red;\n  padding: 16px;\n  color: white;\n}\n\n.dropdown:hover .dropdown-content {\n  display: block;\n}\n\n/* Create three equal columns that floats next to each other */\n.column {\n margin:0px 0px 0px 50px;\n  width: 10.33%;\n  padding: 1px;\n  background-color: #ccc;\n  height: 150px;\n}\n\n/* .column a {\n  float: none;\n  color: black;\n  padding: 16px;\n  text-decoration: none;\n  display: block;\n  text-align: left;\n  width:10px;\n} */\n\n.column a:hover {\n  background-color: #ddd;\n}\n\n/* Clear floats after the columns */\n.row:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\nhtml{\n  overflow-x: hidden;\n}\n\nbody{\n  overflow: hidden;\n  flex-direction: row;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0px !important;\n  border-radius: 20px;\n}\n\n.header{\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  font-size: 3rem;\n  font-weight: 700;\n  color:coral;\n\n}"
        },
        "App.js": {
            "code": "import logo from './logo.svg';\nimport './App.css';\n\nimport TableContent from './components/Body';\n\nfunction App() {\n\n\n  return (\n    <>\n    <div className=\"header\">Tables</div>\n      <TableContent/>\n    </>\n  );\n}\n\nexport default App;\n"
        },
        "App.test.js": {
            "code": "import { render, screen } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  render(<App />);\n  const linkElement = screen.getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n"
        },
        "Body.jsx": {
            "code": "import React from 'react'\nimport { useEffect, useState } from 'react'\nimport Table from './Table';\nimport TableComponent from './TableComponent';\n\nconst TableContent = () => {\n  return (\n    <>\n    <body>\n        <div className=\"home-container\">\n          <div className=\"serv\">\n            <ul>\n              <TableComponent/>\n            </ul>\n          </div>\n        </div>\n      </body>\n    </>\n  )\n}\n\nexport default TableContent"
        },
        "Table.jsx": {
            "code": "import React from \"react\";\n\nconst Table = (props) => {\n  return (\n    <>\n      <tr>\n        <td>{props.item.first_name}</td>\n        <td>{props.item.last_name}</td>\n        <td>{props.item.email}</td>\n        <td>{props.item.gender}</td>\n        <td>{props.item.ip_address}</td>\n        <td>{props.item.airport_code}</td>\n        <td>{props.item.time}</td>\n\n        <td>\n          {props.item.status == true ? (\n            <div className=\"first\">{props.item.status.toString()}</div>\n          ) : (\n            <div className=\"second\">{props.item.status.toString()}</div>\n          )}\n        </td>\n        <td>{props.item.mobile}</td>\n        <td>{props.item.area}</td>\n        <td>{props.item.show.toString()}</td>\n        <td> {props.item.status.toString()}</td>\n      </tr>\n    </>\n  );\n};\n\nexport default Table;\n"
        },
        "TableComponent.jsx": {
            "code": "import React from \"react\";\nimport Table from \"./Table\";\nimport { useEffect, useState } from \"react\";\n\nconst TableComponent = () => {\n  var datas = [\n    {\n      id: 1,\n      first_name: \"Lonnie\",\n      last_name: \"O' Connell\",\n      email: \"loconnell0@hao123.com\",\n      gender: \"Male\",\n      ip_address: \"163.42.164.152\",\n      airport_code: \"OGO\",\n      time: \"7/10/2022\",\n      status: true,\n      mobile: \"707-462-9538\",\n      area: \"9 Coleman Trail\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 2,\n      first_name: \"Nikolos\",\n      last_name: \"Botler\",\n      email: \"nbotler1@wikipedia.org\",\n      gender: \"Male\",\n      ip_address: \"116.251.170.231\",\n      airport_code: \"CBB\",\n      time: \"12/25/2021\",\n      status: false,\n      mobile: \"240-316-9224\",\n      area: \"6545 Waxwing Road\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 3,\n      first_name: \"Burgess\",\n      last_name: \"Caddens\",\n      email: \"bcaddens2@accuweather.com\",\n      gender: \"Polygender\",\n      ip_address: \"126.177.211.243\",\n      airport_code: \"UKS\",\n      time: \"2/24/2022\",\n      status: false,\n      mobile: \"435-749-4095\",\n      area: \"49260 Golf Course Court\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 4,\n      first_name: \"Elissa\",\n      last_name: \"Lesslie\",\n      email: \"elesslie3@blog.com\",\n      gender: \"Female\",\n      ip_address: \"163.18.115.96\",\n      airport_code: \"SFE\",\n      time: \"3/13/2022\",\n      status: false,\n      mobile: \"877-992-0858\",\n      area: \"65014 Gulseth Trail\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 5,\n      first_name: \"Donaugh\",\n      last_name: \"Nusche\",\n      email: \"dnusche4@newsvine.com\",\n      gender: \"Male\",\n      ip_address: \"63.202.238.236\",\n      airport_code: \"VAW\",\n      time: \"6/2/2022\",\n      status: true,\n      mobile: \"419-777-9236\",\n      area: \"047 Anzinger Terrace\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 6,\n      first_name: \"Guillaume\",\n      last_name: \"Edgcumbe\",\n      email: \"gedgcumbe5@ycombinator.com\",\n      gender: \"Male\",\n      ip_address: \"134.249.161.241\",\n      airport_code: \"NOV\",\n      time: \"11/24/2022\",\n      status: true,\n      mobile: \"100-187-2648\",\n      area: \"262 Spohn Trail\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 7,\n      first_name: \"Berti\",\n      last_name: \"Coldbath\",\n      email: \"bcoldbath6@un.org\",\n      gender: \"Male\",\n      ip_address: \"130.30.122.132\",\n      airport_code: \"PHK\",\n      time: \"6/8/2022\",\n      status: true,\n      mobile: \"292-925-7639\",\n      area: \"5167 Surrey Junction\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 8,\n      first_name: \"Daune\",\n      last_name: \"Brumen\",\n      email: \"dbrumen7@si.edu\",\n      gender: \"Female\",\n      ip_address: \"250.92.132.133\",\n      airport_code: \"ZMH\",\n      time: \"8/17/2022\",\n      status: false,\n      mobile: \"467-673-4051\",\n      area: \"3076 Toban Avenue\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 9,\n      first_name: \"Aigneis\",\n      last_name: \"De Ruel\",\n      email: \"aderuel8@unicef.org\",\n      gender: \"Female\",\n      ip_address: \"99.140.129.80\",\n      airport_code: \"HUN\",\n      time: \"8/31/2022\",\n      status: false,\n      mobile: \"192-951-6084\",\n      area: \"6 Union Drive\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 10,\n      first_name: \"Khalil\",\n      last_name: \"McQuorkel\",\n      email: \"kmcquorkel9@zdnet.com\",\n      gender: \"Male\",\n      ip_address: \"172.193.34.60\",\n      airport_code: \"CSA\",\n      time: \"10/25/2022\",\n      status: false,\n      mobile: \"294-898-9568\",\n      area: \"708 Straubel Pass\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 11,\n      first_name: \"Xylina\",\n      last_name: \"Coom\",\n      email: \"xcooma@msu.edu\",\n      gender: \"Female\",\n      ip_address: \"65.171.59.54\",\n      airport_code: \"QRY\",\n      time: \"8/3/2022\",\n      status: false,\n      mobile: \"411-396-4207\",\n      area: \"789 Boyd Terrace\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 12,\n      first_name: \"Phillipp\",\n      last_name: \"Templeton\",\n      email: \"ptempletonb@dagondesign.com\",\n      gender: \"Male\",\n      ip_address: \"6.58.113.79\",\n      airport_code: \"YOA\",\n      time: \"5/9/2022\",\n      status: true,\n      mobile: \"978-733-1669\",\n      area: \"641 Eagan Crossing\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 13,\n      first_name: \"Janela\",\n      last_name: \"Harniman\",\n      email: \"jharnimanc@t-online.de\",\n      gender: \"Female\",\n      ip_address: \"180.22.90.230\",\n      airport_code: \"CVQ\",\n      time: \"9/24/2022\",\n      status: true,\n      mobile: \"179-908-3854\",\n      area: \"31078 Mallory Park\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 14,\n      first_name: \"Hamid\",\n      last_name: \"Dyster\",\n      email: \"hdysterd@cornell.edu\",\n      gender: \"Male\",\n      ip_address: \"61.88.24.2\",\n      airport_code: \"IKL\",\n      time: \"12/26/2021\",\n      status: true,\n      mobile: \"694-480-0182\",\n      area: \"8295 International Plaza\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 15,\n      first_name: \"Federica\",\n      last_name: \"Richel\",\n      email: \"frichele@ask.com\",\n      gender: \"Female\",\n      ip_address: \"183.113.111.234\",\n      airport_code: \"MGG\",\n      time: \"10/2/2022\",\n      status: true,\n      mobile: \"614-699-8295\",\n      area: \"267 Cordelia Court\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 16,\n      first_name: \"Rebe\",\n      last_name: \"Leipold\",\n      email: \"rleipoldf@bloglovin.com\",\n      gender: \"Polygender\",\n      ip_address: \"49.255.10.149\",\n      airport_code: \"RRK\",\n      time: \"7/10/2022\",\n      status: true,\n      mobile: \"445-992-5668\",\n      area: \"196 Truax Lane\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 17,\n      first_name: \"Rozina\",\n      last_name: \"Mattock\",\n      email: \"rmattockg@cisco.com\",\n      gender: \"Female\",\n      ip_address: \"190.112.193.84\",\n      airport_code: \"HTW\",\n      time: \"5/11/2022\",\n      status: false,\n      mobile: \"361-580-7808\",\n      area: \"7126 Bartelt Drive\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 18,\n      first_name: \"Raffarty\",\n      last_name: \"Kidwell\",\n      email: \"rkidwellh@washington.edu\",\n      gender: \"Male\",\n      ip_address: \"213.255.228.78\",\n      airport_code: \"FKN\",\n      time: \"5/10/2022\",\n      status: false,\n      mobile: \"435-771-2224\",\n      area: \"55527 Shopko Pass\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 19,\n      first_name: \"Ermina\",\n      last_name: \"Croucher\",\n      email: \"ecroucheri@prlog.org\",\n      gender: \"Polygender\",\n      ip_address: \"44.244.212.103\",\n      airport_code: \"CMH\",\n      time: \"11/24/2022\",\n      status: true,\n      mobile: \"929-930-9264\",\n      area: \"9 Algoma Parkway\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 20,\n      first_name: \"Virgie\",\n      last_name: \"Zuppa\",\n      email: \"vzuppaj@usa.gov\",\n      gender: \"Male\",\n      ip_address: \"103.60.243.234\",\n      airport_code: \"PUN\",\n      time: \"5/27/2022\",\n      status: true,\n      mobile: \"957-265-4315\",\n      area: \"1162 Bowman Center\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 21,\n      first_name: \"Eryn\",\n      last_name: \"L'Hommeau\",\n      email: \"elhommeauk@berkeley.edu\",\n      gender: \"Female\",\n      ip_address: \"115.252.199.72\",\n      airport_code: \"QVR\",\n      time: \"9/12/2022\",\n      status: true,\n      mobile: \"215-948-5791\",\n      area: \"74662 High Crossing Pass\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 22,\n      first_name: \"Marmaduke\",\n      last_name: \"Capaldo\",\n      email: \"mcapaldol@gmpg.org\",\n      gender: \"Male\",\n      ip_address: \"165.96.43.70\",\n      airport_code: \"VPY\",\n      time: \"4/10/2022\",\n      status: false,\n      mobile: \"433-519-9175\",\n      area: \"98913 Corscot Alley\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 23,\n      first_name: \"Rosalia\",\n      last_name: \"Humes\",\n      email: \"rhumesm@hhs.gov\",\n      gender: \"Female\",\n      ip_address: \"156.212.248.11\",\n      airport_code: \"SKR\",\n      time: \"2/1/2022\",\n      status: true,\n      mobile: \"799-773-0144\",\n      area: \"172 Buena Vista Parkway\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 24,\n      first_name: \"Vin\",\n      last_name: \"Arkle\",\n      email: \"varklen@time.com\",\n      gender: \"Male\",\n      ip_address: \"194.140.178.233\",\n      airport_code: \"GOT\",\n      time: \"5/6/2022\",\n      status: false,\n      mobile: \"994-130-4127\",\n      area: \"609 Dryden Trail\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 25,\n      first_name: \"Hollyanne\",\n      last_name: \"Schaumann\",\n      email: \"hschaumanno@nasa.gov\",\n      gender: \"Female\",\n      ip_address: \"32.105.42.36\",\n      airport_code: \"XAR\",\n      time: \"5/24/2022\",\n      status: true,\n      mobile: \"322-793-8279\",\n      area: \"5 Schmedeman Point\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 26,\n      first_name: \"Ransom\",\n      last_name: \"Tubritt\",\n      email: \"rtubrittp@purevolume.com\",\n      gender: \"Bigender\",\n      ip_address: \"41.51.38.166\",\n      airport_code: \"TEP\",\n      time: \"7/1/2022\",\n      status: true,\n      mobile: \"730-814-7105\",\n      area: \"48591 Bashford Park\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 27,\n      first_name: \"Ali\",\n      last_name: \"Pont\",\n      email: \"apontq@seattletimes.com\",\n      gender: \"Female\",\n      ip_address: \"232.12.5.48\",\n      airport_code: \"PVK\",\n      time: \"2/23/2022\",\n      status: true,\n      mobile: \"267-509-9238\",\n      area: \"165 Manley Trail\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 28,\n      first_name: \"Angus\",\n      last_name: \"Gresser\",\n      email: \"agresserr@squidoo.com\",\n      gender: \"Male\",\n      ip_address: \"92.222.167.226\",\n      airport_code: \"BGA\",\n      time: \"11/9/2022\",\n      status: true,\n      mobile: \"772-696-6954\",\n      area: \"711 Rusk Pass\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 29,\n      first_name: \"Liam\",\n      last_name: \"Waite\",\n      email: \"lwaites@earthlink.net\",\n      gender: \"Male\",\n      ip_address: \"237.211.29.167\",\n      airport_code: \"HRM\",\n      time: \"3/22/2022\",\n      status: true,\n      mobile: \"143-447-7237\",\n      area: \"54106 Eggendart Road\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 30,\n      first_name: \"Godwin\",\n      last_name: \"Pacheco\",\n      email: \"gpachecot@loc.gov\",\n      gender: \"Male\",\n      ip_address: \"15.220.247.191\",\n      airport_code: \"LDO\",\n      time: \"2/13/2022\",\n      status: false,\n      mobile: \"355-376-3513\",\n      area: \"94 Tennessee Junction\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 31,\n      first_name: \"Hussein\",\n      last_name: \"Bernot\",\n      email: \"hbernotu@theguardian.com\",\n      gender: \"Male\",\n      ip_address: \"34.100.163.232\",\n      airport_code: \"XIN\",\n      time: \"4/24/2022\",\n      status: true,\n      mobile: \"250-272-3899\",\n      area: \"09 Fremont Circle\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 32,\n      first_name: \"Findley\",\n      last_name: \"Alywin\",\n      email: \"falywinv@hexun.com\",\n      gender: \"Male\",\n      ip_address: \"162.106.223.235\",\n      airport_code: \"QGP\",\n      time: \"12/14/2021\",\n      status: false,\n      mobile: \"679-748-8145\",\n      area: \"5 Homewood Road\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 33,\n      first_name: \"Barth\",\n      last_name: \"Sacher\",\n      email: \"bsacherw@rambler.ru\",\n      gender: \"Male\",\n      ip_address: \"47.83.92.180\",\n      airport_code: \"HUV\",\n      time: \"6/1/2022\",\n      status: false,\n      mobile: \"992-102-6302\",\n      area: \"64 Johnson Crossing\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 34,\n      first_name: \"Ernestine\",\n      last_name: \"O'Neal\",\n      email: \"eonealx@patch.com\",\n      gender: \"Female\",\n      ip_address: \"241.66.234.15\",\n      airport_code: \"MTA\",\n      time: \"5/1/2022\",\n      status: false,\n      mobile: \"340-644-1469\",\n      area: \"6 Saint Paul Court\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 35,\n      first_name: \"Jandy\",\n      last_name: \"Titchen\",\n      email: \"jtitcheny@wikispaces.com\",\n      gender: \"Female\",\n      ip_address: \"221.234.160.167\",\n      airport_code: \"IEG\",\n      time: \"10/15/2022\",\n      status: true,\n      mobile: \"173-427-0443\",\n      area: \"55 Russell Circle\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 36,\n      first_name: \"Ellynn\",\n      last_name: \"Corzor\",\n      email: \"ecorzorz@usatoday.com\",\n      gender: \"Female\",\n      ip_address: \"82.17.103.11\",\n      airport_code: \"GYG\",\n      time: \"7/22/2022\",\n      status: true,\n      mobile: \"677-988-2055\",\n      area: \"71 Dunning Pass\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 37,\n      first_name: \"Orel\",\n      last_name: \"Beadle\",\n      email: \"obeadle10@digg.com\",\n      gender: \"Female\",\n      ip_address: \"225.76.215.255\",\n      airport_code: \"XRY\",\n      time: \"6/25/2022\",\n      status: false,\n      mobile: \"474-359-7710\",\n      area: \"9488 Valley Edge Hill\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 38,\n      first_name: \"North\",\n      last_name: \"Halms\",\n      email: \"nhalms11@squidoo.com\",\n      gender: \"Male\",\n      ip_address: \"53.38.184.72\",\n      airport_code: \"MFB\",\n      time: \"11/10/2022\",\n      status: true,\n      mobile: \"410-395-4287\",\n      area: \"466 Westerfield Point\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 39,\n      first_name: \"Walther\",\n      last_name: \"Richardson\",\n      email: \"wrichardson12@princeton.edu\",\n      gender: \"Male\",\n      ip_address: \"160.30.226.185\",\n      airport_code: \"TTO\",\n      time: \"8/13/2022\",\n      status: true,\n      mobile: \"814-511-1460\",\n      area: \"4 Texas Trail\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 40,\n      first_name: \"Blancha\",\n      last_name: \"Lefridge\",\n      email: \"blefridge13@biblegateway.com\",\n      gender: \"Female\",\n      ip_address: \"164.20.75.197\",\n      airport_code: \"DKI\",\n      time: \"10/29/2022\",\n      status: true,\n      mobile: \"988-983-2725\",\n      area: \"844 Washington Road\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 41,\n      first_name: \"Matti\",\n      last_name: \"Boncore\",\n      email: \"mboncore14@addtoany.com\",\n      gender: \"Female\",\n      ip_address: \"79.211.151.234\",\n      airport_code: \"SHS\",\n      time: \"1/13/2022\",\n      status: true,\n      mobile: \"231-109-5204\",\n      area: \"45 Hansons Hill\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 42,\n      first_name: \"Erik\",\n      last_name: \"Richt\",\n      email: \"ericht15@qq.com\",\n      gender: \"Male\",\n      ip_address: \"35.39.154.14\",\n      airport_code: \"NDG\",\n      time: \"1/4/2022\",\n      status: true,\n      mobile: \"101-730-8823\",\n      area: \"1161 Forster Park\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 43,\n      first_name: \"Sidonnie\",\n      last_name: \"Curson\",\n      email: \"scurson16@google.co.jp\",\n      gender: \"Female\",\n      ip_address: \"94.48.147.216\",\n      airport_code: \"OMS\",\n      time: \"6/17/2022\",\n      status: true,\n      mobile: \"925-291-3451\",\n      area: \"42024 Scofield Street\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 44,\n      first_name: \"Ermentrude\",\n      last_name: \"Ordelt\",\n      email: \"eordelt17@hud.gov\",\n      gender: \"Female\",\n      ip_address: \"173.97.103.242\",\n      airport_code: \"WUU\",\n      time: \"1/23/2022\",\n      status: true,\n      mobile: \"636-258-4576\",\n      area: \"7625 Sundown Place\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 45,\n      first_name: \"Amos\",\n      last_name: \"Redd\",\n      email: \"aredd18@mail.ru\",\n      gender: \"Male\",\n      ip_address: \"100.161.79.55\",\n      airport_code: \"TIP\",\n      time: \"9/27/2022\",\n      status: true,\n      mobile: \"813-314-0163\",\n      area: \"0 Sugar Avenue\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 46,\n      first_name: \"Shaughn\",\n      last_name: \"Russon\",\n      email: \"srusson19@squidoo.com\",\n      gender: \"Male\",\n      ip_address: \"142.240.189.61\",\n      airport_code: \"MAD\",\n      time: \"1/18/2022\",\n      status: false,\n      mobile: \"176-722-4156\",\n      area: \"0392 Derek Alley\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 47,\n      first_name: \"Frans\",\n      last_name: \"Albiston\",\n      email: \"falbiston1a@phpbb.com\",\n      gender: \"Male\",\n      ip_address: \"131.241.104.200\",\n      airport_code: \"YQR\",\n      time: \"12/18/2021\",\n      status: false,\n      mobile: \"833-657-5677\",\n      area: \"18845 Thackeray Street\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 48,\n      first_name: \"Priscilla\",\n      last_name: \"Buckley\",\n      email: \"pbuckley1b@cornell.edu\",\n      gender: \"Female\",\n      ip_address: \"249.116.245.108\",\n      airport_code: \"AXS\",\n      time: \"1/29/2022\",\n      status: false,\n      mobile: \"904-986-5580\",\n      area: \"43 Merry Crossing\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 49,\n      first_name: \"Anastasie\",\n      last_name: \"Ekins\",\n      email: \"aekins1c@php.net\",\n      gender: \"Female\",\n      ip_address: \"249.167.17.233\",\n      airport_code: \"IAS\",\n      time: \"11/17/2022\",\n      status: true,\n      mobile: \"258-170-8566\",\n      area: \"65 Nelson Place\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 50,\n      first_name: \"Dunn\",\n      last_name: \"Brocking\",\n      email: \"dbrocking1d@amazon.co.jp\",\n      gender: \"Male\",\n      ip_address: \"100.114.28.23\",\n      airport_code: \"CBG\",\n      time: \"8/8/2022\",\n      status: true,\n      mobile: \"182-532-5686\",\n      area: \"350 Debs Circle\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 51,\n      first_name: \"Lorinda\",\n      last_name: \"Streets\",\n      email: \"lstreets1e@bbc.co.uk\",\n      gender: \"Female\",\n      ip_address: \"247.186.90.23\",\n      airport_code: \"EOZ\",\n      time: \"5/11/2022\",\n      status: false,\n      mobile: \"245-746-3422\",\n      area: \"5 Oak Valley Parkway\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 52,\n      first_name: \"Michaeline\",\n      last_name: \"Settle\",\n      email: \"msettle1f@bloglovin.com\",\n      gender: \"Female\",\n      ip_address: \"215.220.202.208\",\n      airport_code: \"TET\",\n      time: \"11/9/2022\",\n      status: true,\n      mobile: \"161-540-1638\",\n      area: \"08 Green Ridge Hill\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 53,\n      first_name: \"Laney\",\n      last_name: \"Ledur\",\n      email: \"lledur1g@unesco.org\",\n      gender: \"Male\",\n      ip_address: \"70.125.49.60\",\n      airport_code: \"KDN\",\n      time: \"10/17/2022\",\n      status: true,\n      mobile: \"324-630-3034\",\n      area: \"6 Almo Plaza\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 54,\n      first_name: \"Fianna\",\n      last_name: \"Curcher\",\n      email: \"fcurcher1h@npr.org\",\n      gender: \"Female\",\n      ip_address: \"116.75.35.16\",\n      airport_code: \"HPT\",\n      time: \"10/1/2022\",\n      status: false,\n      mobile: \"761-744-9586\",\n      area: \"758 Acker Pass\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 55,\n      first_name: \"Dmitri\",\n      last_name: \"Thunderman\",\n      email: \"dthunderman1i@economist.com\",\n      gender: \"Male\",\n      ip_address: \"7.8.196.177\",\n      airport_code: \"BVM\",\n      time: \"5/23/2022\",\n      status: false,\n      mobile: \"842-238-7525\",\n      area: \"6 Old Gate Parkway\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 56,\n      first_name: \"Karlene\",\n      last_name: \"Copin\",\n      email: \"kcopin1j@free.fr\",\n      gender: \"Female\",\n      ip_address: \"171.210.144.216\",\n      airport_code: \"PCB\",\n      time: \"1/10/2022\",\n      status: false,\n      mobile: \"187-665-1483\",\n      area: \"82909 Orin Junction\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 57,\n      first_name: \"Somerset\",\n      last_name: \"Wheble\",\n      email: \"swheble1k@hao123.com\",\n      gender: \"Male\",\n      ip_address: \"177.144.246.201\",\n      airport_code: \"HIB\",\n      time: \"6/25/2022\",\n      status: false,\n      mobile: \"711-245-3109\",\n      area: \"93 Anhalt Center\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 58,\n      first_name: \"Julita\",\n      last_name: \"Kenward\",\n      email: \"jkenward1l@51.la\",\n      gender: \"Female\",\n      ip_address: \"62.221.145.159\",\n      airport_code: \"ORV\",\n      time: \"3/14/2022\",\n      status: false,\n      mobile: \"151-237-4141\",\n      area: \"32 Arizona Junction\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 59,\n      first_name: \"Izaak\",\n      last_name: \"Grennan\",\n      email: \"igrennan1m@studiopress.com\",\n      gender: \"Male\",\n      ip_address: \"216.6.178.199\",\n      airport_code: \"KBN\",\n      time: \"3/24/2022\",\n      status: false,\n      mobile: \"500-964-5625\",\n      area: \"10 Brown Plaza\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 60,\n      first_name: \"Jozef\",\n      last_name: \"Collings\",\n      email: \"jcollings1n@unblog.fr\",\n      gender: \"Male\",\n      ip_address: \"106.178.77.44\",\n      airport_code: \"PYR\",\n      time: \"12/15/2021\",\n      status: false,\n      mobile: \"763-680-7533\",\n      area: \"5924 Haas Hill\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 61,\n      first_name: \"Si\",\n      last_name: \"Hehir\",\n      email: \"shehir1o@friendfeed.com\",\n      gender: \"Male\",\n      ip_address: \"21.215.94.119\",\n      airport_code: \"HBG\",\n      time: \"7/3/2022\",\n      status: false,\n      mobile: \"980-579-1417\",\n      area: \"26346 Merrick Place\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 62,\n      first_name: \"Nilson\",\n      last_name: \"Alldread\",\n      email: \"nalldread1p@creativecommons.org\",\n      gender: \"Male\",\n      ip_address: \"86.207.250.119\",\n      airport_code: \"SRE\",\n      time: \"8/4/2022\",\n      status: false,\n      mobile: \"832-787-2127\",\n      area: \"37 Kedzie Parkway\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 63,\n      first_name: \"Dorothee\",\n      last_name: \"Gelardi\",\n      email: \"dgelardi1q@sphinn.com\",\n      gender: \"Female\",\n      ip_address: \"114.152.230.46\",\n      airport_code: \"UBP\",\n      time: \"11/28/2022\",\n      status: false,\n      mobile: \"372-284-8952\",\n      area: \"144 Glacier Hill Hill\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 64,\n      first_name: \"Creighton\",\n      last_name: \"Langlois\",\n      email: \"clanglois1r@php.net\",\n      gender: \"Male\",\n      ip_address: \"47.165.116.4\",\n      airport_code: \"LBM\",\n      time: \"4/5/2022\",\n      status: true,\n      mobile: \"390-580-9920\",\n      area: \"4 Kropf Road\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 65,\n      first_name: \"Mac\",\n      last_name: \"de Banke\",\n      email: \"mdebanke1s@yellowbook.com\",\n      gender: \"Male\",\n      ip_address: \"243.217.42.151\",\n      airport_code: \"ONG\",\n      time: \"10/16/2022\",\n      status: false,\n      mobile: \"500-513-8879\",\n      area: \"8 Spohn Junction\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 66,\n      first_name: \"Othilie\",\n      last_name: \"Chaucer\",\n      email: \"ochaucer1t@mozilla.org\",\n      gender: \"Genderqueer\",\n      ip_address: \"185.207.93.176\",\n      airport_code: \"IRC\",\n      time: \"12/29/2021\",\n      status: false,\n      mobile: \"757-566-5544\",\n      area: \"88 Amoth Hill\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 67,\n      first_name: \"Salvidor\",\n      last_name: \"Caze\",\n      email: \"scaze1u@nationalgeographic.com\",\n      gender: \"Male\",\n      ip_address: \"209.218.233.62\",\n      airport_code: \"MCE\",\n      time: \"7/4/2022\",\n      status: false,\n      mobile: \"913-866-8369\",\n      area: \"806 7th Road\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 68,\n      first_name: \"Corbet\",\n      last_name: \"Luard\",\n      email: \"cluard1v@stumbleupon.com\",\n      gender: \"Male\",\n      ip_address: \"75.177.244.221\",\n      airport_code: \"CBI\",\n      time: \"8/22/2022\",\n      status: false,\n      mobile: \"382-644-6490\",\n      area: \"4 Merrick Trail\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 69,\n      first_name: \"Roddie\",\n      last_name: \"Golds\",\n      email: \"rgolds1w@topsy.com\",\n      gender: \"Male\",\n      ip_address: \"145.216.11.99\",\n      airport_code: \"KGO\",\n      time: \"5/27/2022\",\n      status: true,\n      mobile: \"123-905-3792\",\n      area: \"89727 Marcy Hill\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 70,\n      first_name: \"Wells\",\n      last_name: \"St. Pierre\",\n      email: \"wstpierre1x@mozilla.com\",\n      gender: \"Male\",\n      ip_address: \"215.185.68.161\",\n      airport_code: \"SCC\",\n      time: \"4/5/2022\",\n      status: true,\n      mobile: \"937-474-2108\",\n      area: \"5 Graedel Point\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 71,\n      first_name: \"Branden\",\n      last_name: \"Alvarado\",\n      email: \"balvarado1y@cdbaby.com\",\n      gender: \"Male\",\n      ip_address: \"63.6.246.90\",\n      airport_code: \"SPW\",\n      time: \"4/29/2022\",\n      status: true,\n      mobile: \"819-554-7746\",\n      area: \"2140 Cody Crossing\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 72,\n      first_name: \"Garvin\",\n      last_name: \"Berecloth\",\n      email: \"gberecloth1z@google.ru\",\n      gender: \"Male\",\n      ip_address: \"92.239.205.22\",\n      airport_code: \"IXG\",\n      time: \"8/30/2022\",\n      status: true,\n      mobile: \"616-114-9901\",\n      area: \"7372 Killdeer Lane\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 73,\n      first_name: \"Tomi\",\n      last_name: \"Kilgrew\",\n      email: \"tkilgrew20@unesco.org\",\n      gender: \"Female\",\n      ip_address: \"193.114.14.47\",\n      airport_code: \"CHG\",\n      time: \"5/17/2022\",\n      status: true,\n      mobile: \"830-293-0843\",\n      area: \"682 Killdeer Trail\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 74,\n      first_name: \"Bettye\",\n      last_name: \"Carnson\",\n      email: \"bcarnson21@google.cn\",\n      gender: \"Female\",\n      ip_address: \"106.14.138.49\",\n      airport_code: \"UPL\",\n      time: \"11/6/2021\",\n      status: false,\n      mobile: \"783-207-0588\",\n      area: \"41 Mariners Cove Hill\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 75,\n      first_name: \"Sholom\",\n      last_name: \"Dumper\",\n      email: \"sdumper22@scribd.com\",\n      gender: \"Male\",\n      ip_address: \"62.47.33.191\",\n      airport_code: \"WPK\",\n      time: \"4/27/2022\",\n      status: false,\n      mobile: \"593-833-6062\",\n      area: \"12822 Springs Circle\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 76,\n      first_name: \"Giorgia\",\n      last_name: \"Newrick\",\n      email: \"gnewrick23@rakuten.co.jp\",\n      gender: \"Female\",\n      ip_address: \"177.164.129.187\",\n      airport_code: \"NIO\",\n      time: \"7/18/2022\",\n      status: true,\n      mobile: \"981-341-7954\",\n      area: \"80 Brentwood Street\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 77,\n      first_name: \"Reece\",\n      last_name: \"Killingsworth\",\n      email: \"rkillingsworth24@pcworld.com\",\n      gender: \"Male\",\n      ip_address: \"33.254.193.3\",\n      airport_code: \"SFX\",\n      time: \"4/8/2022\",\n      status: false,\n      mobile: \"243-295-6548\",\n      area: \"02880 Portage Pass\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 78,\n      first_name: \"Carly\",\n      last_name: \"Boich\",\n      email: \"cboich25@netvibes.com\",\n      gender: \"Female\",\n      ip_address: \"184.213.163.222\",\n      airport_code: \"CNH\",\n      time: \"4/1/2022\",\n      status: false,\n      mobile: \"856-426-0826\",\n      area: \"45 Oak Valley Hill\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 79,\n      first_name: \"Cos\",\n      last_name: \"Corten\",\n      email: \"ccorten26@imdb.com\",\n      gender: \"Male\",\n      ip_address: \"124.1.61.158\",\n      airport_code: \"LPT\",\n      time: \"2/16/2022\",\n      status: false,\n      mobile: \"613-368-3194\",\n      area: \"07 Debra Drive\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 80,\n      first_name: \"Franny\",\n      last_name: \"Tennewell\",\n      email: \"ftennewell27@a8.net\",\n      gender: \"Bigender\",\n      ip_address: \"57.38.212.112\",\n      airport_code: \"BQL\",\n      time: \"4/3/2022\",\n      status: true,\n      mobile: \"908-972-2555\",\n      area: \"8586 Mitchell Crossing\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 81,\n      first_name: \"North\",\n      last_name: \"Jays\",\n      email: \"njays28@furl.net\",\n      gender: \"Male\",\n      ip_address: \"167.48.13.116\",\n      airport_code: \"TGA\",\n      time: \"4/10/2022\",\n      status: true,\n      mobile: \"844-146-8619\",\n      area: \"8473 Sullivan Point\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 82,\n      first_name: \"Chelsae\",\n      last_name: \"Caw\",\n      email: \"ccaw29@spotify.com\",\n      gender: \"Genderqueer\",\n      ip_address: \"94.90.71.179\",\n      airport_code: \"BXB\",\n      time: \"12/14/2021\",\n      status: false,\n      mobile: \"356-484-7734\",\n      area: \"97 John Wall Place\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 83,\n      first_name: \"Granny\",\n      last_name: \"Looker\",\n      email: \"glooker2a@technorati.com\",\n      gender: \"Male\",\n      ip_address: \"113.86.208.226\",\n      airport_code: \"KNR\",\n      time: \"11/14/2021\",\n      status: true,\n      mobile: \"470-804-2380\",\n      area: \"95 Bayside Junction\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 84,\n      first_name: \"Velvet\",\n      last_name: \"Blethin\",\n      email: \"vblethin2b@nih.gov\",\n      gender: \"Female\",\n      ip_address: \"51.40.20.112\",\n      airport_code: \"BRO\",\n      time: \"8/4/2022\",\n      status: true,\n      mobile: \"322-767-1391\",\n      area: \"4 Charing Cross Way\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 85,\n      first_name: \"Hillyer\",\n      last_name: \"Trippitt\",\n      email: \"htrippitt2c@constantcontact.com\",\n      gender: \"Male\",\n      ip_address: \"26.182.137.201\",\n      airport_code: \"LEV\",\n      time: \"1/15/2022\",\n      status: false,\n      mobile: \"779-350-6159\",\n      area: \"1951 Hintze Street\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 86,\n      first_name: \"Annora\",\n      last_name: \"Teeney\",\n      email: \"ateeney2d@nationalgeographic.com\",\n      gender: \"Female\",\n      ip_address: \"202.175.87.66\",\n      airport_code: \"CGP\",\n      time: \"11/27/2021\",\n      status: true,\n      mobile: \"156-704-2070\",\n      area: \"73869 Mendota Avenue\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 87,\n      first_name: \"Amery\",\n      last_name: \"Vasyutin\",\n      email: \"avasyutin2e@google.com.au\",\n      gender: \"Male\",\n      ip_address: \"232.50.173.16\",\n      airport_code: \"HTS\",\n      time: \"11/26/2021\",\n      status: true,\n      mobile: \"636-716-7218\",\n      area: \"5342 New Castle Drive\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 88,\n      first_name: \"Dougie\",\n      last_name: \"Iiannone\",\n      email: \"diiannone2f@vinaora.com\",\n      gender: \"Male\",\n      ip_address: \"78.32.181.142\",\n      airport_code: \"CKE\",\n      time: \"8/22/2022\",\n      status: false,\n      mobile: \"525-204-3241\",\n      area: \"11857 Monument Pass\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 89,\n      first_name: \"Wainwright\",\n      last_name: \"Coombs\",\n      email: \"wcoombs2g@netscape.com\",\n      gender: \"Male\",\n      ip_address: \"233.30.35.81\",\n      airport_code: \"ZUM\",\n      time: \"4/29/2022\",\n      status: true,\n      mobile: \"403-662-3636\",\n      area: \"0 Northridge Avenue\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 90,\n      first_name: \"Alexandrina\",\n      last_name: \"Farlow\",\n      email: \"afarlow2h@delicious.com\",\n      gender: \"Female\",\n      ip_address: \"139.119.14.201\",\n      airport_code: \"KDN\",\n      time: \"12/19/2021\",\n      status: true,\n      mobile: \"646-205-1116\",\n      area: \"74 Shelley Center\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 91,\n      first_name: \"Costa\",\n      last_name: \"Ruske\",\n      email: \"cruske2i@cdbaby.com\",\n      gender: \"Male\",\n      ip_address: \"215.25.144.171\",\n      airport_code: \"CUU\",\n      time: \"10/11/2022\",\n      status: true,\n      mobile: \"314-297-8121\",\n      area: \"58 Sutteridge Plaza\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 92,\n      first_name: \"Karil\",\n      last_name: \"Blamey\",\n      email: \"kblamey2j@yale.edu\",\n      gender: \"Female\",\n      ip_address: \"108.132.163.130\",\n      airport_code: \"XNG\",\n      time: \"9/12/2022\",\n      status: false,\n      mobile: \"226-892-8227\",\n      area: \"3793 Continental Alley\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 93,\n      first_name: \"Aldwin\",\n      last_name: \"Plenty\",\n      email: \"aplenty2k@seesaa.net\",\n      gender: \"Male\",\n      ip_address: \"43.246.252.192\",\n      airport_code: \"ADC\",\n      time: \"11/5/2022\",\n      status: false,\n      mobile: \"578-155-5426\",\n      area: \"1082 Charing Cross Hill\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 94,\n      first_name: \"Gwendolen\",\n      last_name: \"Duerdin\",\n      email: \"gduerdin2l@umich.edu\",\n      gender: \"Female\",\n      ip_address: \"222.199.152.229\",\n      airport_code: \"TTE\",\n      time: \"12/2/2021\",\n      status: false,\n      mobile: \"497-776-9498\",\n      area: \"42 Mccormick Place\",\n      show: true,\n      edit: true,\n    },\n    {\n      id: 95,\n      first_name: \"Camellia\",\n      last_name: \"Rhymer\",\n      email: \"crhymer2m@economist.com\",\n      gender: \"Female\",\n      ip_address: \"124.191.75.110\",\n      airport_code: \"LOW\",\n      time: \"7/6/2022\",\n      status: true,\n      mobile: \"817-929-8305\",\n      area: \"6 Badeau Pass\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 96,\n      first_name: \"Webb\",\n      last_name: \"Spruce\",\n      email: \"wspruce2n@washingtonpost.com\",\n      gender: \"Male\",\n      ip_address: \"129.200.134.134\",\n      airport_code: \"HNH\",\n      time: \"10/5/2022\",\n      status: false,\n      mobile: \"743-482-1273\",\n      area: \"21143 Schmedeman Way\",\n      show: false,\n      edit: false,\n    },\n    {\n      id: 97,\n      first_name: \"Marv\",\n      last_name: \"Cragg\",\n      email: \"mcragg2o@mlb.com\",\n      gender: \"Male\",\n      ip_address: \"100.238.64.46\",\n      airport_code: \"AXV\",\n      time: \"10/8/2022\",\n      status: true,\n      mobile: \"480-664-7539\",\n      area: \"0308 Dawn Terrace\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 98,\n      first_name: \"Saunderson\",\n      last_name: \"Weston\",\n      email: \"sweston2p@pbs.org\",\n      gender: \"Male\",\n      ip_address: \"236.130.198.148\",\n      airport_code: \"MIZ\",\n      time: \"6/28/2022\",\n      status: false,\n      mobile: \"823-450-9719\",\n      area: \"1 Ohio Place\",\n      show: true,\n      edit: false,\n    },\n    {\n      id: 99,\n      first_name: \"Lionel\",\n      last_name: \"Beedie\",\n      email: \"lbeedie2q@chron.com\",\n      gender: \"Male\",\n      ip_address: \"43.183.53.122\",\n      airport_code: \"TBH\",\n      time: \"11/7/2022\",\n      status: false,\n      mobile: \"717-482-7772\",\n      area: \"55 Sugar Plaza\",\n      show: false,\n      edit: true,\n    },\n    {\n      id: 100,\n      first_name: \"Reuben\",\n      last_name: \"Tesyro\",\n      email: \"rtesyro2r@fotki.com\",\n      gender: \"Polygender\",\n      ip_address: \"124.233.62.26\",\n      airport_code: \"CMU\",\n      time: \"1/8/2022\",\n      status: true,\n      mobile: \"287-143-2240\",\n      area: \"3996 Vera Street\",\n      show: false,\n      edit: false,\n    },\n  ];\n\n  var [data, setData] = useState([]);\n\n  useEffect(() => {\n    setData(datas);\n  }, []);\n  const accend = (e) => {\n    datas = datas.sort((a, b) => {\n      if (a.first_name < b.first_name) {\n        return -1;\n      }\n    });\n    console.log(e.target.id);\n    setData(datas);\n  };\n  const decend = (e) => {\n    datas = datas.sort((a, b) => {\n      if (a.first_name > b.first_name) {\n        return -1;\n      }\n    });\n    console.log(e.target.id);\n    setData(datas);\n  };\n\n  return (\n    <>\n      <table>\n        <th>\n          <div className=\"navbar\">\n            <div className=\"dropdown\">\n              <button className=\"dropbtn\">\n                First Name\n                <i className=\"fa fa-caret-down\"></i>\n              </button>\n              <div className=\"dropdown-content\">\n                <div className=\"column\">\n                  <button className=\"btn\" id1=\"a.first_name\" onClick={accend}>\n                    ascend order\n                  </button>\n                  <button className=\"btn\" id=\"b.first_name\" onClick={decend}>\n                    Decend order\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </th>\n        <th>Last Name</th>\n        <th>Email</th>\n        <th>Gender</th>\n        <th>IP address</th>\n        <th>airport code</th>\n        <th>Time</th>\n        <th>Status</th>\n        <th>Mobile</th>\n        <th>Area</th>\n        <th>Show</th>\n        <th>Edit</th>\n        {data.map((items, idx) => {\n          return (\n            <>\n              <Table item={items} />\n            </>\n          );\n        })}\n      </table>\n    </>\n  );\n};\n\nexport default TableComponent;\n"
        },
        "index.css": {
            "code": ""
        },
        "index.js": {
            "code": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
        },
        "reportWebVitals.js": {
            "code": "const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"
        }
    },
    "ci-cd-learning": {
        "README.md": {
            "code": "# ci-cd-learning"
        },
        "__init__.py": {
            "code": ""
        },
        "asgi.py": {
            "code": "\"\"\"\nASGI config for backend project.\n\nIt exposes the ASGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/howto/deployment/asgi/\n\"\"\"\n\nimport os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')\n\napplication = get_asgi_application()\n"
        },
        "settings.py": {
            "code": "\"\"\"\nDjango settings for backend project.\n\nGenerated by 'django-admin startproject' using Django 4.2.1.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.2/ref/settings/\n\"\"\"\n\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-q1a6$@f2dpn*w-4a24+vv9qm=126kkhrj*#ine%x+*=__7)&$3'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'corsheaders',\n    'rest_framework',\n    'homepage',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n]\n\nROOT_URLCONF = 'backend.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'backend.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.2/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\n\nCORS_ORIGIN_WHITELIST = [\n     'http://localhost:3000'\n]"
        },
        "urls.py": {
            "code": "\"\"\"\nURL configuration for backend project.\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/4.2/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom django.urls import path, include\nfrom rest_framework import routers\nfrom homepage import views\n# from homepage.views import message_view, homepage\n\nrouter=routers.DefaultRouter()\n# router.register(r\"homepages\", home_page_view, 'homepage')\n\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('homepage.urls')),\n]\n"
        },
        "wsgi.py": {
            "code": "\"\"\"\nWSGI config for backend project.\n\nIt exposes the WSGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/howto/deployment/wsgi/\n\"\"\"\n\nimport os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')\n\napplication = get_wsgi_application()\n"
        },
        "admin.py": {
            "code": "from django.contrib import admin\n\nfrom .models import Messages, EmailIds\n\n# Register your models here.\n\nclass MessagesAdmin(admin.ModelAdmin):\n    list_display=(\"first_name\", \"last_name\", \"email_id\",\"message_box\")\n    \nclass EmailIdsAdmin(admin.ModelAdmin):\n    list_display=(\"email_id\",)\n\nadmin.site.register(Messages, MessagesAdmin)\nadmin.site.register(EmailIds, EmailIdsAdmin)\n"
        },
        "apps.py": {
            "code": "from django.apps import AppConfig\n\n\nclass HomepageConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'homepage'\n"
        },
        "0001_initial.py": {
            "code": "# Generated by Django 4.2.1 on 2023-05-31 05:18\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    initial = True\n\n    dependencies = [\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='HomePage',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=120)),\n                ('title', models.CharField(max_length=50)),\n            ],\n        ),\n    ]\n"
        },
        "0002_homepage_email_address.py": {
            "code": "# Generated by Django 4.2.1 on 2023-05-31 05:55\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('homepage', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.AddField(\n            model_name='homepage',\n            name='email_address',\n            field=models.EmailField(default='none', max_length=120),\n            preserve_default=False,\n        ),\n    ]\n"
        },
        "0003_remove_homepage_title_homepage_concern.py": {
            "code": "# Generated by Django 4.2.1 on 2023-05-31 06:01\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('homepage', '0002_homepage_email_address'),\n    ]\n\n    operations = [\n        migrations.RemoveField(\n            model_name='homepage',\n            name='title',\n        ),\n        migrations.AddField(\n            model_name='homepage',\n            name='concern',\n            field=models.CharField(default='None', max_length=256),\n            preserve_default=False,\n        ),\n    ]\n"
        },
        "0004_rename_email_address_homepage_email_id_and_more.py": {
            "code": "# Generated by Django 4.2.1 on 2023-05-31 09:20\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('homepage', '0003_remove_homepage_title_homepage_concern'),\n    ]\n\n    operations = [\n        migrations.RenameField(\n            model_name='homepage',\n            old_name='email_address',\n            new_name='email_id',\n        ),\n        migrations.RenameField(\n            model_name='homepage',\n            old_name='name',\n            new_name='first_name',\n        ),\n        migrations.RenameField(\n            model_name='homepage',\n            old_name='concern',\n            new_name='message_box',\n        ),\n        migrations.AddField(\n            model_name='homepage',\n            name='last_name',\n            field=models.CharField(default='None', max_length=120),\n            preserve_default=False,\n        ),\n    ]\n"
        },
        "0005_emailids.py": {
            "code": "# Generated by Django 4.2.1 on 2023-06-03 03:46\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('homepage', '0004_rename_email_address_homepage_email_id_and_more'),\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='EmailIds',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('email_id', models.CharField(max_length=120)),\n            ],\n        ),\n    ]\n"
        },
        "0006_rename_homepage_messages.py": {
            "code": "# Generated by Django 4.2.1 on 2023-06-03 04:43\n\nfrom django.db import migrations\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('homepage', '0005_emailids'),\n    ]\n\n    operations = [\n        migrations.RenameModel(\n            old_name='HomePage',\n            new_name='Messages',\n        ),\n    ]\n"
        },
        "models.py": {
            "code": "from django.db import models\n\n# Create your models here.\n\n\nclass Messages(models.Model):\n    first_name = models.CharField(max_length=120)\n    last_name = models.CharField(max_length=120)\n    email_id=models.EmailField(max_length=120)\n    message_box=models.CharField(max_length=256)\n\n    def __str__(self):\n        return \"Data of \"+ self.first_name + \"Email address: \" +self.email_id\n\nclass EmailIds(models.Model):\n    email_id=models.CharField(max_length=120)\n\n    def __str__(self):\n        return self.email_id\n\n    "
        },
        "serializers.py": {
            "code": "from rest_framework import serializers\nfrom .models import Messages, EmailIds\n\nclass MessageSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=Messages\n        fields=(\"id\",\"first_name\",\"last_name\",\"email_id\",\"message_box\")\n\nclass EmailSerializer(serializers.ModelSerializer):\n    class Meta:\n        model=EmailIds\n        fields=(\"email_id\",)\n"
        },
        "tests.py": {
            "code": "from django.test import TestCase\n\n# Create your tests here.\n"
        },
        "manage.py": {
            "code": "#!/usr/bin/env python\n\"\"\"Django's command-line utility for administrative tasks.\"\"\"\nimport os\nimport sys\n\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()\n"
        }
    }
}